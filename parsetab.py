
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEAS ASSIGN BREAK CLASS COLON COMMA CONTINUE DEF DIVIDE ELIF ELSE END EQUAL EXCEPT FINALLY FOR FROM GLOBAL GREATER GREATEREQUAL ID IF IMPORT IN INPUT LESS LESSEQUAL LPAREN MINUS NEWLINE NONLOCAL NOTEQUAL NUMBER PASS PLUS PRINT RANGE RETURN RPAREN START STRING TIMES TRY WHILEprogram : START NEWLINE statements ENDstatements : statement\n                  | statements statement\n                  | statements NEWLINE\n                  | NEWLINEstatement : print_statement\n                 | assignment_statement NEWLINE\n                 | input_statement NEWLINE\n                 | if_statement\n                 | while_statement\n                 | for_statement\n                 | function_def\n                 | function_call\n                 | return_statement\n                 | break_statement\n                 | continue_statement\n                 | pass_statement\n                 | try_except_statement\n                 | import_statement\n                 | class_definitionprint_statement : PRINT LPAREN expression_list RPAREN NEWLINEexpression_list : expression\n                       | expression_list COMMA expressionassignment_statement : ID ASSIGN expressioninput_statement : ID ASSIGN INPUT LPAREN RPARENexpression : expression PLUS term\n                 | expression MINUS term\n                 | termterm : term TIMES factor\n            | term DIVIDE factor\n            | factorfactor : NUMBER\n              | STRING\n              | ID\n              | LPAREN expression RPAREN\n              | MINUS factorcomparison : expression LESS expression\n                  | expression GREATER expression\n                  | expression EQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression LESSEQUAL expression\n                  | expression GREATEREQUAL expressionif_statement : IF LPAREN expression RPAREN COLON statements\n                    | IF LPAREN expression RPAREN COLON statements ELSE COLON statements\n                    | IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statementswhile_statement : WHILE LPAREN expression RPAREN COLON statementsfor_statement : FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statementsfunction_def : DEF ID LPAREN parameter_list RPAREN COLON statementsparameter_list : empty\n                      | ID\n                      | parameter_list COMMA IDfunction_call : ID LPAREN argument_list RPARENargument_list : empty\n                     | expression\n                     | argument_list COMMA expressionreturn_statement : RETURN expressionbreak_statement : BREAKcontinue_statement : CONTINUEpass_statement : PASStry_except_statement : TRY COLON statements EXCEPT COLON statements\n                            | TRY COLON statements EXCEPT COLON statements FINALLY COLON statementsimport_statement : IMPORT ID\n                        | FROM ID IMPORT IDclass_definition : CLASS ID COLON statements\n                        | CLASS ID LPAREN ID RPAREN COLON statementsempty :'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,37,],[0,-1,]),'NEWLINE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,62,75,77,79,81,84,92,93,94,95,96,98,99,101,103,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[3,4,-5,36,-2,-6,39,40,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,4,-62,-24,-36,36,4,101,-52,-26,-27,-29,-30,-35,-63,36,-21,-25,4,4,4,36,36,4,36,4,36,36,4,4,36,36,4,36,4,36,]),'PRINT':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[22,-5,22,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,22,-62,-36,22,22,-52,-26,-27,-29,-30,-35,-63,22,-21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ID':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,70,71,72,73,74,75,77,78,79,80,82,84,85,92,93,94,95,96,98,99,101,105,106,109,110,112,113,115,117,118,122,124,125,126,128,129,132,135,137,138,139,],[23,-5,23,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,47,54,-57,-58,-59,57,58,59,-4,-3,-7,-8,54,54,54,54,54,69,-56,-28,54,-31,-32,-33,-34,54,23,-62,89,54,54,54,54,-36,23,98,23,100,54,-52,54,-26,-27,-29,-30,-35,-63,23,-21,23,23,116,23,23,23,23,23,23,23,23,23,54,23,23,23,23,23,23,23,]),'IF':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[24,-5,24,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,24,-62,-36,24,24,-52,-26,-27,-29,-30,-35,-63,24,-21,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'WHILE':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[25,-5,25,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,25,-62,-36,25,25,-52,-26,-27,-29,-30,-35,-63,25,-21,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FOR':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[26,-5,26,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,26,-62,-36,26,26,-52,-26,-27,-29,-30,-35,-63,26,-21,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'DEF':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[27,-5,27,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,27,-62,-36,27,27,-52,-26,-27,-29,-30,-35,-63,27,-21,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'RETURN':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[28,-5,28,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,28,-62,-36,28,28,-52,-26,-27,-29,-30,-35,-63,28,-21,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'BREAK':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[29,-5,29,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,29,-62,-36,29,29,-52,-26,-27,-29,-30,-35,-63,29,-21,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'CONTINUE':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[30,-5,30,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,30,-62,-36,30,30,-52,-26,-27,-29,-30,-35,-63,30,-21,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'PASS':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[31,-5,31,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,31,-62,-36,31,31,-52,-26,-27,-29,-30,-35,-63,31,-21,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'TRY':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[32,-5,32,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,32,-62,-36,32,32,-52,-26,-27,-29,-30,-35,-63,32,-21,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'IMPORT':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,58,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[33,-5,33,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,33,-62,78,-36,33,33,-52,-26,-27,-29,-30,-35,-63,33,-21,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'FROM':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[34,-5,34,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,34,-62,-36,34,34,-52,-26,-27,-29,-30,-35,-63,34,-21,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'CLASS':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,56,57,75,77,79,84,92,93,94,95,96,98,99,101,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[35,-5,35,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,35,-62,-36,35,35,-52,-26,-27,-29,-30,-35,-63,35,-21,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'END':([4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,57,75,84,92,93,94,95,96,98,99,101,112,113,117,122,124,129,132,137,139,],[-5,37,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,-62,-36,-52,-26,-27,-29,-30,-35,-63,-64,-21,-43,-46,-60,-48,-65,-44,-61,-45,-47,]),'EXCEPT':([4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,57,75,77,84,92,93,94,95,96,98,99,101,112,113,117,122,124,129,132,137,139,],[-5,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,-62,-36,97,-52,-26,-27,-29,-30,-35,-63,-64,-21,-43,-46,-60,-48,-65,-44,-61,-45,-47,]),'ELSE':([4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,57,75,84,92,93,94,95,96,98,99,101,112,113,117,122,124,129,132,137,139,],[-5,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,-62,-36,-52,-26,-27,-29,-30,-35,-63,-64,-21,119,-46,-60,-48,-65,-44,-61,-45,-47,]),'ELIF':([4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,57,75,84,92,93,94,95,96,98,99,101,112,113,117,122,124,129,132,137,139,],[-5,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,-62,-36,-52,-26,-27,-29,-30,-35,-63,-64,-21,120,-46,-60,-48,-65,-44,-61,-45,-47,]),'FINALLY':([4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,52,53,54,57,75,84,92,93,94,95,96,98,99,101,112,113,117,122,124,129,132,137,139,],[-5,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-57,-58,-59,-4,-3,-7,-8,-56,-28,-31,-32,-33,-34,-62,-36,-52,-26,-27,-29,-30,-35,-63,-64,-21,-43,-46,123,-48,-65,-44,-61,-45,-47,]),'LPAREN':([22,23,24,25,26,28,41,42,43,44,45,47,50,55,59,63,71,72,73,74,82,85,107,120,126,],[41,43,44,45,46,55,55,55,55,55,55,70,55,55,80,83,55,55,55,55,55,55,114,126,55,]),'ASSIGN':([23,],[42,]),'NUMBER':([28,41,42,43,44,45,50,55,71,72,73,74,82,85,114,126,127,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,121,52,131,]),'STRING':([28,41,42,43,44,45,50,55,71,72,73,74,82,85,126,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'MINUS':([28,41,42,43,44,45,48,49,50,51,52,53,54,55,61,62,66,67,68,71,72,73,74,75,76,82,85,92,93,94,95,96,102,104,126,130,],[50,50,50,50,50,50,72,-28,50,-31,-32,-33,-34,50,72,72,72,72,72,50,50,50,50,-36,72,50,50,-26,-27,-29,-30,-35,72,72,50,72,]),'COLON':([32,59,86,87,97,108,111,119,123,133,136,],[56,79,105,106,110,115,118,125,128,135,138,]),'INPUT':([42,],[63,]),'RPAREN':([43,49,51,52,53,54,60,61,64,65,66,67,68,70,75,76,83,89,90,91,92,93,94,95,96,100,102,104,116,130,131,134,],[-66,-28,-31,-32,-33,-34,81,-22,84,-53,-54,86,87,-66,-36,96,103,-50,108,-49,-26,-27,-29,-30,-35,111,-23,-55,-51,133,134,136,]),'COMMA':([43,49,51,52,53,54,60,61,64,65,66,70,75,89,90,91,92,93,94,95,96,102,104,116,121,],[-66,-28,-31,-32,-33,-34,82,-22,85,-53,-54,-66,-36,-50,109,-49,-26,-27,-29,-30,-35,-23,-55,-51,127,]),'PLUS':([48,49,51,52,53,54,61,62,66,67,68,75,76,92,93,94,95,96,102,104,130,],[71,-28,-31,-32,-33,-34,71,71,71,71,71,-36,71,-26,-27,-29,-30,-35,71,71,71,]),'TIMES':([49,51,52,53,54,75,92,93,94,95,96,],[73,-31,-32,-33,-34,-36,73,73,-29,-30,-35,]),'DIVIDE':([49,51,52,53,54,75,92,93,94,95,96,],[74,-31,-32,-33,-34,-36,74,74,-29,-30,-35,]),'IN':([69,],[88,]),'RANGE':([88,],[107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([3,56,79,105,106,110,115,118,125,128,135,138,],[5,77,99,112,113,117,122,124,129,132,137,139,]),'statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[6,38,6,38,6,38,6,6,6,38,38,6,38,6,38,38,6,6,38,38,6,38,6,38,]),'print_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assignment_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'input_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'if_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'while_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'for_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_def':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'function_call':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'return_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'break_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'continue_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'pass_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try_except_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'import_statement':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'class_definition':([3,5,56,77,79,99,105,106,110,112,113,115,117,118,122,124,125,128,129,132,135,137,138,139,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expression':([28,41,42,43,44,45,55,82,85,126,],[48,61,62,66,67,68,76,102,104,130,]),'term':([28,41,42,43,44,45,55,71,72,82,85,126,],[49,49,49,49,49,49,49,92,93,49,49,49,]),'factor':([28,41,42,43,44,45,50,55,71,72,73,74,82,85,126,],[51,51,51,51,51,51,75,51,51,51,94,95,51,51,51,]),'expression_list':([41,],[60,]),'argument_list':([43,],[64,]),'empty':([43,70,],[65,91,]),'parameter_list':([70,],[90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> START NEWLINE statements END','program',4,'p_program','parser.py',11),
  ('statements -> statement','statements',1,'p_statements','parser.py',16),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',17),
  ('statements -> statements NEWLINE','statements',2,'p_statements','parser.py',18),
  ('statements -> NEWLINE','statements',1,'p_statements','parser.py',19),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',29),
  ('statement -> assignment_statement NEWLINE','statement',2,'p_statement','parser.py',30),
  ('statement -> input_statement NEWLINE','statement',2,'p_statement','parser.py',31),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> function_def','statement',1,'p_statement','parser.py',35),
  ('statement -> function_call','statement',1,'p_statement','parser.py',36),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> continue_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> pass_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> try_except_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> import_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> class_definition','statement',1,'p_statement','parser.py',43),
  ('print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE','print_statement',5,'p_print_statement','parser.py',48),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',53),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',54),
  ('assignment_statement -> ID ASSIGN expression','assignment_statement',3,'p_assignment_statement','parser.py',62),
  ('input_statement -> ID ASSIGN INPUT LPAREN RPAREN','input_statement',5,'p_input_statement','parser.py',67),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',72),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',73),
  ('expression -> term','expression',1,'p_expression','parser.py',74),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',82),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',83),
  ('term -> factor','term',1,'p_term','parser.py',84),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',92),
  ('factor -> STRING','factor',1,'p_factor','parser.py',93),
  ('factor -> ID','factor',1,'p_factor','parser.py',94),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',95),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',96),
  ('comparison -> expression LESS expression','comparison',3,'p_comparison','parser.py',110),
  ('comparison -> expression GREATER expression','comparison',3,'p_comparison','parser.py',111),
  ('comparison -> expression EQUAL expression','comparison',3,'p_comparison','parser.py',112),
  ('comparison -> expression NOTEQUAL expression','comparison',3,'p_comparison','parser.py',113),
  ('comparison -> expression LESSEQUAL expression','comparison',3,'p_comparison','parser.py',114),
  ('comparison -> expression GREATEREQUAL expression','comparison',3,'p_comparison','parser.py',115),
  ('if_statement -> IF LPAREN expression RPAREN COLON statements','if_statement',6,'p_if_statement','parser.py',128),
  ('if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements','if_statement',9,'p_if_statement','parser.py',129),
  ('if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements','if_statement',12,'p_if_statement','parser.py',130),
  ('while_statement -> WHILE LPAREN expression RPAREN COLON statements','while_statement',6,'p_while_statement','parser.py',141),
  ('for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements','for_statement',13,'p_for_statement','parser.py',146),
  ('function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements','function_def',7,'p_function_def','parser.py',151),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','parser.py',156),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list','parser.py',157),
  ('parameter_list -> parameter_list COMMA ID','parameter_list',3,'p_parameter_list','parser.py',158),
  ('function_call -> ID LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',168),
  ('argument_list -> empty','argument_list',1,'p_argument_list','parser.py',173),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',174),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',175),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',185),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','parser.py',190),
  ('continue_statement -> CONTINUE','continue_statement',1,'p_continue_statement','parser.py',195),
  ('pass_statement -> PASS','pass_statement',1,'p_pass_statement','parser.py',200),
  ('try_except_statement -> TRY COLON statements EXCEPT COLON statements','try_except_statement',6,'p_try_except_statement','parser.py',205),
  ('try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements','try_except_statement',9,'p_try_except_statement','parser.py',206),
  ('import_statement -> IMPORT ID','import_statement',2,'p_import_statement','parser.py',214),
  ('import_statement -> FROM ID IMPORT ID','import_statement',4,'p_import_statement','parser.py',215),
  ('class_definition -> CLASS ID COLON statements','class_definition',4,'p_class_definition','parser.py',223),
  ('class_definition -> CLASS ID LPAREN ID RPAREN COLON statements','class_definition',7,'p_class_definition','parser.py',224),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',232),
]
