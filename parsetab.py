
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEFLOOR_DIVIDEMODULOrightPOWERleftGREATERLESSGREATEREQUALLESSEQUALEQUALNOTEQUALrightNOTAS ASSIGN BREAK CLASS COLON COMMA CONTINUE DEF DIVIDE ELIF ELSE END END_IF EQUAL EXCEPT FALSE FINALLY FLOOR_DIVIDE FOR FROM GLOBAL GREATER GREATEREQUAL ID IF IMPORT IN INPUT LESS LESSEQUAL LPAREN MINUS MODULO NEWLINE NONLOCAL NOT NOTEQUAL NUMBER PASS PLUS POWER PRINT RANGE RETURN RPAREN START STRING TIMES TRUE TRY WHILEprogram : START NEWLINE statements ENDstatements : statement\n                  | statements statement\n                  | statements NEWLINE\n                  | NEWLINEstatement : print_statement\n                 | assignment_statement NEWLINE\n                 | input_statement NEWLINE\n                 | if_statement\n                 | while_statement\n                 | for_statement\n                 | function_def\n                 | function_call\n                 | return_statement\n                 | break_statement\n                 | continue_statement\n                 | pass_statement\n                 | try_except_statement\n                 | import_statement\n                 | class_definitionprint_statement : PRINT LPAREN expression_list RPAREN NEWLINEexpression_list : expression\n                       | expression_list COMMA expressionassignment_statement : ID ASSIGN expressioninput_statement : ID ASSIGN INPUT LPAREN RPARENexpression : expression PLUS term\n                  | expression MINUS term\n                  | expression POWER term\n                  | comparison\n                  | term\n                  | NOT expressionterm : term TIMES factor\n            | term DIVIDE factor\n            | term FLOOR_DIVIDE factor\n            | term MODULO factor\n            | factorfactor : NUMBER\n              | STRING\n              | TRUE\n              | FALSE\n              | ID\n              | LPAREN expression RPAREN\n              | MINUS factorcomparison : expression LESS expression\n                  | expression GREATER expression\n                  | expression EQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression LESSEQUAL expression\n                  | expression GREATEREQUAL expressionif_statement : IF LPAREN expression RPAREN statements END\n                    | IF LPAREN expression RPAREN statements ELSE statements END\n                    | IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements ENDwhile_statement : WHILE LPAREN expression RPAREN statements ENDfor_statement : FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements ENDfunction_def : DEF ID LPAREN parameter_list RPAREN COLON statementsparameter_list : empty\n                      | ID\n                      | parameter_list COMMA IDfunction_call : ID LPAREN argument_list RPARENargument_list : empty\n                     | expression\n                     | argument_list COMMA expressionreturn_statement : RETURN expressionbreak_statement : BREAKcontinue_statement : CONTINUEpass_statement : PASStry_except_statement : TRY COLON statements EXCEPT COLON statements\n                            | TRY COLON statements EXCEPT COLON statements FINALLY COLON statementsimport_statement : IMPORT ID\n                        | FROM ID IMPORT IDclass_definition : CLASS ID COLON statements\n                        | CLASS ID LPAREN ID RPAREN COLON statementsempty :'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,37,],[0,-1,]),'NEWLINE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,66,88,89,91,93,95,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,126,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[3,4,-5,36,-2,-6,39,40,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,4,-69,-24,-43,-31,36,4,124,-59,4,4,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,36,-21,-25,36,36,4,-50,4,-53,4,36,4,36,36,36,-51,4,4,36,36,4,4,36,36,-52,-54,]),'PRINT':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[22,-5,22,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,22,-69,-43,-31,22,22,-59,22,22,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,22,-21,22,22,22,-50,22,-53,22,22,22,22,22,22,-51,22,22,22,22,22,22,22,22,-52,-54,]),'ID':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,27,28,29,30,31,33,34,35,36,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,96,98,99,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,132,133,135,136,138,140,142,143,144,145,147,149,150,153,154,156,157,159,160,161,162,163,164,],[23,-5,23,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,47,58,-64,-65,-66,61,62,63,-4,-3,-7,-8,58,58,58,58,58,73,-63,-30,58,-29,58,-36,-37,-38,-39,-40,-41,58,23,-69,103,58,58,58,58,58,58,58,58,58,58,58,58,58,-43,-31,23,121,23,123,58,-59,58,23,23,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,23,-21,23,23,141,23,-50,23,-53,23,23,23,23,58,23,23,-51,23,23,23,23,23,23,23,23,-52,-54,]),'IF':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[24,-5,24,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,24,-69,-43,-31,24,24,-59,24,24,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,24,-21,24,24,24,-50,24,-53,24,24,24,24,24,24,-51,24,24,24,24,24,24,24,24,-52,-54,]),'WHILE':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[25,-5,25,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,25,-69,-43,-31,25,25,-59,25,25,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,25,-21,25,25,25,-50,25,-53,25,25,25,25,25,25,-51,25,25,25,25,25,25,25,25,-52,-54,]),'FOR':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[26,-5,26,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,26,-69,-43,-31,26,26,-59,26,26,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,26,-21,26,26,26,-50,26,-53,26,26,26,26,26,26,-51,26,26,26,26,26,26,26,26,-52,-54,]),'DEF':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[27,-5,27,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,27,-69,-43,-31,27,27,-59,27,27,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,27,-21,27,27,27,-50,27,-53,27,27,27,27,27,27,-51,27,27,27,27,27,27,27,27,-52,-54,]),'RETURN':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[28,-5,28,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,28,-69,-43,-31,28,28,-59,28,28,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,28,-21,28,28,28,-50,28,-53,28,28,28,28,28,28,-51,28,28,28,28,28,28,28,28,-52,-54,]),'BREAK':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[29,-5,29,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,29,-69,-43,-31,29,29,-59,29,29,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,29,-21,29,29,29,-50,29,-53,29,29,29,29,29,29,-51,29,29,29,29,29,29,29,29,-52,-54,]),'CONTINUE':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[30,-5,30,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,30,-69,-43,-31,30,30,-59,30,30,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,30,-21,30,30,30,-50,30,-53,30,30,30,30,30,30,-51,30,30,30,30,30,30,30,30,-52,-54,]),'PASS':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[31,-5,31,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,31,-69,-43,-31,31,31,-59,31,31,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,31,-21,31,31,31,-50,31,-53,31,31,31,31,31,31,-51,31,31,31,31,31,31,31,31,-52,-54,]),'TRY':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[32,-5,32,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,32,-69,-43,-31,32,32,-59,32,32,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,32,-21,32,32,32,-50,32,-53,32,32,32,32,32,32,-51,32,32,32,32,32,32,32,32,-52,-54,]),'IMPORT':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,62,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[33,-5,33,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,33,-69,92,-43,-31,33,33,-59,33,33,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,33,-21,33,33,33,-50,33,-53,33,33,33,33,33,33,-51,33,33,33,33,33,33,33,33,-52,-54,]),'FROM':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[34,-5,34,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,34,-69,-43,-31,34,34,-59,34,34,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,34,-21,34,34,34,-50,34,-53,34,34,34,34,34,34,-51,34,34,34,34,34,34,34,34,-52,-54,]),'CLASS':([3,4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,60,61,88,89,91,93,98,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,133,135,136,138,140,142,143,144,147,149,150,153,154,156,157,159,160,161,162,163,164,],[35,-5,35,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,35,-69,-43,-31,35,35,-59,35,35,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,35,-21,35,35,35,-50,35,-53,35,35,35,35,35,35,-51,35,35,35,35,35,35,35,35,-52,-54,]),'END':([4,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,61,88,89,98,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,129,135,138,142,144,147,149,150,156,161,162,163,164,],[-5,37,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,-69,-43,-31,-59,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,-71,-21,135,138,-50,-53,-67,150,-55,-72,-51,-68,163,164,-52,-54,]),'EXCEPT':([4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,61,88,89,91,98,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,135,138,142,147,149,150,156,163,164,],[-5,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,-69,-43,-31,120,-59,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,-71,-21,-50,-53,-67,-55,-72,-51,-68,-52,-54,]),'ELSE':([4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,61,88,89,98,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,135,138,142,147,149,150,156,157,163,164,],[-5,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,-69,-43,-31,-59,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,-71,-21,136,-50,-53,-67,-55,-72,-51,-68,159,-52,-54,]),'ELIF':([4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,61,88,89,98,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,128,135,138,142,147,149,150,156,163,164,],[-5,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,-69,-43,-31,-59,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,-71,-21,137,-50,-53,-67,-55,-72,-51,-68,-52,-54,]),'FINALLY':([4,6,7,10,11,12,13,14,15,16,17,18,19,20,21,29,30,31,36,38,39,40,48,49,51,53,54,55,56,57,58,61,88,89,98,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,124,135,138,142,147,149,150,156,163,164,],[-5,-2,-6,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-64,-65,-66,-4,-3,-7,-8,-63,-30,-29,-36,-37,-38,-39,-40,-41,-69,-43,-31,-59,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-70,-71,-21,-50,-53,148,-55,-72,-51,-68,-52,-54,]),'LPAREN':([22,23,24,25,26,28,41,42,43,44,45,47,50,52,59,63,67,75,76,77,78,79,80,81,82,83,84,85,86,87,96,99,130,137,145,],[41,43,44,45,46,59,59,59,59,59,59,74,59,59,59,94,97,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,139,145,59,]),'ASSIGN':([23,],[42,]),'NOT':([28,41,42,43,44,45,52,59,78,79,80,81,82,83,96,99,145,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'NUMBER':([28,41,42,43,44,45,50,52,59,75,76,77,78,79,80,81,82,83,84,85,86,87,96,99,139,145,152,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,146,54,155,]),'STRING':([28,41,42,43,44,45,50,52,59,75,76,77,78,79,80,81,82,83,84,85,86,87,96,99,145,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'TRUE':([28,41,42,43,44,45,50,52,59,75,76,77,78,79,80,81,82,83,84,85,86,87,96,99,145,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FALSE':([28,41,42,43,44,45,50,52,59,75,76,77,78,79,80,81,82,83,84,85,86,87,96,99,145,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'MINUS':([28,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,65,66,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,145,151,],[50,50,50,50,50,50,76,-30,50,-29,50,-36,-37,-38,-39,-40,-41,50,76,76,76,76,76,50,50,50,50,50,50,50,50,50,50,50,50,50,-43,-31,76,50,50,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,76,76,50,76,]),'COLON':([32,63,120,131,134,148,],[60,93,133,140,143,153,]),'INPUT':([42,],[67,]),'RPAREN':([43,49,51,53,54,55,56,57,58,64,65,68,69,70,71,72,74,88,89,90,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,125,127,141,151,155,158,],[-73,-30,-29,-36,-37,-38,-39,-40,-41,95,-22,98,-60,-61,100,101,-73,-43,-31,119,126,-57,131,-56,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,134,-23,-62,-58,154,158,160,]),'COMMA':([43,49,51,53,54,55,56,57,58,64,65,68,69,70,74,88,89,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,141,146,],[-73,-30,-29,-36,-37,-38,-39,-40,-41,96,-22,99,-60,-61,-73,-43,-31,-57,132,-56,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,-23,-62,-58,152,]),'PLUS':([48,49,51,53,54,55,56,57,58,65,66,70,71,72,88,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,151,],[75,-30,-29,-36,-37,-38,-39,-40,-41,75,75,75,75,75,-43,-31,75,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,75,75,75,]),'POWER':([48,49,51,53,54,55,56,57,58,65,66,70,71,72,88,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,151,],[77,-30,-29,-36,-37,-38,-39,-40,-41,77,77,77,77,77,-43,-31,77,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,77,77,77,]),'LESS':([48,49,51,53,54,55,56,57,58,65,66,70,71,72,88,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,151,],[78,-30,-29,-36,-37,-38,-39,-40,-41,78,78,78,78,78,-43,-31,78,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,78,78,78,]),'GREATER':([48,49,51,53,54,55,56,57,58,65,66,70,71,72,88,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,151,],[79,-30,-29,-36,-37,-38,-39,-40,-41,79,79,79,79,79,-43,-31,79,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,79,79,79,]),'EQUAL':([48,49,51,53,54,55,56,57,58,65,66,70,71,72,88,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,151,],[80,-30,-29,-36,-37,-38,-39,-40,-41,80,80,80,80,80,-43,-31,80,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,80,80,80,]),'NOTEQUAL':([48,49,51,53,54,55,56,57,58,65,66,70,71,72,88,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,151,],[81,-30,-29,-36,-37,-38,-39,-40,-41,81,81,81,81,81,-43,-31,81,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,81,81,81,]),'LESSEQUAL':([48,49,51,53,54,55,56,57,58,65,66,70,71,72,88,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,151,],[82,-30,-29,-36,-37,-38,-39,-40,-41,82,82,82,82,82,-43,-31,82,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,82,82,82,]),'GREATEREQUAL':([48,49,51,53,54,55,56,57,58,65,66,70,71,72,88,89,90,106,107,108,109,110,111,112,113,114,115,116,117,118,119,125,127,151,],[83,-30,-29,-36,-37,-38,-39,-40,-41,83,83,83,83,83,-43,-31,83,-26,-27,-28,-44,-45,-46,-47,-48,-49,-32,-33,-34,-35,-42,83,83,83,]),'TIMES':([49,53,54,55,56,57,58,88,106,107,108,115,116,117,118,119,],[84,-36,-37,-38,-39,-40,-41,-43,84,84,84,-32,-33,-34,-35,-42,]),'DIVIDE':([49,53,54,55,56,57,58,88,106,107,108,115,116,117,118,119,],[85,-36,-37,-38,-39,-40,-41,-43,85,85,85,-32,-33,-34,-35,-42,]),'FLOOR_DIVIDE':([49,53,54,55,56,57,58,88,106,107,108,115,116,117,118,119,],[86,-36,-37,-38,-39,-40,-41,-43,86,86,86,-32,-33,-34,-35,-42,]),'MODULO':([49,53,54,55,56,57,58,88,106,107,108,115,116,117,118,119,],[87,-36,-37,-38,-39,-40,-41,-43,87,87,87,-32,-33,-34,-35,-42,]),'IN':([73,],[102,]),'RANGE':([102,],[130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([3,60,93,100,101,133,136,140,143,153,154,159,160,],[5,91,122,128,129,142,144,147,149,156,157,161,162,]),'statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[6,38,6,38,6,6,6,38,38,38,6,6,6,38,6,38,38,38,6,6,38,38,6,6,38,38,]),'print_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'assignment_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'input_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'if_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'while_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'for_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_def':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'function_call':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'return_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'break_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'continue_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'pass_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try_except_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'import_statement':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'class_definition':([3,5,60,91,93,100,101,122,128,129,133,136,140,142,143,144,147,149,153,154,156,157,159,160,161,162,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expression':([28,41,42,43,44,45,52,59,78,79,80,81,82,83,96,99,145,],[48,65,66,70,71,72,89,90,109,110,111,112,113,114,125,127,151,]),'term':([28,41,42,43,44,45,52,59,75,76,77,78,79,80,81,82,83,96,99,145,],[49,49,49,49,49,49,49,49,106,107,108,49,49,49,49,49,49,49,49,49,]),'comparison':([28,41,42,43,44,45,52,59,78,79,80,81,82,83,96,99,145,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'factor':([28,41,42,43,44,45,50,52,59,75,76,77,78,79,80,81,82,83,84,85,86,87,96,99,145,],[53,53,53,53,53,53,88,53,53,53,53,53,53,53,53,53,53,53,115,116,117,118,53,53,53,]),'expression_list':([41,],[64,]),'argument_list':([43,],[68,]),'empty':([43,74,],[69,105,]),'parameter_list':([74,],[104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> START NEWLINE statements END','program',4,'p_program','parser.py',13),
  ('statements -> statement','statements',1,'p_statements','parser.py',17),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',18),
  ('statements -> statements NEWLINE','statements',2,'p_statements','parser.py',19),
  ('statements -> NEWLINE','statements',1,'p_statements','parser.py',20),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',29),
  ('statement -> assignment_statement NEWLINE','statement',2,'p_statement','parser.py',30),
  ('statement -> input_statement NEWLINE','statement',2,'p_statement','parser.py',31),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> function_def','statement',1,'p_statement','parser.py',35),
  ('statement -> function_call','statement',1,'p_statement','parser.py',36),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> continue_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> pass_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> try_except_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> import_statement','statement',1,'p_statement','parser.py',42),
  ('statement -> class_definition','statement',1,'p_statement','parser.py',43),
  ('print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE','print_statement',5,'p_print_statement','parser.py',47),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',51),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',52),
  ('assignment_statement -> ID ASSIGN expression','assignment_statement',3,'p_assignment_statement','parser.py',59),
  ('input_statement -> ID ASSIGN INPUT LPAREN RPAREN','input_statement',5,'p_input_statement','parser.py',63),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',67),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',68),
  ('expression -> expression POWER term','expression',3,'p_expression','parser.py',69),
  ('expression -> comparison','expression',1,'p_expression','parser.py',70),
  ('expression -> term','expression',1,'p_expression','parser.py',71),
  ('expression -> NOT expression','expression',2,'p_expression','parser.py',72),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',81),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',82),
  ('term -> term FLOOR_DIVIDE factor','term',3,'p_term','parser.py',83),
  ('term -> term MODULO factor','term',3,'p_term','parser.py',84),
  ('term -> factor','term',1,'p_term','parser.py',85),
  ('factor -> NUMBER','factor',1,'p_factor','parser.py',92),
  ('factor -> STRING','factor',1,'p_factor','parser.py',93),
  ('factor -> TRUE','factor',1,'p_factor','parser.py',94),
  ('factor -> FALSE','factor',1,'p_factor','parser.py',95),
  ('factor -> ID','factor',1,'p_factor','parser.py',96),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',97),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',98),
  ('comparison -> expression LESS expression','comparison',3,'p_comparison','parser.py',134),
  ('comparison -> expression GREATER expression','comparison',3,'p_comparison','parser.py',135),
  ('comparison -> expression EQUAL expression','comparison',3,'p_comparison','parser.py',136),
  ('comparison -> expression NOTEQUAL expression','comparison',3,'p_comparison','parser.py',137),
  ('comparison -> expression LESSEQUAL expression','comparison',3,'p_comparison','parser.py',138),
  ('comparison -> expression GREATEREQUAL expression','comparison',3,'p_comparison','parser.py',139),
  ('if_statement -> IF LPAREN expression RPAREN statements END','if_statement',6,'p_if_statement','parser.py',151),
  ('if_statement -> IF LPAREN expression RPAREN statements ELSE statements END','if_statement',8,'p_if_statement','parser.py',152),
  ('if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END','if_statement',13,'p_if_statement','parser.py',153),
  ('while_statement -> WHILE LPAREN expression RPAREN statements END','while_statement',6,'p_while_statement','parser.py',163),
  ('for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END','for_statement',13,'p_for_statement','parser.py',167),
  ('function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements','function_def',7,'p_function_def','parser.py',171),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','parser.py',175),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list','parser.py',176),
  ('parameter_list -> parameter_list COMMA ID','parameter_list',3,'p_parameter_list','parser.py',177),
  ('function_call -> ID LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',186),
  ('argument_list -> empty','argument_list',1,'p_argument_list','parser.py',190),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',191),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',192),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',201),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement','parser.py',205),
  ('continue_statement -> CONTINUE','continue_statement',1,'p_continue_statement','parser.py',209),
  ('pass_statement -> PASS','pass_statement',1,'p_pass_statement','parser.py',213),
  ('try_except_statement -> TRY COLON statements EXCEPT COLON statements','try_except_statement',6,'p_try_except_statement','parser.py',217),
  ('try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements','try_except_statement',9,'p_try_except_statement','parser.py',218),
  ('import_statement -> IMPORT ID','import_statement',2,'p_import_statement','parser.py',225),
  ('import_statement -> FROM ID IMPORT ID','import_statement',4,'p_import_statement','parser.py',226),
  ('class_definition -> CLASS ID COLON statements','class_definition',4,'p_class_definition','parser.py',233),
  ('class_definition -> CLASS ID LPAREN ID RPAREN COLON statements','class_definition',7,'p_class_definition','parser.py',234),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',241),
]
