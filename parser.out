Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    END_IF
    GLOBAL
    NONLOCAL

Grammar

Rule 0     S' -> program
Rule 1     program -> START NEWLINE statements END
Rule 2     statements -> statement
Rule 3     statements -> statements statement
Rule 4     statements -> statements NEWLINE
Rule 5     statements -> NEWLINE
Rule 6     statement -> print_statement
Rule 7     statement -> assignment_statement NEWLINE
Rule 8     statement -> input_statement NEWLINE
Rule 9     statement -> if_statement
Rule 10    statement -> while_statement
Rule 11    statement -> for_statement
Rule 12    statement -> function_def
Rule 13    statement -> function_call
Rule 14    statement -> return_statement
Rule 15    statement -> break_statement
Rule 16    statement -> continue_statement
Rule 17    statement -> pass_statement
Rule 18    statement -> try_except_statement
Rule 19    statement -> import_statement
Rule 20    statement -> class_definition
Rule 21    print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE
Rule 22    expression_list -> expression
Rule 23    expression_list -> expression_list COMMA expression
Rule 24    assignment_statement -> ID ASSIGN expression
Rule 25    input_statement -> ID ASSIGN INPUT LPAREN RPAREN
Rule 26    expression -> expression PLUS term
Rule 27    expression -> expression MINUS term
Rule 28    expression -> expression POWER term
Rule 29    expression -> comparison
Rule 30    expression -> term
Rule 31    expression -> NOT expression
Rule 32    term -> term TIMES factor
Rule 33    term -> term DIVIDE factor
Rule 34    term -> term FLOOR_DIVIDE factor
Rule 35    term -> term MODULO factor
Rule 36    term -> factor
Rule 37    factor -> NUMBER
Rule 38    factor -> STRING
Rule 39    factor -> TRUE
Rule 40    factor -> FALSE
Rule 41    factor -> ID
Rule 42    factor -> LPAREN expression RPAREN
Rule 43    factor -> MINUS factor
Rule 44    comparison -> expression LESS expression
Rule 45    comparison -> expression GREATER expression
Rule 46    comparison -> expression EQUAL expression
Rule 47    comparison -> expression NOTEQUAL expression
Rule 48    comparison -> expression LESSEQUAL expression
Rule 49    comparison -> expression GREATEREQUAL expression
Rule 50    if_statement -> IF LPAREN expression RPAREN statements END
Rule 51    if_statement -> IF LPAREN expression RPAREN statements ELSE statements END
Rule 52    if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
Rule 53    while_statement -> WHILE LPAREN expression RPAREN statements END
Rule 54    for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
Rule 55    function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements
Rule 56    parameter_list -> empty
Rule 57    parameter_list -> ID
Rule 58    parameter_list -> parameter_list COMMA ID
Rule 59    function_call -> ID LPAREN argument_list RPAREN
Rule 60    argument_list -> empty
Rule 61    argument_list -> expression
Rule 62    argument_list -> argument_list COMMA expression
Rule 63    return_statement -> RETURN expression
Rule 64    break_statement -> BREAK
Rule 65    continue_statement -> CONTINUE
Rule 66    pass_statement -> PASS
Rule 67    try_except_statement -> TRY COLON statements EXCEPT COLON statements
Rule 68    try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
Rule 69    import_statement -> IMPORT ID
Rule 70    import_statement -> FROM ID IMPORT ID
Rule 71    class_definition -> CLASS ID COLON statements
Rule 72    class_definition -> CLASS ID LPAREN ID RPAREN COLON statements
Rule 73    empty -> <empty>

Terminals, with rules where they appear

AS                   : 
ASSIGN               : 24 25
BREAK                : 64
CLASS                : 71 72
COLON                : 55 67 67 68 68 68 71 72
COMMA                : 23 54 58 62
CONTINUE             : 65
DEF                  : 55
DIVIDE               : 33
ELIF                 : 52
ELSE                 : 51 52
END                  : 1 50 51 52 53 54
END_IF               : 
EQUAL                : 46
EXCEPT               : 67 68
FALSE                : 40
FINALLY              : 68
FLOOR_DIVIDE         : 34
FOR                  : 54
FROM                 : 70
GLOBAL               : 
GREATER              : 45
GREATEREQUAL         : 49
ID                   : 24 25 41 54 55 57 58 59 69 70 70 71 72 72
IF                   : 50 51 52
IMPORT               : 69 70
IN                   : 54
INPUT                : 25
LESS                 : 44
LESSEQUAL            : 48
LPAREN               : 21 25 42 50 51 52 52 53 54 54 55 59 72
MINUS                : 27 43
MODULO               : 35
NEWLINE              : 1 4 5 7 8 21
NONLOCAL             : 
NOT                  : 31
NOTEQUAL             : 47
NUMBER               : 37 54 54
PASS                 : 66
PLUS                 : 26
POWER                : 28
PRINT                : 21
RANGE                : 54
RETURN               : 63
RPAREN               : 21 25 42 50 51 52 52 53 54 54 55 59 72
START                : 1
STRING               : 38
TIMES                : 32
TRUE                 : 39
TRY                  : 67 68
WHILE                : 53
error                : 

Nonterminals, with rules where they appear

argument_list        : 59 62
assignment_statement : 7
break_statement      : 15
class_definition     : 20
comparison           : 29
continue_statement   : 16
empty                : 56 60
expression           : 22 23 24 26 27 28 31 42 44 44 45 45 46 46 47 47 48 48 49 49 50 51 52 52 53 61 62 63
expression_list      : 21 23
factor               : 32 33 34 35 36 43
for_statement        : 11
function_call        : 13
function_def         : 12
if_statement         : 9
import_statement     : 19
input_statement      : 8
parameter_list       : 55 58
pass_statement       : 17
print_statement      : 6
program              : 0
return_statement     : 14
statement            : 2 3
statements           : 1 3 4 50 51 51 52 52 52 53 54 55 67 67 68 68 68 71 72
term                 : 26 27 28 30 32 33 34 35
try_except_statement : 18
while_statement      : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . START NEWLINE statements END

    START           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> START . NEWLINE statements END

    NEWLINE         shift and go to state 3


state 3

    (1) program -> START NEWLINE . statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 5
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 4

    (5) statements -> NEWLINE .

    END             reduce using rule 5 (statements -> NEWLINE .)
    NEWLINE         reduce using rule 5 (statements -> NEWLINE .)
    PRINT           reduce using rule 5 (statements -> NEWLINE .)
    ID              reduce using rule 5 (statements -> NEWLINE .)
    IF              reduce using rule 5 (statements -> NEWLINE .)
    WHILE           reduce using rule 5 (statements -> NEWLINE .)
    FOR             reduce using rule 5 (statements -> NEWLINE .)
    DEF             reduce using rule 5 (statements -> NEWLINE .)
    RETURN          reduce using rule 5 (statements -> NEWLINE .)
    BREAK           reduce using rule 5 (statements -> NEWLINE .)
    CONTINUE        reduce using rule 5 (statements -> NEWLINE .)
    PASS            reduce using rule 5 (statements -> NEWLINE .)
    TRY             reduce using rule 5 (statements -> NEWLINE .)
    IMPORT          reduce using rule 5 (statements -> NEWLINE .)
    FROM            reduce using rule 5 (statements -> NEWLINE .)
    CLASS           reduce using rule 5 (statements -> NEWLINE .)
    EXCEPT          reduce using rule 5 (statements -> NEWLINE .)
    ELSE            reduce using rule 5 (statements -> NEWLINE .)
    ELIF            reduce using rule 5 (statements -> NEWLINE .)
    FINALLY         reduce using rule 5 (statements -> NEWLINE .)


state 5

    (1) program -> START NEWLINE statements . END
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    END             shift and go to state 37
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 6

    (2) statements -> statement .

    END             reduce using rule 2 (statements -> statement .)
    NEWLINE         reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    DEF             reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)
    BREAK           reduce using rule 2 (statements -> statement .)
    CONTINUE        reduce using rule 2 (statements -> statement .)
    PASS            reduce using rule 2 (statements -> statement .)
    TRY             reduce using rule 2 (statements -> statement .)
    IMPORT          reduce using rule 2 (statements -> statement .)
    FROM            reduce using rule 2 (statements -> statement .)
    CLASS           reduce using rule 2 (statements -> statement .)
    EXCEPT          reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ELIF            reduce using rule 2 (statements -> statement .)
    FINALLY         reduce using rule 2 (statements -> statement .)


state 7

    (6) statement -> print_statement .

    END             reduce using rule 6 (statement -> print_statement .)
    NEWLINE         reduce using rule 6 (statement -> print_statement .)
    PRINT           reduce using rule 6 (statement -> print_statement .)
    ID              reduce using rule 6 (statement -> print_statement .)
    IF              reduce using rule 6 (statement -> print_statement .)
    WHILE           reduce using rule 6 (statement -> print_statement .)
    FOR             reduce using rule 6 (statement -> print_statement .)
    DEF             reduce using rule 6 (statement -> print_statement .)
    RETURN          reduce using rule 6 (statement -> print_statement .)
    BREAK           reduce using rule 6 (statement -> print_statement .)
    CONTINUE        reduce using rule 6 (statement -> print_statement .)
    PASS            reduce using rule 6 (statement -> print_statement .)
    TRY             reduce using rule 6 (statement -> print_statement .)
    IMPORT          reduce using rule 6 (statement -> print_statement .)
    FROM            reduce using rule 6 (statement -> print_statement .)
    CLASS           reduce using rule 6 (statement -> print_statement .)
    EXCEPT          reduce using rule 6 (statement -> print_statement .)
    ELSE            reduce using rule 6 (statement -> print_statement .)
    ELIF            reduce using rule 6 (statement -> print_statement .)
    FINALLY         reduce using rule 6 (statement -> print_statement .)


state 8

    (7) statement -> assignment_statement . NEWLINE

    NEWLINE         shift and go to state 39


state 9

    (8) statement -> input_statement . NEWLINE

    NEWLINE         shift and go to state 40


state 10

    (9) statement -> if_statement .

    END             reduce using rule 9 (statement -> if_statement .)
    NEWLINE         reduce using rule 9 (statement -> if_statement .)
    PRINT           reduce using rule 9 (statement -> if_statement .)
    ID              reduce using rule 9 (statement -> if_statement .)
    IF              reduce using rule 9 (statement -> if_statement .)
    WHILE           reduce using rule 9 (statement -> if_statement .)
    FOR             reduce using rule 9 (statement -> if_statement .)
    DEF             reduce using rule 9 (statement -> if_statement .)
    RETURN          reduce using rule 9 (statement -> if_statement .)
    BREAK           reduce using rule 9 (statement -> if_statement .)
    CONTINUE        reduce using rule 9 (statement -> if_statement .)
    PASS            reduce using rule 9 (statement -> if_statement .)
    TRY             reduce using rule 9 (statement -> if_statement .)
    IMPORT          reduce using rule 9 (statement -> if_statement .)
    FROM            reduce using rule 9 (statement -> if_statement .)
    CLASS           reduce using rule 9 (statement -> if_statement .)
    EXCEPT          reduce using rule 9 (statement -> if_statement .)
    ELSE            reduce using rule 9 (statement -> if_statement .)
    ELIF            reduce using rule 9 (statement -> if_statement .)
    FINALLY         reduce using rule 9 (statement -> if_statement .)


state 11

    (10) statement -> while_statement .

    END             reduce using rule 10 (statement -> while_statement .)
    NEWLINE         reduce using rule 10 (statement -> while_statement .)
    PRINT           reduce using rule 10 (statement -> while_statement .)
    ID              reduce using rule 10 (statement -> while_statement .)
    IF              reduce using rule 10 (statement -> while_statement .)
    WHILE           reduce using rule 10 (statement -> while_statement .)
    FOR             reduce using rule 10 (statement -> while_statement .)
    DEF             reduce using rule 10 (statement -> while_statement .)
    RETURN          reduce using rule 10 (statement -> while_statement .)
    BREAK           reduce using rule 10 (statement -> while_statement .)
    CONTINUE        reduce using rule 10 (statement -> while_statement .)
    PASS            reduce using rule 10 (statement -> while_statement .)
    TRY             reduce using rule 10 (statement -> while_statement .)
    IMPORT          reduce using rule 10 (statement -> while_statement .)
    FROM            reduce using rule 10 (statement -> while_statement .)
    CLASS           reduce using rule 10 (statement -> while_statement .)
    EXCEPT          reduce using rule 10 (statement -> while_statement .)
    ELSE            reduce using rule 10 (statement -> while_statement .)
    ELIF            reduce using rule 10 (statement -> while_statement .)
    FINALLY         reduce using rule 10 (statement -> while_statement .)


state 12

    (11) statement -> for_statement .

    END             reduce using rule 11 (statement -> for_statement .)
    NEWLINE         reduce using rule 11 (statement -> for_statement .)
    PRINT           reduce using rule 11 (statement -> for_statement .)
    ID              reduce using rule 11 (statement -> for_statement .)
    IF              reduce using rule 11 (statement -> for_statement .)
    WHILE           reduce using rule 11 (statement -> for_statement .)
    FOR             reduce using rule 11 (statement -> for_statement .)
    DEF             reduce using rule 11 (statement -> for_statement .)
    RETURN          reduce using rule 11 (statement -> for_statement .)
    BREAK           reduce using rule 11 (statement -> for_statement .)
    CONTINUE        reduce using rule 11 (statement -> for_statement .)
    PASS            reduce using rule 11 (statement -> for_statement .)
    TRY             reduce using rule 11 (statement -> for_statement .)
    IMPORT          reduce using rule 11 (statement -> for_statement .)
    FROM            reduce using rule 11 (statement -> for_statement .)
    CLASS           reduce using rule 11 (statement -> for_statement .)
    EXCEPT          reduce using rule 11 (statement -> for_statement .)
    ELSE            reduce using rule 11 (statement -> for_statement .)
    ELIF            reduce using rule 11 (statement -> for_statement .)
    FINALLY         reduce using rule 11 (statement -> for_statement .)


state 13

    (12) statement -> function_def .

    END             reduce using rule 12 (statement -> function_def .)
    NEWLINE         reduce using rule 12 (statement -> function_def .)
    PRINT           reduce using rule 12 (statement -> function_def .)
    ID              reduce using rule 12 (statement -> function_def .)
    IF              reduce using rule 12 (statement -> function_def .)
    WHILE           reduce using rule 12 (statement -> function_def .)
    FOR             reduce using rule 12 (statement -> function_def .)
    DEF             reduce using rule 12 (statement -> function_def .)
    RETURN          reduce using rule 12 (statement -> function_def .)
    BREAK           reduce using rule 12 (statement -> function_def .)
    CONTINUE        reduce using rule 12 (statement -> function_def .)
    PASS            reduce using rule 12 (statement -> function_def .)
    TRY             reduce using rule 12 (statement -> function_def .)
    IMPORT          reduce using rule 12 (statement -> function_def .)
    FROM            reduce using rule 12 (statement -> function_def .)
    CLASS           reduce using rule 12 (statement -> function_def .)
    EXCEPT          reduce using rule 12 (statement -> function_def .)
    ELSE            reduce using rule 12 (statement -> function_def .)
    ELIF            reduce using rule 12 (statement -> function_def .)
    FINALLY         reduce using rule 12 (statement -> function_def .)


state 14

    (13) statement -> function_call .

    END             reduce using rule 13 (statement -> function_call .)
    NEWLINE         reduce using rule 13 (statement -> function_call .)
    PRINT           reduce using rule 13 (statement -> function_call .)
    ID              reduce using rule 13 (statement -> function_call .)
    IF              reduce using rule 13 (statement -> function_call .)
    WHILE           reduce using rule 13 (statement -> function_call .)
    FOR             reduce using rule 13 (statement -> function_call .)
    DEF             reduce using rule 13 (statement -> function_call .)
    RETURN          reduce using rule 13 (statement -> function_call .)
    BREAK           reduce using rule 13 (statement -> function_call .)
    CONTINUE        reduce using rule 13 (statement -> function_call .)
    PASS            reduce using rule 13 (statement -> function_call .)
    TRY             reduce using rule 13 (statement -> function_call .)
    IMPORT          reduce using rule 13 (statement -> function_call .)
    FROM            reduce using rule 13 (statement -> function_call .)
    CLASS           reduce using rule 13 (statement -> function_call .)
    EXCEPT          reduce using rule 13 (statement -> function_call .)
    ELSE            reduce using rule 13 (statement -> function_call .)
    ELIF            reduce using rule 13 (statement -> function_call .)
    FINALLY         reduce using rule 13 (statement -> function_call .)


state 15

    (14) statement -> return_statement .

    END             reduce using rule 14 (statement -> return_statement .)
    NEWLINE         reduce using rule 14 (statement -> return_statement .)
    PRINT           reduce using rule 14 (statement -> return_statement .)
    ID              reduce using rule 14 (statement -> return_statement .)
    IF              reduce using rule 14 (statement -> return_statement .)
    WHILE           reduce using rule 14 (statement -> return_statement .)
    FOR             reduce using rule 14 (statement -> return_statement .)
    DEF             reduce using rule 14 (statement -> return_statement .)
    RETURN          reduce using rule 14 (statement -> return_statement .)
    BREAK           reduce using rule 14 (statement -> return_statement .)
    CONTINUE        reduce using rule 14 (statement -> return_statement .)
    PASS            reduce using rule 14 (statement -> return_statement .)
    TRY             reduce using rule 14 (statement -> return_statement .)
    IMPORT          reduce using rule 14 (statement -> return_statement .)
    FROM            reduce using rule 14 (statement -> return_statement .)
    CLASS           reduce using rule 14 (statement -> return_statement .)
    EXCEPT          reduce using rule 14 (statement -> return_statement .)
    ELSE            reduce using rule 14 (statement -> return_statement .)
    ELIF            reduce using rule 14 (statement -> return_statement .)
    FINALLY         reduce using rule 14 (statement -> return_statement .)


state 16

    (15) statement -> break_statement .

    END             reduce using rule 15 (statement -> break_statement .)
    NEWLINE         reduce using rule 15 (statement -> break_statement .)
    PRINT           reduce using rule 15 (statement -> break_statement .)
    ID              reduce using rule 15 (statement -> break_statement .)
    IF              reduce using rule 15 (statement -> break_statement .)
    WHILE           reduce using rule 15 (statement -> break_statement .)
    FOR             reduce using rule 15 (statement -> break_statement .)
    DEF             reduce using rule 15 (statement -> break_statement .)
    RETURN          reduce using rule 15 (statement -> break_statement .)
    BREAK           reduce using rule 15 (statement -> break_statement .)
    CONTINUE        reduce using rule 15 (statement -> break_statement .)
    PASS            reduce using rule 15 (statement -> break_statement .)
    TRY             reduce using rule 15 (statement -> break_statement .)
    IMPORT          reduce using rule 15 (statement -> break_statement .)
    FROM            reduce using rule 15 (statement -> break_statement .)
    CLASS           reduce using rule 15 (statement -> break_statement .)
    EXCEPT          reduce using rule 15 (statement -> break_statement .)
    ELSE            reduce using rule 15 (statement -> break_statement .)
    ELIF            reduce using rule 15 (statement -> break_statement .)
    FINALLY         reduce using rule 15 (statement -> break_statement .)


state 17

    (16) statement -> continue_statement .

    END             reduce using rule 16 (statement -> continue_statement .)
    NEWLINE         reduce using rule 16 (statement -> continue_statement .)
    PRINT           reduce using rule 16 (statement -> continue_statement .)
    ID              reduce using rule 16 (statement -> continue_statement .)
    IF              reduce using rule 16 (statement -> continue_statement .)
    WHILE           reduce using rule 16 (statement -> continue_statement .)
    FOR             reduce using rule 16 (statement -> continue_statement .)
    DEF             reduce using rule 16 (statement -> continue_statement .)
    RETURN          reduce using rule 16 (statement -> continue_statement .)
    BREAK           reduce using rule 16 (statement -> continue_statement .)
    CONTINUE        reduce using rule 16 (statement -> continue_statement .)
    PASS            reduce using rule 16 (statement -> continue_statement .)
    TRY             reduce using rule 16 (statement -> continue_statement .)
    IMPORT          reduce using rule 16 (statement -> continue_statement .)
    FROM            reduce using rule 16 (statement -> continue_statement .)
    CLASS           reduce using rule 16 (statement -> continue_statement .)
    EXCEPT          reduce using rule 16 (statement -> continue_statement .)
    ELSE            reduce using rule 16 (statement -> continue_statement .)
    ELIF            reduce using rule 16 (statement -> continue_statement .)
    FINALLY         reduce using rule 16 (statement -> continue_statement .)


state 18

    (17) statement -> pass_statement .

    END             reduce using rule 17 (statement -> pass_statement .)
    NEWLINE         reduce using rule 17 (statement -> pass_statement .)
    PRINT           reduce using rule 17 (statement -> pass_statement .)
    ID              reduce using rule 17 (statement -> pass_statement .)
    IF              reduce using rule 17 (statement -> pass_statement .)
    WHILE           reduce using rule 17 (statement -> pass_statement .)
    FOR             reduce using rule 17 (statement -> pass_statement .)
    DEF             reduce using rule 17 (statement -> pass_statement .)
    RETURN          reduce using rule 17 (statement -> pass_statement .)
    BREAK           reduce using rule 17 (statement -> pass_statement .)
    CONTINUE        reduce using rule 17 (statement -> pass_statement .)
    PASS            reduce using rule 17 (statement -> pass_statement .)
    TRY             reduce using rule 17 (statement -> pass_statement .)
    IMPORT          reduce using rule 17 (statement -> pass_statement .)
    FROM            reduce using rule 17 (statement -> pass_statement .)
    CLASS           reduce using rule 17 (statement -> pass_statement .)
    EXCEPT          reduce using rule 17 (statement -> pass_statement .)
    ELSE            reduce using rule 17 (statement -> pass_statement .)
    ELIF            reduce using rule 17 (statement -> pass_statement .)
    FINALLY         reduce using rule 17 (statement -> pass_statement .)


state 19

    (18) statement -> try_except_statement .

    END             reduce using rule 18 (statement -> try_except_statement .)
    NEWLINE         reduce using rule 18 (statement -> try_except_statement .)
    PRINT           reduce using rule 18 (statement -> try_except_statement .)
    ID              reduce using rule 18 (statement -> try_except_statement .)
    IF              reduce using rule 18 (statement -> try_except_statement .)
    WHILE           reduce using rule 18 (statement -> try_except_statement .)
    FOR             reduce using rule 18 (statement -> try_except_statement .)
    DEF             reduce using rule 18 (statement -> try_except_statement .)
    RETURN          reduce using rule 18 (statement -> try_except_statement .)
    BREAK           reduce using rule 18 (statement -> try_except_statement .)
    CONTINUE        reduce using rule 18 (statement -> try_except_statement .)
    PASS            reduce using rule 18 (statement -> try_except_statement .)
    TRY             reduce using rule 18 (statement -> try_except_statement .)
    IMPORT          reduce using rule 18 (statement -> try_except_statement .)
    FROM            reduce using rule 18 (statement -> try_except_statement .)
    CLASS           reduce using rule 18 (statement -> try_except_statement .)
    EXCEPT          reduce using rule 18 (statement -> try_except_statement .)
    ELSE            reduce using rule 18 (statement -> try_except_statement .)
    ELIF            reduce using rule 18 (statement -> try_except_statement .)
    FINALLY         reduce using rule 18 (statement -> try_except_statement .)


state 20

    (19) statement -> import_statement .

    END             reduce using rule 19 (statement -> import_statement .)
    NEWLINE         reduce using rule 19 (statement -> import_statement .)
    PRINT           reduce using rule 19 (statement -> import_statement .)
    ID              reduce using rule 19 (statement -> import_statement .)
    IF              reduce using rule 19 (statement -> import_statement .)
    WHILE           reduce using rule 19 (statement -> import_statement .)
    FOR             reduce using rule 19 (statement -> import_statement .)
    DEF             reduce using rule 19 (statement -> import_statement .)
    RETURN          reduce using rule 19 (statement -> import_statement .)
    BREAK           reduce using rule 19 (statement -> import_statement .)
    CONTINUE        reduce using rule 19 (statement -> import_statement .)
    PASS            reduce using rule 19 (statement -> import_statement .)
    TRY             reduce using rule 19 (statement -> import_statement .)
    IMPORT          reduce using rule 19 (statement -> import_statement .)
    FROM            reduce using rule 19 (statement -> import_statement .)
    CLASS           reduce using rule 19 (statement -> import_statement .)
    EXCEPT          reduce using rule 19 (statement -> import_statement .)
    ELSE            reduce using rule 19 (statement -> import_statement .)
    ELIF            reduce using rule 19 (statement -> import_statement .)
    FINALLY         reduce using rule 19 (statement -> import_statement .)


state 21

    (20) statement -> class_definition .

    END             reduce using rule 20 (statement -> class_definition .)
    NEWLINE         reduce using rule 20 (statement -> class_definition .)
    PRINT           reduce using rule 20 (statement -> class_definition .)
    ID              reduce using rule 20 (statement -> class_definition .)
    IF              reduce using rule 20 (statement -> class_definition .)
    WHILE           reduce using rule 20 (statement -> class_definition .)
    FOR             reduce using rule 20 (statement -> class_definition .)
    DEF             reduce using rule 20 (statement -> class_definition .)
    RETURN          reduce using rule 20 (statement -> class_definition .)
    BREAK           reduce using rule 20 (statement -> class_definition .)
    CONTINUE        reduce using rule 20 (statement -> class_definition .)
    PASS            reduce using rule 20 (statement -> class_definition .)
    TRY             reduce using rule 20 (statement -> class_definition .)
    IMPORT          reduce using rule 20 (statement -> class_definition .)
    FROM            reduce using rule 20 (statement -> class_definition .)
    CLASS           reduce using rule 20 (statement -> class_definition .)
    EXCEPT          reduce using rule 20 (statement -> class_definition .)
    ELSE            reduce using rule 20 (statement -> class_definition .)
    ELIF            reduce using rule 20 (statement -> class_definition .)
    FINALLY         reduce using rule 20 (statement -> class_definition .)


state 22

    (21) print_statement -> PRINT . LPAREN expression_list RPAREN NEWLINE

    LPAREN          shift and go to state 41


state 23

    (24) assignment_statement -> ID . ASSIGN expression
    (25) input_statement -> ID . ASSIGN INPUT LPAREN RPAREN
    (59) function_call -> ID . LPAREN argument_list RPAREN

    ASSIGN          shift and go to state 42
    LPAREN          shift and go to state 43


state 24

    (50) if_statement -> IF . LPAREN expression RPAREN statements END
    (51) if_statement -> IF . LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> IF . LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END

    LPAREN          shift and go to state 44


state 25

    (53) while_statement -> WHILE . LPAREN expression RPAREN statements END

    LPAREN          shift and go to state 45


state 26

    (54) for_statement -> FOR . LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END

    LPAREN          shift and go to state 46


state 27

    (55) function_def -> DEF . ID LPAREN parameter_list RPAREN COLON statements

    ID              shift and go to state 47


state 28

    (63) return_statement -> RETURN . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 48
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 29

    (64) break_statement -> BREAK .

    END             reduce using rule 64 (break_statement -> BREAK .)
    NEWLINE         reduce using rule 64 (break_statement -> BREAK .)
    PRINT           reduce using rule 64 (break_statement -> BREAK .)
    ID              reduce using rule 64 (break_statement -> BREAK .)
    IF              reduce using rule 64 (break_statement -> BREAK .)
    WHILE           reduce using rule 64 (break_statement -> BREAK .)
    FOR             reduce using rule 64 (break_statement -> BREAK .)
    DEF             reduce using rule 64 (break_statement -> BREAK .)
    RETURN          reduce using rule 64 (break_statement -> BREAK .)
    BREAK           reduce using rule 64 (break_statement -> BREAK .)
    CONTINUE        reduce using rule 64 (break_statement -> BREAK .)
    PASS            reduce using rule 64 (break_statement -> BREAK .)
    TRY             reduce using rule 64 (break_statement -> BREAK .)
    IMPORT          reduce using rule 64 (break_statement -> BREAK .)
    FROM            reduce using rule 64 (break_statement -> BREAK .)
    CLASS           reduce using rule 64 (break_statement -> BREAK .)
    EXCEPT          reduce using rule 64 (break_statement -> BREAK .)
    ELSE            reduce using rule 64 (break_statement -> BREAK .)
    ELIF            reduce using rule 64 (break_statement -> BREAK .)
    FINALLY         reduce using rule 64 (break_statement -> BREAK .)


state 30

    (65) continue_statement -> CONTINUE .

    END             reduce using rule 65 (continue_statement -> CONTINUE .)
    NEWLINE         reduce using rule 65 (continue_statement -> CONTINUE .)
    PRINT           reduce using rule 65 (continue_statement -> CONTINUE .)
    ID              reduce using rule 65 (continue_statement -> CONTINUE .)
    IF              reduce using rule 65 (continue_statement -> CONTINUE .)
    WHILE           reduce using rule 65 (continue_statement -> CONTINUE .)
    FOR             reduce using rule 65 (continue_statement -> CONTINUE .)
    DEF             reduce using rule 65 (continue_statement -> CONTINUE .)
    RETURN          reduce using rule 65 (continue_statement -> CONTINUE .)
    BREAK           reduce using rule 65 (continue_statement -> CONTINUE .)
    CONTINUE        reduce using rule 65 (continue_statement -> CONTINUE .)
    PASS            reduce using rule 65 (continue_statement -> CONTINUE .)
    TRY             reduce using rule 65 (continue_statement -> CONTINUE .)
    IMPORT          reduce using rule 65 (continue_statement -> CONTINUE .)
    FROM            reduce using rule 65 (continue_statement -> CONTINUE .)
    CLASS           reduce using rule 65 (continue_statement -> CONTINUE .)
    EXCEPT          reduce using rule 65 (continue_statement -> CONTINUE .)
    ELSE            reduce using rule 65 (continue_statement -> CONTINUE .)
    ELIF            reduce using rule 65 (continue_statement -> CONTINUE .)
    FINALLY         reduce using rule 65 (continue_statement -> CONTINUE .)


state 31

    (66) pass_statement -> PASS .

    END             reduce using rule 66 (pass_statement -> PASS .)
    NEWLINE         reduce using rule 66 (pass_statement -> PASS .)
    PRINT           reduce using rule 66 (pass_statement -> PASS .)
    ID              reduce using rule 66 (pass_statement -> PASS .)
    IF              reduce using rule 66 (pass_statement -> PASS .)
    WHILE           reduce using rule 66 (pass_statement -> PASS .)
    FOR             reduce using rule 66 (pass_statement -> PASS .)
    DEF             reduce using rule 66 (pass_statement -> PASS .)
    RETURN          reduce using rule 66 (pass_statement -> PASS .)
    BREAK           reduce using rule 66 (pass_statement -> PASS .)
    CONTINUE        reduce using rule 66 (pass_statement -> PASS .)
    PASS            reduce using rule 66 (pass_statement -> PASS .)
    TRY             reduce using rule 66 (pass_statement -> PASS .)
    IMPORT          reduce using rule 66 (pass_statement -> PASS .)
    FROM            reduce using rule 66 (pass_statement -> PASS .)
    CLASS           reduce using rule 66 (pass_statement -> PASS .)
    EXCEPT          reduce using rule 66 (pass_statement -> PASS .)
    ELSE            reduce using rule 66 (pass_statement -> PASS .)
    ELIF            reduce using rule 66 (pass_statement -> PASS .)
    FINALLY         reduce using rule 66 (pass_statement -> PASS .)


state 32

    (67) try_except_statement -> TRY . COLON statements EXCEPT COLON statements
    (68) try_except_statement -> TRY . COLON statements EXCEPT COLON statements FINALLY COLON statements

    COLON           shift and go to state 60


state 33

    (69) import_statement -> IMPORT . ID

    ID              shift and go to state 61


state 34

    (70) import_statement -> FROM . ID IMPORT ID

    ID              shift and go to state 62


state 35

    (71) class_definition -> CLASS . ID COLON statements
    (72) class_definition -> CLASS . ID LPAREN ID RPAREN COLON statements

    ID              shift and go to state 63


state 36

    (4) statements -> statements NEWLINE .

    END             reduce using rule 4 (statements -> statements NEWLINE .)
    NEWLINE         reduce using rule 4 (statements -> statements NEWLINE .)
    PRINT           reduce using rule 4 (statements -> statements NEWLINE .)
    ID              reduce using rule 4 (statements -> statements NEWLINE .)
    IF              reduce using rule 4 (statements -> statements NEWLINE .)
    WHILE           reduce using rule 4 (statements -> statements NEWLINE .)
    FOR             reduce using rule 4 (statements -> statements NEWLINE .)
    DEF             reduce using rule 4 (statements -> statements NEWLINE .)
    RETURN          reduce using rule 4 (statements -> statements NEWLINE .)
    BREAK           reduce using rule 4 (statements -> statements NEWLINE .)
    CONTINUE        reduce using rule 4 (statements -> statements NEWLINE .)
    PASS            reduce using rule 4 (statements -> statements NEWLINE .)
    TRY             reduce using rule 4 (statements -> statements NEWLINE .)
    IMPORT          reduce using rule 4 (statements -> statements NEWLINE .)
    FROM            reduce using rule 4 (statements -> statements NEWLINE .)
    CLASS           reduce using rule 4 (statements -> statements NEWLINE .)
    EXCEPT          reduce using rule 4 (statements -> statements NEWLINE .)
    ELSE            reduce using rule 4 (statements -> statements NEWLINE .)
    ELIF            reduce using rule 4 (statements -> statements NEWLINE .)
    FINALLY         reduce using rule 4 (statements -> statements NEWLINE .)


state 37

    (1) program -> START NEWLINE statements END .

    $end            reduce using rule 1 (program -> START NEWLINE statements END .)


state 38

    (3) statements -> statements statement .

    END             reduce using rule 3 (statements -> statements statement .)
    NEWLINE         reduce using rule 3 (statements -> statements statement .)
    PRINT           reduce using rule 3 (statements -> statements statement .)
    ID              reduce using rule 3 (statements -> statements statement .)
    IF              reduce using rule 3 (statements -> statements statement .)
    WHILE           reduce using rule 3 (statements -> statements statement .)
    FOR             reduce using rule 3 (statements -> statements statement .)
    DEF             reduce using rule 3 (statements -> statements statement .)
    RETURN          reduce using rule 3 (statements -> statements statement .)
    BREAK           reduce using rule 3 (statements -> statements statement .)
    CONTINUE        reduce using rule 3 (statements -> statements statement .)
    PASS            reduce using rule 3 (statements -> statements statement .)
    TRY             reduce using rule 3 (statements -> statements statement .)
    IMPORT          reduce using rule 3 (statements -> statements statement .)
    FROM            reduce using rule 3 (statements -> statements statement .)
    CLASS           reduce using rule 3 (statements -> statements statement .)
    EXCEPT          reduce using rule 3 (statements -> statements statement .)
    ELSE            reduce using rule 3 (statements -> statements statement .)
    ELIF            reduce using rule 3 (statements -> statements statement .)
    FINALLY         reduce using rule 3 (statements -> statements statement .)


state 39

    (7) statement -> assignment_statement NEWLINE .

    END             reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    NEWLINE         reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    PRINT           reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    ID              reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    IF              reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    WHILE           reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    FOR             reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    DEF             reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    RETURN          reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    BREAK           reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    CONTINUE        reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    PASS            reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    TRY             reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    IMPORT          reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    FROM            reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    CLASS           reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    EXCEPT          reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    ELSE            reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    ELIF            reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    FINALLY         reduce using rule 7 (statement -> assignment_statement NEWLINE .)


state 40

    (8) statement -> input_statement NEWLINE .

    END             reduce using rule 8 (statement -> input_statement NEWLINE .)
    NEWLINE         reduce using rule 8 (statement -> input_statement NEWLINE .)
    PRINT           reduce using rule 8 (statement -> input_statement NEWLINE .)
    ID              reduce using rule 8 (statement -> input_statement NEWLINE .)
    IF              reduce using rule 8 (statement -> input_statement NEWLINE .)
    WHILE           reduce using rule 8 (statement -> input_statement NEWLINE .)
    FOR             reduce using rule 8 (statement -> input_statement NEWLINE .)
    DEF             reduce using rule 8 (statement -> input_statement NEWLINE .)
    RETURN          reduce using rule 8 (statement -> input_statement NEWLINE .)
    BREAK           reduce using rule 8 (statement -> input_statement NEWLINE .)
    CONTINUE        reduce using rule 8 (statement -> input_statement NEWLINE .)
    PASS            reduce using rule 8 (statement -> input_statement NEWLINE .)
    TRY             reduce using rule 8 (statement -> input_statement NEWLINE .)
    IMPORT          reduce using rule 8 (statement -> input_statement NEWLINE .)
    FROM            reduce using rule 8 (statement -> input_statement NEWLINE .)
    CLASS           reduce using rule 8 (statement -> input_statement NEWLINE .)
    EXCEPT          reduce using rule 8 (statement -> input_statement NEWLINE .)
    ELSE            reduce using rule 8 (statement -> input_statement NEWLINE .)
    ELIF            reduce using rule 8 (statement -> input_statement NEWLINE .)
    FINALLY         reduce using rule 8 (statement -> input_statement NEWLINE .)


state 41

    (21) print_statement -> PRINT LPAREN . expression_list RPAREN NEWLINE
    (22) expression_list -> . expression
    (23) expression_list -> . expression_list COMMA expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression_list                shift and go to state 64
    expression                     shift and go to state 65
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 42

    (24) assignment_statement -> ID ASSIGN . expression
    (25) input_statement -> ID ASSIGN . INPUT LPAREN RPAREN
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    INPUT           shift and go to state 67
    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 66
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 43

    (59) function_call -> ID LPAREN . argument_list RPAREN
    (60) argument_list -> . empty
    (61) argument_list -> . expression
    (62) argument_list -> . argument_list COMMA expression
    (73) empty -> .
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    RPAREN          reduce using rule 73 (empty -> .)
    COMMA           reduce using rule 73 (empty -> .)
    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    argument_list                  shift and go to state 68
    empty                          shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 44

    (50) if_statement -> IF LPAREN . expression RPAREN statements END
    (51) if_statement -> IF LPAREN . expression RPAREN statements ELSE statements END
    (52) if_statement -> IF LPAREN . expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 71
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 45

    (53) while_statement -> WHILE LPAREN . expression RPAREN statements END
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 72
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 46

    (54) for_statement -> FOR LPAREN . ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END

    ID              shift and go to state 73


state 47

    (55) function_def -> DEF ID . LPAREN parameter_list RPAREN COLON statements

    LPAREN          shift and go to state 74


state 48

    (63) return_statement -> RETURN expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    END             reduce using rule 63 (return_statement -> RETURN expression .)
    NEWLINE         reduce using rule 63 (return_statement -> RETURN expression .)
    PRINT           reduce using rule 63 (return_statement -> RETURN expression .)
    ID              reduce using rule 63 (return_statement -> RETURN expression .)
    IF              reduce using rule 63 (return_statement -> RETURN expression .)
    WHILE           reduce using rule 63 (return_statement -> RETURN expression .)
    FOR             reduce using rule 63 (return_statement -> RETURN expression .)
    DEF             reduce using rule 63 (return_statement -> RETURN expression .)
    RETURN          reduce using rule 63 (return_statement -> RETURN expression .)
    BREAK           reduce using rule 63 (return_statement -> RETURN expression .)
    CONTINUE        reduce using rule 63 (return_statement -> RETURN expression .)
    PASS            reduce using rule 63 (return_statement -> RETURN expression .)
    TRY             reduce using rule 63 (return_statement -> RETURN expression .)
    IMPORT          reduce using rule 63 (return_statement -> RETURN expression .)
    FROM            reduce using rule 63 (return_statement -> RETURN expression .)
    CLASS           reduce using rule 63 (return_statement -> RETURN expression .)
    EXCEPT          reduce using rule 63 (return_statement -> RETURN expression .)
    ELSE            reduce using rule 63 (return_statement -> RETURN expression .)
    ELIF            reduce using rule 63 (return_statement -> RETURN expression .)
    FINALLY         reduce using rule 63 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 49

    (30) expression -> term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor
    (34) term -> term . FLOOR_DIVIDE factor
    (35) term -> term . MODULO factor

    PLUS            reduce using rule 30 (expression -> term .)
    MINUS           reduce using rule 30 (expression -> term .)
    POWER           reduce using rule 30 (expression -> term .)
    LESS            reduce using rule 30 (expression -> term .)
    GREATER         reduce using rule 30 (expression -> term .)
    EQUAL           reduce using rule 30 (expression -> term .)
    NOTEQUAL        reduce using rule 30 (expression -> term .)
    LESSEQUAL       reduce using rule 30 (expression -> term .)
    GREATEREQUAL    reduce using rule 30 (expression -> term .)
    END             reduce using rule 30 (expression -> term .)
    NEWLINE         reduce using rule 30 (expression -> term .)
    PRINT           reduce using rule 30 (expression -> term .)
    ID              reduce using rule 30 (expression -> term .)
    IF              reduce using rule 30 (expression -> term .)
    WHILE           reduce using rule 30 (expression -> term .)
    FOR             reduce using rule 30 (expression -> term .)
    DEF             reduce using rule 30 (expression -> term .)
    RETURN          reduce using rule 30 (expression -> term .)
    BREAK           reduce using rule 30 (expression -> term .)
    CONTINUE        reduce using rule 30 (expression -> term .)
    PASS            reduce using rule 30 (expression -> term .)
    TRY             reduce using rule 30 (expression -> term .)
    IMPORT          reduce using rule 30 (expression -> term .)
    FROM            reduce using rule 30 (expression -> term .)
    CLASS           reduce using rule 30 (expression -> term .)
    EXCEPT          reduce using rule 30 (expression -> term .)
    ELSE            reduce using rule 30 (expression -> term .)
    ELIF            reduce using rule 30 (expression -> term .)
    FINALLY         reduce using rule 30 (expression -> term .)
    RPAREN          reduce using rule 30 (expression -> term .)
    COMMA           reduce using rule 30 (expression -> term .)
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    FLOOR_DIVIDE    shift and go to state 86
    MODULO          shift and go to state 87


state 50

    (43) factor -> MINUS . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    factor                         shift and go to state 88

state 51

    (29) expression -> comparison .

    PLUS            reduce using rule 29 (expression -> comparison .)
    MINUS           reduce using rule 29 (expression -> comparison .)
    POWER           reduce using rule 29 (expression -> comparison .)
    LESS            reduce using rule 29 (expression -> comparison .)
    GREATER         reduce using rule 29 (expression -> comparison .)
    EQUAL           reduce using rule 29 (expression -> comparison .)
    NOTEQUAL        reduce using rule 29 (expression -> comparison .)
    LESSEQUAL       reduce using rule 29 (expression -> comparison .)
    GREATEREQUAL    reduce using rule 29 (expression -> comparison .)
    END             reduce using rule 29 (expression -> comparison .)
    NEWLINE         reduce using rule 29 (expression -> comparison .)
    PRINT           reduce using rule 29 (expression -> comparison .)
    ID              reduce using rule 29 (expression -> comparison .)
    IF              reduce using rule 29 (expression -> comparison .)
    WHILE           reduce using rule 29 (expression -> comparison .)
    FOR             reduce using rule 29 (expression -> comparison .)
    DEF             reduce using rule 29 (expression -> comparison .)
    RETURN          reduce using rule 29 (expression -> comparison .)
    BREAK           reduce using rule 29 (expression -> comparison .)
    CONTINUE        reduce using rule 29 (expression -> comparison .)
    PASS            reduce using rule 29 (expression -> comparison .)
    TRY             reduce using rule 29 (expression -> comparison .)
    IMPORT          reduce using rule 29 (expression -> comparison .)
    FROM            reduce using rule 29 (expression -> comparison .)
    CLASS           reduce using rule 29 (expression -> comparison .)
    EXCEPT          reduce using rule 29 (expression -> comparison .)
    ELSE            reduce using rule 29 (expression -> comparison .)
    ELIF            reduce using rule 29 (expression -> comparison .)
    FINALLY         reduce using rule 29 (expression -> comparison .)
    RPAREN          reduce using rule 29 (expression -> comparison .)
    COMMA           reduce using rule 29 (expression -> comparison .)


state 52

    (31) expression -> NOT . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 89
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 53

    (36) term -> factor .

    TIMES           reduce using rule 36 (term -> factor .)
    DIVIDE          reduce using rule 36 (term -> factor .)
    FLOOR_DIVIDE    reduce using rule 36 (term -> factor .)
    MODULO          reduce using rule 36 (term -> factor .)
    PLUS            reduce using rule 36 (term -> factor .)
    MINUS           reduce using rule 36 (term -> factor .)
    POWER           reduce using rule 36 (term -> factor .)
    LESS            reduce using rule 36 (term -> factor .)
    GREATER         reduce using rule 36 (term -> factor .)
    EQUAL           reduce using rule 36 (term -> factor .)
    NOTEQUAL        reduce using rule 36 (term -> factor .)
    LESSEQUAL       reduce using rule 36 (term -> factor .)
    GREATEREQUAL    reduce using rule 36 (term -> factor .)
    END             reduce using rule 36 (term -> factor .)
    NEWLINE         reduce using rule 36 (term -> factor .)
    PRINT           reduce using rule 36 (term -> factor .)
    ID              reduce using rule 36 (term -> factor .)
    IF              reduce using rule 36 (term -> factor .)
    WHILE           reduce using rule 36 (term -> factor .)
    FOR             reduce using rule 36 (term -> factor .)
    DEF             reduce using rule 36 (term -> factor .)
    RETURN          reduce using rule 36 (term -> factor .)
    BREAK           reduce using rule 36 (term -> factor .)
    CONTINUE        reduce using rule 36 (term -> factor .)
    PASS            reduce using rule 36 (term -> factor .)
    TRY             reduce using rule 36 (term -> factor .)
    IMPORT          reduce using rule 36 (term -> factor .)
    FROM            reduce using rule 36 (term -> factor .)
    CLASS           reduce using rule 36 (term -> factor .)
    EXCEPT          reduce using rule 36 (term -> factor .)
    ELSE            reduce using rule 36 (term -> factor .)
    ELIF            reduce using rule 36 (term -> factor .)
    FINALLY         reduce using rule 36 (term -> factor .)
    RPAREN          reduce using rule 36 (term -> factor .)
    COMMA           reduce using rule 36 (term -> factor .)


state 54

    (37) factor -> NUMBER .

    TIMES           reduce using rule 37 (factor -> NUMBER .)
    DIVIDE          reduce using rule 37 (factor -> NUMBER .)
    FLOOR_DIVIDE    reduce using rule 37 (factor -> NUMBER .)
    MODULO          reduce using rule 37 (factor -> NUMBER .)
    PLUS            reduce using rule 37 (factor -> NUMBER .)
    MINUS           reduce using rule 37 (factor -> NUMBER .)
    POWER           reduce using rule 37 (factor -> NUMBER .)
    LESS            reduce using rule 37 (factor -> NUMBER .)
    GREATER         reduce using rule 37 (factor -> NUMBER .)
    EQUAL           reduce using rule 37 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 37 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 37 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 37 (factor -> NUMBER .)
    END             reduce using rule 37 (factor -> NUMBER .)
    NEWLINE         reduce using rule 37 (factor -> NUMBER .)
    PRINT           reduce using rule 37 (factor -> NUMBER .)
    ID              reduce using rule 37 (factor -> NUMBER .)
    IF              reduce using rule 37 (factor -> NUMBER .)
    WHILE           reduce using rule 37 (factor -> NUMBER .)
    FOR             reduce using rule 37 (factor -> NUMBER .)
    DEF             reduce using rule 37 (factor -> NUMBER .)
    RETURN          reduce using rule 37 (factor -> NUMBER .)
    BREAK           reduce using rule 37 (factor -> NUMBER .)
    CONTINUE        reduce using rule 37 (factor -> NUMBER .)
    PASS            reduce using rule 37 (factor -> NUMBER .)
    TRY             reduce using rule 37 (factor -> NUMBER .)
    IMPORT          reduce using rule 37 (factor -> NUMBER .)
    FROM            reduce using rule 37 (factor -> NUMBER .)
    CLASS           reduce using rule 37 (factor -> NUMBER .)
    EXCEPT          reduce using rule 37 (factor -> NUMBER .)
    ELSE            reduce using rule 37 (factor -> NUMBER .)
    ELIF            reduce using rule 37 (factor -> NUMBER .)
    FINALLY         reduce using rule 37 (factor -> NUMBER .)
    RPAREN          reduce using rule 37 (factor -> NUMBER .)
    COMMA           reduce using rule 37 (factor -> NUMBER .)


state 55

    (38) factor -> STRING .

    TIMES           reduce using rule 38 (factor -> STRING .)
    DIVIDE          reduce using rule 38 (factor -> STRING .)
    FLOOR_DIVIDE    reduce using rule 38 (factor -> STRING .)
    MODULO          reduce using rule 38 (factor -> STRING .)
    PLUS            reduce using rule 38 (factor -> STRING .)
    MINUS           reduce using rule 38 (factor -> STRING .)
    POWER           reduce using rule 38 (factor -> STRING .)
    LESS            reduce using rule 38 (factor -> STRING .)
    GREATER         reduce using rule 38 (factor -> STRING .)
    EQUAL           reduce using rule 38 (factor -> STRING .)
    NOTEQUAL        reduce using rule 38 (factor -> STRING .)
    LESSEQUAL       reduce using rule 38 (factor -> STRING .)
    GREATEREQUAL    reduce using rule 38 (factor -> STRING .)
    END             reduce using rule 38 (factor -> STRING .)
    NEWLINE         reduce using rule 38 (factor -> STRING .)
    PRINT           reduce using rule 38 (factor -> STRING .)
    ID              reduce using rule 38 (factor -> STRING .)
    IF              reduce using rule 38 (factor -> STRING .)
    WHILE           reduce using rule 38 (factor -> STRING .)
    FOR             reduce using rule 38 (factor -> STRING .)
    DEF             reduce using rule 38 (factor -> STRING .)
    RETURN          reduce using rule 38 (factor -> STRING .)
    BREAK           reduce using rule 38 (factor -> STRING .)
    CONTINUE        reduce using rule 38 (factor -> STRING .)
    PASS            reduce using rule 38 (factor -> STRING .)
    TRY             reduce using rule 38 (factor -> STRING .)
    IMPORT          reduce using rule 38 (factor -> STRING .)
    FROM            reduce using rule 38 (factor -> STRING .)
    CLASS           reduce using rule 38 (factor -> STRING .)
    EXCEPT          reduce using rule 38 (factor -> STRING .)
    ELSE            reduce using rule 38 (factor -> STRING .)
    ELIF            reduce using rule 38 (factor -> STRING .)
    FINALLY         reduce using rule 38 (factor -> STRING .)
    RPAREN          reduce using rule 38 (factor -> STRING .)
    COMMA           reduce using rule 38 (factor -> STRING .)


state 56

    (39) factor -> TRUE .

    TIMES           reduce using rule 39 (factor -> TRUE .)
    DIVIDE          reduce using rule 39 (factor -> TRUE .)
    FLOOR_DIVIDE    reduce using rule 39 (factor -> TRUE .)
    MODULO          reduce using rule 39 (factor -> TRUE .)
    PLUS            reduce using rule 39 (factor -> TRUE .)
    MINUS           reduce using rule 39 (factor -> TRUE .)
    POWER           reduce using rule 39 (factor -> TRUE .)
    LESS            reduce using rule 39 (factor -> TRUE .)
    GREATER         reduce using rule 39 (factor -> TRUE .)
    EQUAL           reduce using rule 39 (factor -> TRUE .)
    NOTEQUAL        reduce using rule 39 (factor -> TRUE .)
    LESSEQUAL       reduce using rule 39 (factor -> TRUE .)
    GREATEREQUAL    reduce using rule 39 (factor -> TRUE .)
    END             reduce using rule 39 (factor -> TRUE .)
    NEWLINE         reduce using rule 39 (factor -> TRUE .)
    PRINT           reduce using rule 39 (factor -> TRUE .)
    ID              reduce using rule 39 (factor -> TRUE .)
    IF              reduce using rule 39 (factor -> TRUE .)
    WHILE           reduce using rule 39 (factor -> TRUE .)
    FOR             reduce using rule 39 (factor -> TRUE .)
    DEF             reduce using rule 39 (factor -> TRUE .)
    RETURN          reduce using rule 39 (factor -> TRUE .)
    BREAK           reduce using rule 39 (factor -> TRUE .)
    CONTINUE        reduce using rule 39 (factor -> TRUE .)
    PASS            reduce using rule 39 (factor -> TRUE .)
    TRY             reduce using rule 39 (factor -> TRUE .)
    IMPORT          reduce using rule 39 (factor -> TRUE .)
    FROM            reduce using rule 39 (factor -> TRUE .)
    CLASS           reduce using rule 39 (factor -> TRUE .)
    EXCEPT          reduce using rule 39 (factor -> TRUE .)
    ELSE            reduce using rule 39 (factor -> TRUE .)
    ELIF            reduce using rule 39 (factor -> TRUE .)
    FINALLY         reduce using rule 39 (factor -> TRUE .)
    RPAREN          reduce using rule 39 (factor -> TRUE .)
    COMMA           reduce using rule 39 (factor -> TRUE .)


state 57

    (40) factor -> FALSE .

    TIMES           reduce using rule 40 (factor -> FALSE .)
    DIVIDE          reduce using rule 40 (factor -> FALSE .)
    FLOOR_DIVIDE    reduce using rule 40 (factor -> FALSE .)
    MODULO          reduce using rule 40 (factor -> FALSE .)
    PLUS            reduce using rule 40 (factor -> FALSE .)
    MINUS           reduce using rule 40 (factor -> FALSE .)
    POWER           reduce using rule 40 (factor -> FALSE .)
    LESS            reduce using rule 40 (factor -> FALSE .)
    GREATER         reduce using rule 40 (factor -> FALSE .)
    EQUAL           reduce using rule 40 (factor -> FALSE .)
    NOTEQUAL        reduce using rule 40 (factor -> FALSE .)
    LESSEQUAL       reduce using rule 40 (factor -> FALSE .)
    GREATEREQUAL    reduce using rule 40 (factor -> FALSE .)
    END             reduce using rule 40 (factor -> FALSE .)
    NEWLINE         reduce using rule 40 (factor -> FALSE .)
    PRINT           reduce using rule 40 (factor -> FALSE .)
    ID              reduce using rule 40 (factor -> FALSE .)
    IF              reduce using rule 40 (factor -> FALSE .)
    WHILE           reduce using rule 40 (factor -> FALSE .)
    FOR             reduce using rule 40 (factor -> FALSE .)
    DEF             reduce using rule 40 (factor -> FALSE .)
    RETURN          reduce using rule 40 (factor -> FALSE .)
    BREAK           reduce using rule 40 (factor -> FALSE .)
    CONTINUE        reduce using rule 40 (factor -> FALSE .)
    PASS            reduce using rule 40 (factor -> FALSE .)
    TRY             reduce using rule 40 (factor -> FALSE .)
    IMPORT          reduce using rule 40 (factor -> FALSE .)
    FROM            reduce using rule 40 (factor -> FALSE .)
    CLASS           reduce using rule 40 (factor -> FALSE .)
    EXCEPT          reduce using rule 40 (factor -> FALSE .)
    ELSE            reduce using rule 40 (factor -> FALSE .)
    ELIF            reduce using rule 40 (factor -> FALSE .)
    FINALLY         reduce using rule 40 (factor -> FALSE .)
    RPAREN          reduce using rule 40 (factor -> FALSE .)
    COMMA           reduce using rule 40 (factor -> FALSE .)


state 58

    (41) factor -> ID .

    TIMES           reduce using rule 41 (factor -> ID .)
    DIVIDE          reduce using rule 41 (factor -> ID .)
    FLOOR_DIVIDE    reduce using rule 41 (factor -> ID .)
    MODULO          reduce using rule 41 (factor -> ID .)
    PLUS            reduce using rule 41 (factor -> ID .)
    MINUS           reduce using rule 41 (factor -> ID .)
    POWER           reduce using rule 41 (factor -> ID .)
    LESS            reduce using rule 41 (factor -> ID .)
    GREATER         reduce using rule 41 (factor -> ID .)
    EQUAL           reduce using rule 41 (factor -> ID .)
    NOTEQUAL        reduce using rule 41 (factor -> ID .)
    LESSEQUAL       reduce using rule 41 (factor -> ID .)
    GREATEREQUAL    reduce using rule 41 (factor -> ID .)
    END             reduce using rule 41 (factor -> ID .)
    NEWLINE         reduce using rule 41 (factor -> ID .)
    PRINT           reduce using rule 41 (factor -> ID .)
    ID              reduce using rule 41 (factor -> ID .)
    IF              reduce using rule 41 (factor -> ID .)
    WHILE           reduce using rule 41 (factor -> ID .)
    FOR             reduce using rule 41 (factor -> ID .)
    DEF             reduce using rule 41 (factor -> ID .)
    RETURN          reduce using rule 41 (factor -> ID .)
    BREAK           reduce using rule 41 (factor -> ID .)
    CONTINUE        reduce using rule 41 (factor -> ID .)
    PASS            reduce using rule 41 (factor -> ID .)
    TRY             reduce using rule 41 (factor -> ID .)
    IMPORT          reduce using rule 41 (factor -> ID .)
    FROM            reduce using rule 41 (factor -> ID .)
    CLASS           reduce using rule 41 (factor -> ID .)
    EXCEPT          reduce using rule 41 (factor -> ID .)
    ELSE            reduce using rule 41 (factor -> ID .)
    ELIF            reduce using rule 41 (factor -> ID .)
    FINALLY         reduce using rule 41 (factor -> ID .)
    RPAREN          reduce using rule 41 (factor -> ID .)
    COMMA           reduce using rule 41 (factor -> ID .)


state 59

    (42) factor -> LPAREN . expression RPAREN
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 90
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 60

    (67) try_except_statement -> TRY COLON . statements EXCEPT COLON statements
    (68) try_except_statement -> TRY COLON . statements EXCEPT COLON statements FINALLY COLON statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 91
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 61

    (69) import_statement -> IMPORT ID .

    END             reduce using rule 69 (import_statement -> IMPORT ID .)
    NEWLINE         reduce using rule 69 (import_statement -> IMPORT ID .)
    PRINT           reduce using rule 69 (import_statement -> IMPORT ID .)
    ID              reduce using rule 69 (import_statement -> IMPORT ID .)
    IF              reduce using rule 69 (import_statement -> IMPORT ID .)
    WHILE           reduce using rule 69 (import_statement -> IMPORT ID .)
    FOR             reduce using rule 69 (import_statement -> IMPORT ID .)
    DEF             reduce using rule 69 (import_statement -> IMPORT ID .)
    RETURN          reduce using rule 69 (import_statement -> IMPORT ID .)
    BREAK           reduce using rule 69 (import_statement -> IMPORT ID .)
    CONTINUE        reduce using rule 69 (import_statement -> IMPORT ID .)
    PASS            reduce using rule 69 (import_statement -> IMPORT ID .)
    TRY             reduce using rule 69 (import_statement -> IMPORT ID .)
    IMPORT          reduce using rule 69 (import_statement -> IMPORT ID .)
    FROM            reduce using rule 69 (import_statement -> IMPORT ID .)
    CLASS           reduce using rule 69 (import_statement -> IMPORT ID .)
    EXCEPT          reduce using rule 69 (import_statement -> IMPORT ID .)
    ELSE            reduce using rule 69 (import_statement -> IMPORT ID .)
    ELIF            reduce using rule 69 (import_statement -> IMPORT ID .)
    FINALLY         reduce using rule 69 (import_statement -> IMPORT ID .)


state 62

    (70) import_statement -> FROM ID . IMPORT ID

    IMPORT          shift and go to state 92


state 63

    (71) class_definition -> CLASS ID . COLON statements
    (72) class_definition -> CLASS ID . LPAREN ID RPAREN COLON statements

    COLON           shift and go to state 93
    LPAREN          shift and go to state 94


state 64

    (21) print_statement -> PRINT LPAREN expression_list . RPAREN NEWLINE
    (23) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 95
    COMMA           shift and go to state 96


state 65

    (22) expression_list -> expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    RPAREN          reduce using rule 22 (expression_list -> expression .)
    COMMA           reduce using rule 22 (expression_list -> expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 66

    (24) assignment_statement -> ID ASSIGN expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    NEWLINE         reduce using rule 24 (assignment_statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 67

    (25) input_statement -> ID ASSIGN INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 97


state 68

    (59) function_call -> ID LPAREN argument_list . RPAREN
    (62) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 98
    COMMA           shift and go to state 99


state 69

    (60) argument_list -> empty .

    RPAREN          reduce using rule 60 (argument_list -> empty .)
    COMMA           reduce using rule 60 (argument_list -> empty .)


state 70

    (61) argument_list -> expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    RPAREN          reduce using rule 61 (argument_list -> expression .)
    COMMA           reduce using rule 61 (argument_list -> expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 71

    (50) if_statement -> IF LPAREN expression . RPAREN statements END
    (51) if_statement -> IF LPAREN expression . RPAREN statements ELSE statements END
    (52) if_statement -> IF LPAREN expression . RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    RPAREN          shift and go to state 100
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 72

    (53) while_statement -> WHILE LPAREN expression . RPAREN statements END
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    RPAREN          shift and go to state 101
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 73

    (54) for_statement -> FOR LPAREN ID . IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END

    IN              shift and go to state 102


state 74

    (55) function_def -> DEF ID LPAREN . parameter_list RPAREN COLON statements
    (56) parameter_list -> . empty
    (57) parameter_list -> . ID
    (58) parameter_list -> . parameter_list COMMA ID
    (73) empty -> .

    ID              shift and go to state 103
    RPAREN          reduce using rule 73 (empty -> .)
    COMMA           reduce using rule 73 (empty -> .)

    parameter_list                 shift and go to state 104
    empty                          shift and go to state 105

state 75

    (26) expression -> expression PLUS . term
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    term                           shift and go to state 106
    factor                         shift and go to state 53

state 76

    (27) expression -> expression MINUS . term
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    term                           shift and go to state 107
    factor                         shift and go to state 53

state 77

    (28) expression -> expression POWER . term
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    term                           shift and go to state 108
    factor                         shift and go to state 53

state 78

    (44) comparison -> expression LESS . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 109
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 79

    (45) comparison -> expression GREATER . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 110
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 80

    (46) comparison -> expression EQUAL . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 111
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 81

    (47) comparison -> expression NOTEQUAL . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 112
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 82

    (48) comparison -> expression LESSEQUAL . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 113
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 83

    (49) comparison -> expression GREATEREQUAL . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 114
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 84

    (32) term -> term TIMES . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    factor                         shift and go to state 115

state 85

    (33) term -> term DIVIDE . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    factor                         shift and go to state 116

state 86

    (34) term -> term FLOOR_DIVIDE . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    factor                         shift and go to state 117

state 87

    (35) term -> term MODULO . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    factor                         shift and go to state 118

state 88

    (43) factor -> MINUS factor .

    TIMES           reduce using rule 43 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 43 (factor -> MINUS factor .)
    FLOOR_DIVIDE    reduce using rule 43 (factor -> MINUS factor .)
    MODULO          reduce using rule 43 (factor -> MINUS factor .)
    PLUS            reduce using rule 43 (factor -> MINUS factor .)
    MINUS           reduce using rule 43 (factor -> MINUS factor .)
    POWER           reduce using rule 43 (factor -> MINUS factor .)
    LESS            reduce using rule 43 (factor -> MINUS factor .)
    GREATER         reduce using rule 43 (factor -> MINUS factor .)
    EQUAL           reduce using rule 43 (factor -> MINUS factor .)
    NOTEQUAL        reduce using rule 43 (factor -> MINUS factor .)
    LESSEQUAL       reduce using rule 43 (factor -> MINUS factor .)
    GREATEREQUAL    reduce using rule 43 (factor -> MINUS factor .)
    END             reduce using rule 43 (factor -> MINUS factor .)
    NEWLINE         reduce using rule 43 (factor -> MINUS factor .)
    PRINT           reduce using rule 43 (factor -> MINUS factor .)
    ID              reduce using rule 43 (factor -> MINUS factor .)
    IF              reduce using rule 43 (factor -> MINUS factor .)
    WHILE           reduce using rule 43 (factor -> MINUS factor .)
    FOR             reduce using rule 43 (factor -> MINUS factor .)
    DEF             reduce using rule 43 (factor -> MINUS factor .)
    RETURN          reduce using rule 43 (factor -> MINUS factor .)
    BREAK           reduce using rule 43 (factor -> MINUS factor .)
    CONTINUE        reduce using rule 43 (factor -> MINUS factor .)
    PASS            reduce using rule 43 (factor -> MINUS factor .)
    TRY             reduce using rule 43 (factor -> MINUS factor .)
    IMPORT          reduce using rule 43 (factor -> MINUS factor .)
    FROM            reduce using rule 43 (factor -> MINUS factor .)
    CLASS           reduce using rule 43 (factor -> MINUS factor .)
    EXCEPT          reduce using rule 43 (factor -> MINUS factor .)
    ELSE            reduce using rule 43 (factor -> MINUS factor .)
    ELIF            reduce using rule 43 (factor -> MINUS factor .)
    FINALLY         reduce using rule 43 (factor -> MINUS factor .)
    RPAREN          reduce using rule 43 (factor -> MINUS factor .)
    COMMA           reduce using rule 43 (factor -> MINUS factor .)


state 89

    (31) expression -> NOT expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 31 (expression -> NOT expression .)
    MINUS           reduce using rule 31 (expression -> NOT expression .)
    POWER           reduce using rule 31 (expression -> NOT expression .)
    LESS            reduce using rule 31 (expression -> NOT expression .)
    GREATER         reduce using rule 31 (expression -> NOT expression .)
    EQUAL           reduce using rule 31 (expression -> NOT expression .)
    NOTEQUAL        reduce using rule 31 (expression -> NOT expression .)
    LESSEQUAL       reduce using rule 31 (expression -> NOT expression .)
    GREATEREQUAL    reduce using rule 31 (expression -> NOT expression .)
    END             reduce using rule 31 (expression -> NOT expression .)
    NEWLINE         reduce using rule 31 (expression -> NOT expression .)
    PRINT           reduce using rule 31 (expression -> NOT expression .)
    ID              reduce using rule 31 (expression -> NOT expression .)
    IF              reduce using rule 31 (expression -> NOT expression .)
    WHILE           reduce using rule 31 (expression -> NOT expression .)
    FOR             reduce using rule 31 (expression -> NOT expression .)
    DEF             reduce using rule 31 (expression -> NOT expression .)
    RETURN          reduce using rule 31 (expression -> NOT expression .)
    BREAK           reduce using rule 31 (expression -> NOT expression .)
    CONTINUE        reduce using rule 31 (expression -> NOT expression .)
    PASS            reduce using rule 31 (expression -> NOT expression .)
    TRY             reduce using rule 31 (expression -> NOT expression .)
    IMPORT          reduce using rule 31 (expression -> NOT expression .)
    FROM            reduce using rule 31 (expression -> NOT expression .)
    CLASS           reduce using rule 31 (expression -> NOT expression .)
    EXCEPT          reduce using rule 31 (expression -> NOT expression .)
    ELSE            reduce using rule 31 (expression -> NOT expression .)
    ELIF            reduce using rule 31 (expression -> NOT expression .)
    FINALLY         reduce using rule 31 (expression -> NOT expression .)
    RPAREN          reduce using rule 31 (expression -> NOT expression .)
    COMMA           reduce using rule 31 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 75 ]
  ! MINUS           [ shift and go to state 76 ]
  ! POWER           [ shift and go to state 77 ]
  ! LESS            [ shift and go to state 78 ]
  ! GREATER         [ shift and go to state 79 ]
  ! EQUAL           [ shift and go to state 80 ]
  ! NOTEQUAL        [ shift and go to state 81 ]
  ! LESSEQUAL       [ shift and go to state 82 ]
  ! GREATEREQUAL    [ shift and go to state 83 ]


state 90

    (42) factor -> LPAREN expression . RPAREN
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    RPAREN          shift and go to state 119
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 91

    (67) try_except_statement -> TRY COLON statements . EXCEPT COLON statements
    (68) try_except_statement -> TRY COLON statements . EXCEPT COLON statements FINALLY COLON statements
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    EXCEPT          shift and go to state 120
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 92

    (70) import_statement -> FROM ID IMPORT . ID

    ID              shift and go to state 121


state 93

    (71) class_definition -> CLASS ID COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 122
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 94

    (72) class_definition -> CLASS ID LPAREN . ID RPAREN COLON statements

    ID              shift and go to state 123


state 95

    (21) print_statement -> PRINT LPAREN expression_list RPAREN . NEWLINE

    NEWLINE         shift and go to state 124


state 96

    (23) expression_list -> expression_list COMMA . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 125
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 97

    (25) input_statement -> ID ASSIGN INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 126


state 98

    (59) function_call -> ID LPAREN argument_list RPAREN .

    END             reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    NEWLINE         reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    ID              reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    IF              reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    FOR             reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    DEF             reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    RETURN          reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    BREAK           reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    CONTINUE        reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    PASS            reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    TRY             reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    IMPORT          reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    FROM            reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    CLASS           reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    EXCEPT          reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    ELIF            reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)
    FINALLY         reduce using rule 59 (function_call -> ID LPAREN argument_list RPAREN .)


state 99

    (62) argument_list -> argument_list COMMA . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 127
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 100

    (50) if_statement -> IF LPAREN expression RPAREN . statements END
    (51) if_statement -> IF LPAREN expression RPAREN . statements ELSE statements END
    (52) if_statement -> IF LPAREN expression RPAREN . statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 128
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 101

    (53) while_statement -> WHILE LPAREN expression RPAREN . statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 129
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 102

    (54) for_statement -> FOR LPAREN ID IN . RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END

    RANGE           shift and go to state 130


state 103

    (57) parameter_list -> ID .

    RPAREN          reduce using rule 57 (parameter_list -> ID .)
    COMMA           reduce using rule 57 (parameter_list -> ID .)


state 104

    (55) function_def -> DEF ID LPAREN parameter_list . RPAREN COLON statements
    (58) parameter_list -> parameter_list . COMMA ID

    RPAREN          shift and go to state 131
    COMMA           shift and go to state 132


state 105

    (56) parameter_list -> empty .

    RPAREN          reduce using rule 56 (parameter_list -> empty .)
    COMMA           reduce using rule 56 (parameter_list -> empty .)


state 106

    (26) expression -> expression PLUS term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor
    (34) term -> term . FLOOR_DIVIDE factor
    (35) term -> term . MODULO factor

    PLUS            reduce using rule 26 (expression -> expression PLUS term .)
    MINUS           reduce using rule 26 (expression -> expression PLUS term .)
    POWER           reduce using rule 26 (expression -> expression PLUS term .)
    LESS            reduce using rule 26 (expression -> expression PLUS term .)
    GREATER         reduce using rule 26 (expression -> expression PLUS term .)
    EQUAL           reduce using rule 26 (expression -> expression PLUS term .)
    NOTEQUAL        reduce using rule 26 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 26 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 26 (expression -> expression PLUS term .)
    END             reduce using rule 26 (expression -> expression PLUS term .)
    NEWLINE         reduce using rule 26 (expression -> expression PLUS term .)
    PRINT           reduce using rule 26 (expression -> expression PLUS term .)
    ID              reduce using rule 26 (expression -> expression PLUS term .)
    IF              reduce using rule 26 (expression -> expression PLUS term .)
    WHILE           reduce using rule 26 (expression -> expression PLUS term .)
    FOR             reduce using rule 26 (expression -> expression PLUS term .)
    DEF             reduce using rule 26 (expression -> expression PLUS term .)
    RETURN          reduce using rule 26 (expression -> expression PLUS term .)
    BREAK           reduce using rule 26 (expression -> expression PLUS term .)
    CONTINUE        reduce using rule 26 (expression -> expression PLUS term .)
    PASS            reduce using rule 26 (expression -> expression PLUS term .)
    TRY             reduce using rule 26 (expression -> expression PLUS term .)
    IMPORT          reduce using rule 26 (expression -> expression PLUS term .)
    FROM            reduce using rule 26 (expression -> expression PLUS term .)
    CLASS           reduce using rule 26 (expression -> expression PLUS term .)
    EXCEPT          reduce using rule 26 (expression -> expression PLUS term .)
    ELSE            reduce using rule 26 (expression -> expression PLUS term .)
    ELIF            reduce using rule 26 (expression -> expression PLUS term .)
    FINALLY         reduce using rule 26 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 26 (expression -> expression PLUS term .)
    COMMA           reduce using rule 26 (expression -> expression PLUS term .)
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    FLOOR_DIVIDE    shift and go to state 86
    MODULO          shift and go to state 87


state 107

    (27) expression -> expression MINUS term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor
    (34) term -> term . FLOOR_DIVIDE factor
    (35) term -> term . MODULO factor

    PLUS            reduce using rule 27 (expression -> expression MINUS term .)
    MINUS           reduce using rule 27 (expression -> expression MINUS term .)
    POWER           reduce using rule 27 (expression -> expression MINUS term .)
    LESS            reduce using rule 27 (expression -> expression MINUS term .)
    GREATER         reduce using rule 27 (expression -> expression MINUS term .)
    EQUAL           reduce using rule 27 (expression -> expression MINUS term .)
    NOTEQUAL        reduce using rule 27 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 27 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 27 (expression -> expression MINUS term .)
    END             reduce using rule 27 (expression -> expression MINUS term .)
    NEWLINE         reduce using rule 27 (expression -> expression MINUS term .)
    PRINT           reduce using rule 27 (expression -> expression MINUS term .)
    ID              reduce using rule 27 (expression -> expression MINUS term .)
    IF              reduce using rule 27 (expression -> expression MINUS term .)
    WHILE           reduce using rule 27 (expression -> expression MINUS term .)
    FOR             reduce using rule 27 (expression -> expression MINUS term .)
    DEF             reduce using rule 27 (expression -> expression MINUS term .)
    RETURN          reduce using rule 27 (expression -> expression MINUS term .)
    BREAK           reduce using rule 27 (expression -> expression MINUS term .)
    CONTINUE        reduce using rule 27 (expression -> expression MINUS term .)
    PASS            reduce using rule 27 (expression -> expression MINUS term .)
    TRY             reduce using rule 27 (expression -> expression MINUS term .)
    IMPORT          reduce using rule 27 (expression -> expression MINUS term .)
    FROM            reduce using rule 27 (expression -> expression MINUS term .)
    CLASS           reduce using rule 27 (expression -> expression MINUS term .)
    EXCEPT          reduce using rule 27 (expression -> expression MINUS term .)
    ELSE            reduce using rule 27 (expression -> expression MINUS term .)
    ELIF            reduce using rule 27 (expression -> expression MINUS term .)
    FINALLY         reduce using rule 27 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 27 (expression -> expression MINUS term .)
    COMMA           reduce using rule 27 (expression -> expression MINUS term .)
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    FLOOR_DIVIDE    shift and go to state 86
    MODULO          shift and go to state 87


state 108

    (28) expression -> expression POWER term .
    (32) term -> term . TIMES factor
    (33) term -> term . DIVIDE factor
    (34) term -> term . FLOOR_DIVIDE factor
    (35) term -> term . MODULO factor

    PLUS            reduce using rule 28 (expression -> expression POWER term .)
    MINUS           reduce using rule 28 (expression -> expression POWER term .)
    POWER           reduce using rule 28 (expression -> expression POWER term .)
    LESS            reduce using rule 28 (expression -> expression POWER term .)
    GREATER         reduce using rule 28 (expression -> expression POWER term .)
    EQUAL           reduce using rule 28 (expression -> expression POWER term .)
    NOTEQUAL        reduce using rule 28 (expression -> expression POWER term .)
    LESSEQUAL       reduce using rule 28 (expression -> expression POWER term .)
    GREATEREQUAL    reduce using rule 28 (expression -> expression POWER term .)
    END             reduce using rule 28 (expression -> expression POWER term .)
    NEWLINE         reduce using rule 28 (expression -> expression POWER term .)
    PRINT           reduce using rule 28 (expression -> expression POWER term .)
    ID              reduce using rule 28 (expression -> expression POWER term .)
    IF              reduce using rule 28 (expression -> expression POWER term .)
    WHILE           reduce using rule 28 (expression -> expression POWER term .)
    FOR             reduce using rule 28 (expression -> expression POWER term .)
    DEF             reduce using rule 28 (expression -> expression POWER term .)
    RETURN          reduce using rule 28 (expression -> expression POWER term .)
    BREAK           reduce using rule 28 (expression -> expression POWER term .)
    CONTINUE        reduce using rule 28 (expression -> expression POWER term .)
    PASS            reduce using rule 28 (expression -> expression POWER term .)
    TRY             reduce using rule 28 (expression -> expression POWER term .)
    IMPORT          reduce using rule 28 (expression -> expression POWER term .)
    FROM            reduce using rule 28 (expression -> expression POWER term .)
    CLASS           reduce using rule 28 (expression -> expression POWER term .)
    EXCEPT          reduce using rule 28 (expression -> expression POWER term .)
    ELSE            reduce using rule 28 (expression -> expression POWER term .)
    ELIF            reduce using rule 28 (expression -> expression POWER term .)
    FINALLY         reduce using rule 28 (expression -> expression POWER term .)
    RPAREN          reduce using rule 28 (expression -> expression POWER term .)
    COMMA           reduce using rule 28 (expression -> expression POWER term .)
    TIMES           shift and go to state 84
    DIVIDE          shift and go to state 85
    FLOOR_DIVIDE    shift and go to state 86
    MODULO          shift and go to state 87


state 109

    (44) comparison -> expression LESS expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 44 (comparison -> expression LESS expression .)
    MINUS           reduce using rule 44 (comparison -> expression LESS expression .)
    POWER           reduce using rule 44 (comparison -> expression LESS expression .)
    LESS            reduce using rule 44 (comparison -> expression LESS expression .)
    GREATER         reduce using rule 44 (comparison -> expression LESS expression .)
    EQUAL           reduce using rule 44 (comparison -> expression LESS expression .)
    NOTEQUAL        reduce using rule 44 (comparison -> expression LESS expression .)
    LESSEQUAL       reduce using rule 44 (comparison -> expression LESS expression .)
    GREATEREQUAL    reduce using rule 44 (comparison -> expression LESS expression .)
    END             reduce using rule 44 (comparison -> expression LESS expression .)
    NEWLINE         reduce using rule 44 (comparison -> expression LESS expression .)
    PRINT           reduce using rule 44 (comparison -> expression LESS expression .)
    ID              reduce using rule 44 (comparison -> expression LESS expression .)
    IF              reduce using rule 44 (comparison -> expression LESS expression .)
    WHILE           reduce using rule 44 (comparison -> expression LESS expression .)
    FOR             reduce using rule 44 (comparison -> expression LESS expression .)
    DEF             reduce using rule 44 (comparison -> expression LESS expression .)
    RETURN          reduce using rule 44 (comparison -> expression LESS expression .)
    BREAK           reduce using rule 44 (comparison -> expression LESS expression .)
    CONTINUE        reduce using rule 44 (comparison -> expression LESS expression .)
    PASS            reduce using rule 44 (comparison -> expression LESS expression .)
    TRY             reduce using rule 44 (comparison -> expression LESS expression .)
    IMPORT          reduce using rule 44 (comparison -> expression LESS expression .)
    FROM            reduce using rule 44 (comparison -> expression LESS expression .)
    CLASS           reduce using rule 44 (comparison -> expression LESS expression .)
    EXCEPT          reduce using rule 44 (comparison -> expression LESS expression .)
    ELSE            reduce using rule 44 (comparison -> expression LESS expression .)
    ELIF            reduce using rule 44 (comparison -> expression LESS expression .)
    FINALLY         reduce using rule 44 (comparison -> expression LESS expression .)
    RPAREN          reduce using rule 44 (comparison -> expression LESS expression .)
    COMMA           reduce using rule 44 (comparison -> expression LESS expression .)

  ! PLUS            [ shift and go to state 75 ]
  ! MINUS           [ shift and go to state 76 ]
  ! POWER           [ shift and go to state 77 ]
  ! LESS            [ shift and go to state 78 ]
  ! GREATER         [ shift and go to state 79 ]
  ! EQUAL           [ shift and go to state 80 ]
  ! NOTEQUAL        [ shift and go to state 81 ]
  ! LESSEQUAL       [ shift and go to state 82 ]
  ! GREATEREQUAL    [ shift and go to state 83 ]


state 110

    (45) comparison -> expression GREATER expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 45 (comparison -> expression GREATER expression .)
    MINUS           reduce using rule 45 (comparison -> expression GREATER expression .)
    POWER           reduce using rule 45 (comparison -> expression GREATER expression .)
    LESS            reduce using rule 45 (comparison -> expression GREATER expression .)
    GREATER         reduce using rule 45 (comparison -> expression GREATER expression .)
    EQUAL           reduce using rule 45 (comparison -> expression GREATER expression .)
    NOTEQUAL        reduce using rule 45 (comparison -> expression GREATER expression .)
    LESSEQUAL       reduce using rule 45 (comparison -> expression GREATER expression .)
    GREATEREQUAL    reduce using rule 45 (comparison -> expression GREATER expression .)
    END             reduce using rule 45 (comparison -> expression GREATER expression .)
    NEWLINE         reduce using rule 45 (comparison -> expression GREATER expression .)
    PRINT           reduce using rule 45 (comparison -> expression GREATER expression .)
    ID              reduce using rule 45 (comparison -> expression GREATER expression .)
    IF              reduce using rule 45 (comparison -> expression GREATER expression .)
    WHILE           reduce using rule 45 (comparison -> expression GREATER expression .)
    FOR             reduce using rule 45 (comparison -> expression GREATER expression .)
    DEF             reduce using rule 45 (comparison -> expression GREATER expression .)
    RETURN          reduce using rule 45 (comparison -> expression GREATER expression .)
    BREAK           reduce using rule 45 (comparison -> expression GREATER expression .)
    CONTINUE        reduce using rule 45 (comparison -> expression GREATER expression .)
    PASS            reduce using rule 45 (comparison -> expression GREATER expression .)
    TRY             reduce using rule 45 (comparison -> expression GREATER expression .)
    IMPORT          reduce using rule 45 (comparison -> expression GREATER expression .)
    FROM            reduce using rule 45 (comparison -> expression GREATER expression .)
    CLASS           reduce using rule 45 (comparison -> expression GREATER expression .)
    EXCEPT          reduce using rule 45 (comparison -> expression GREATER expression .)
    ELSE            reduce using rule 45 (comparison -> expression GREATER expression .)
    ELIF            reduce using rule 45 (comparison -> expression GREATER expression .)
    FINALLY         reduce using rule 45 (comparison -> expression GREATER expression .)
    RPAREN          reduce using rule 45 (comparison -> expression GREATER expression .)
    COMMA           reduce using rule 45 (comparison -> expression GREATER expression .)

  ! PLUS            [ shift and go to state 75 ]
  ! MINUS           [ shift and go to state 76 ]
  ! POWER           [ shift and go to state 77 ]
  ! LESS            [ shift and go to state 78 ]
  ! GREATER         [ shift and go to state 79 ]
  ! EQUAL           [ shift and go to state 80 ]
  ! NOTEQUAL        [ shift and go to state 81 ]
  ! LESSEQUAL       [ shift and go to state 82 ]
  ! GREATEREQUAL    [ shift and go to state 83 ]


state 111

    (46) comparison -> expression EQUAL expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 46 (comparison -> expression EQUAL expression .)
    MINUS           reduce using rule 46 (comparison -> expression EQUAL expression .)
    POWER           reduce using rule 46 (comparison -> expression EQUAL expression .)
    LESS            reduce using rule 46 (comparison -> expression EQUAL expression .)
    GREATER         reduce using rule 46 (comparison -> expression EQUAL expression .)
    EQUAL           reduce using rule 46 (comparison -> expression EQUAL expression .)
    NOTEQUAL        reduce using rule 46 (comparison -> expression EQUAL expression .)
    LESSEQUAL       reduce using rule 46 (comparison -> expression EQUAL expression .)
    GREATEREQUAL    reduce using rule 46 (comparison -> expression EQUAL expression .)
    END             reduce using rule 46 (comparison -> expression EQUAL expression .)
    NEWLINE         reduce using rule 46 (comparison -> expression EQUAL expression .)
    PRINT           reduce using rule 46 (comparison -> expression EQUAL expression .)
    ID              reduce using rule 46 (comparison -> expression EQUAL expression .)
    IF              reduce using rule 46 (comparison -> expression EQUAL expression .)
    WHILE           reduce using rule 46 (comparison -> expression EQUAL expression .)
    FOR             reduce using rule 46 (comparison -> expression EQUAL expression .)
    DEF             reduce using rule 46 (comparison -> expression EQUAL expression .)
    RETURN          reduce using rule 46 (comparison -> expression EQUAL expression .)
    BREAK           reduce using rule 46 (comparison -> expression EQUAL expression .)
    CONTINUE        reduce using rule 46 (comparison -> expression EQUAL expression .)
    PASS            reduce using rule 46 (comparison -> expression EQUAL expression .)
    TRY             reduce using rule 46 (comparison -> expression EQUAL expression .)
    IMPORT          reduce using rule 46 (comparison -> expression EQUAL expression .)
    FROM            reduce using rule 46 (comparison -> expression EQUAL expression .)
    CLASS           reduce using rule 46 (comparison -> expression EQUAL expression .)
    EXCEPT          reduce using rule 46 (comparison -> expression EQUAL expression .)
    ELSE            reduce using rule 46 (comparison -> expression EQUAL expression .)
    ELIF            reduce using rule 46 (comparison -> expression EQUAL expression .)
    FINALLY         reduce using rule 46 (comparison -> expression EQUAL expression .)
    RPAREN          reduce using rule 46 (comparison -> expression EQUAL expression .)
    COMMA           reduce using rule 46 (comparison -> expression EQUAL expression .)

  ! PLUS            [ shift and go to state 75 ]
  ! MINUS           [ shift and go to state 76 ]
  ! POWER           [ shift and go to state 77 ]
  ! LESS            [ shift and go to state 78 ]
  ! GREATER         [ shift and go to state 79 ]
  ! EQUAL           [ shift and go to state 80 ]
  ! NOTEQUAL        [ shift and go to state 81 ]
  ! LESSEQUAL       [ shift and go to state 82 ]
  ! GREATEREQUAL    [ shift and go to state 83 ]


state 112

    (47) comparison -> expression NOTEQUAL expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    MINUS           reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    POWER           reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    LESS            reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    GREATER         reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    EQUAL           reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    LESSEQUAL       reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    GREATEREQUAL    reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    END             reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    NEWLINE         reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    ID              reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    IF              reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    FOR             reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    DEF             reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    RETURN          reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    BREAK           reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    CONTINUE        reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    PASS            reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    TRY             reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    IMPORT          reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    FROM            reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    CLASS           reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    EXCEPT          reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    ELSE            reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    ELIF            reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    FINALLY         reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 47 (comparison -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 47 (comparison -> expression NOTEQUAL expression .)

  ! PLUS            [ shift and go to state 75 ]
  ! MINUS           [ shift and go to state 76 ]
  ! POWER           [ shift and go to state 77 ]
  ! LESS            [ shift and go to state 78 ]
  ! GREATER         [ shift and go to state 79 ]
  ! EQUAL           [ shift and go to state 80 ]
  ! NOTEQUAL        [ shift and go to state 81 ]
  ! LESSEQUAL       [ shift and go to state 82 ]
  ! GREATEREQUAL    [ shift and go to state 83 ]


state 113

    (48) comparison -> expression LESSEQUAL expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    MINUS           reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    POWER           reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    LESS            reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    GREATER         reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    EQUAL           reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    NOTEQUAL        reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    LESSEQUAL       reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    GREATEREQUAL    reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    END             reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    NEWLINE         reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    PRINT           reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    ID              reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    IF              reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    WHILE           reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    FOR             reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    DEF             reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    RETURN          reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    BREAK           reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    CONTINUE        reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    PASS            reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    TRY             reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    IMPORT          reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    FROM            reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    CLASS           reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    EXCEPT          reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    ELSE            reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    ELIF            reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    FINALLY         reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    RPAREN          reduce using rule 48 (comparison -> expression LESSEQUAL expression .)
    COMMA           reduce using rule 48 (comparison -> expression LESSEQUAL expression .)

  ! PLUS            [ shift and go to state 75 ]
  ! MINUS           [ shift and go to state 76 ]
  ! POWER           [ shift and go to state 77 ]
  ! LESS            [ shift and go to state 78 ]
  ! GREATER         [ shift and go to state 79 ]
  ! EQUAL           [ shift and go to state 80 ]
  ! NOTEQUAL        [ shift and go to state 81 ]
  ! LESSEQUAL       [ shift and go to state 82 ]
  ! GREATEREQUAL    [ shift and go to state 83 ]


state 114

    (49) comparison -> expression GREATEREQUAL expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    PLUS            reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    MINUS           reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    POWER           reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    LESS            reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    GREATER         reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    EQUAL           reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    NOTEQUAL        reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    LESSEQUAL       reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    GREATEREQUAL    reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    END             reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    NEWLINE         reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    PRINT           reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    ID              reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    IF              reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    WHILE           reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    FOR             reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    DEF             reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    RETURN          reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    BREAK           reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    CONTINUE        reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    PASS            reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    TRY             reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    IMPORT          reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    FROM            reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    CLASS           reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    EXCEPT          reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    ELSE            reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    ELIF            reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    FINALLY         reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    RPAREN          reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)
    COMMA           reduce using rule 49 (comparison -> expression GREATEREQUAL expression .)

  ! PLUS            [ shift and go to state 75 ]
  ! MINUS           [ shift and go to state 76 ]
  ! POWER           [ shift and go to state 77 ]
  ! LESS            [ shift and go to state 78 ]
  ! GREATER         [ shift and go to state 79 ]
  ! EQUAL           [ shift and go to state 80 ]
  ! NOTEQUAL        [ shift and go to state 81 ]
  ! LESSEQUAL       [ shift and go to state 82 ]
  ! GREATEREQUAL    [ shift and go to state 83 ]


state 115

    (32) term -> term TIMES factor .

    TIMES           reduce using rule 32 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 32 (term -> term TIMES factor .)
    FLOOR_DIVIDE    reduce using rule 32 (term -> term TIMES factor .)
    MODULO          reduce using rule 32 (term -> term TIMES factor .)
    PLUS            reduce using rule 32 (term -> term TIMES factor .)
    MINUS           reduce using rule 32 (term -> term TIMES factor .)
    POWER           reduce using rule 32 (term -> term TIMES factor .)
    LESS            reduce using rule 32 (term -> term TIMES factor .)
    GREATER         reduce using rule 32 (term -> term TIMES factor .)
    EQUAL           reduce using rule 32 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 32 (term -> term TIMES factor .)
    LESSEQUAL       reduce using rule 32 (term -> term TIMES factor .)
    GREATEREQUAL    reduce using rule 32 (term -> term TIMES factor .)
    END             reduce using rule 32 (term -> term TIMES factor .)
    NEWLINE         reduce using rule 32 (term -> term TIMES factor .)
    PRINT           reduce using rule 32 (term -> term TIMES factor .)
    ID              reduce using rule 32 (term -> term TIMES factor .)
    IF              reduce using rule 32 (term -> term TIMES factor .)
    WHILE           reduce using rule 32 (term -> term TIMES factor .)
    FOR             reduce using rule 32 (term -> term TIMES factor .)
    DEF             reduce using rule 32 (term -> term TIMES factor .)
    RETURN          reduce using rule 32 (term -> term TIMES factor .)
    BREAK           reduce using rule 32 (term -> term TIMES factor .)
    CONTINUE        reduce using rule 32 (term -> term TIMES factor .)
    PASS            reduce using rule 32 (term -> term TIMES factor .)
    TRY             reduce using rule 32 (term -> term TIMES factor .)
    IMPORT          reduce using rule 32 (term -> term TIMES factor .)
    FROM            reduce using rule 32 (term -> term TIMES factor .)
    CLASS           reduce using rule 32 (term -> term TIMES factor .)
    EXCEPT          reduce using rule 32 (term -> term TIMES factor .)
    ELSE            reduce using rule 32 (term -> term TIMES factor .)
    ELIF            reduce using rule 32 (term -> term TIMES factor .)
    FINALLY         reduce using rule 32 (term -> term TIMES factor .)
    RPAREN          reduce using rule 32 (term -> term TIMES factor .)
    COMMA           reduce using rule 32 (term -> term TIMES factor .)


state 116

    (33) term -> term DIVIDE factor .

    TIMES           reduce using rule 33 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 33 (term -> term DIVIDE factor .)
    FLOOR_DIVIDE    reduce using rule 33 (term -> term DIVIDE factor .)
    MODULO          reduce using rule 33 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 33 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 33 (term -> term DIVIDE factor .)
    POWER           reduce using rule 33 (term -> term DIVIDE factor .)
    LESS            reduce using rule 33 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 33 (term -> term DIVIDE factor .)
    EQUAL           reduce using rule 33 (term -> term DIVIDE factor .)
    NOTEQUAL        reduce using rule 33 (term -> term DIVIDE factor .)
    LESSEQUAL       reduce using rule 33 (term -> term DIVIDE factor .)
    GREATEREQUAL    reduce using rule 33 (term -> term DIVIDE factor .)
    END             reduce using rule 33 (term -> term DIVIDE factor .)
    NEWLINE         reduce using rule 33 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 33 (term -> term DIVIDE factor .)
    ID              reduce using rule 33 (term -> term DIVIDE factor .)
    IF              reduce using rule 33 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 33 (term -> term DIVIDE factor .)
    FOR             reduce using rule 33 (term -> term DIVIDE factor .)
    DEF             reduce using rule 33 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 33 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 33 (term -> term DIVIDE factor .)
    CONTINUE        reduce using rule 33 (term -> term DIVIDE factor .)
    PASS            reduce using rule 33 (term -> term DIVIDE factor .)
    TRY             reduce using rule 33 (term -> term DIVIDE factor .)
    IMPORT          reduce using rule 33 (term -> term DIVIDE factor .)
    FROM            reduce using rule 33 (term -> term DIVIDE factor .)
    CLASS           reduce using rule 33 (term -> term DIVIDE factor .)
    EXCEPT          reduce using rule 33 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 33 (term -> term DIVIDE factor .)
    ELIF            reduce using rule 33 (term -> term DIVIDE factor .)
    FINALLY         reduce using rule 33 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 33 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 33 (term -> term DIVIDE factor .)


state 117

    (34) term -> term FLOOR_DIVIDE factor .

    TIMES           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    DIVIDE          reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    FLOOR_DIVIDE    reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    MODULO          reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    PLUS            reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    MINUS           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    POWER           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    LESS            reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    GREATER         reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    EQUAL           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    NOTEQUAL        reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    LESSEQUAL       reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    GREATEREQUAL    reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    END             reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    NEWLINE         reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    PRINT           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    ID              reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    IF              reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    WHILE           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    FOR             reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    DEF             reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    RETURN          reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    BREAK           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    CONTINUE        reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    PASS            reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    TRY             reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    IMPORT          reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    FROM            reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    CLASS           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    EXCEPT          reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    ELSE            reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    ELIF            reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    FINALLY         reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    RPAREN          reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)
    COMMA           reduce using rule 34 (term -> term FLOOR_DIVIDE factor .)


state 118

    (35) term -> term MODULO factor .

    TIMES           reduce using rule 35 (term -> term MODULO factor .)
    DIVIDE          reduce using rule 35 (term -> term MODULO factor .)
    FLOOR_DIVIDE    reduce using rule 35 (term -> term MODULO factor .)
    MODULO          reduce using rule 35 (term -> term MODULO factor .)
    PLUS            reduce using rule 35 (term -> term MODULO factor .)
    MINUS           reduce using rule 35 (term -> term MODULO factor .)
    POWER           reduce using rule 35 (term -> term MODULO factor .)
    LESS            reduce using rule 35 (term -> term MODULO factor .)
    GREATER         reduce using rule 35 (term -> term MODULO factor .)
    EQUAL           reduce using rule 35 (term -> term MODULO factor .)
    NOTEQUAL        reduce using rule 35 (term -> term MODULO factor .)
    LESSEQUAL       reduce using rule 35 (term -> term MODULO factor .)
    GREATEREQUAL    reduce using rule 35 (term -> term MODULO factor .)
    END             reduce using rule 35 (term -> term MODULO factor .)
    NEWLINE         reduce using rule 35 (term -> term MODULO factor .)
    PRINT           reduce using rule 35 (term -> term MODULO factor .)
    ID              reduce using rule 35 (term -> term MODULO factor .)
    IF              reduce using rule 35 (term -> term MODULO factor .)
    WHILE           reduce using rule 35 (term -> term MODULO factor .)
    FOR             reduce using rule 35 (term -> term MODULO factor .)
    DEF             reduce using rule 35 (term -> term MODULO factor .)
    RETURN          reduce using rule 35 (term -> term MODULO factor .)
    BREAK           reduce using rule 35 (term -> term MODULO factor .)
    CONTINUE        reduce using rule 35 (term -> term MODULO factor .)
    PASS            reduce using rule 35 (term -> term MODULO factor .)
    TRY             reduce using rule 35 (term -> term MODULO factor .)
    IMPORT          reduce using rule 35 (term -> term MODULO factor .)
    FROM            reduce using rule 35 (term -> term MODULO factor .)
    CLASS           reduce using rule 35 (term -> term MODULO factor .)
    EXCEPT          reduce using rule 35 (term -> term MODULO factor .)
    ELSE            reduce using rule 35 (term -> term MODULO factor .)
    ELIF            reduce using rule 35 (term -> term MODULO factor .)
    FINALLY         reduce using rule 35 (term -> term MODULO factor .)
    RPAREN          reduce using rule 35 (term -> term MODULO factor .)
    COMMA           reduce using rule 35 (term -> term MODULO factor .)


state 119

    (42) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    FLOOR_DIVIDE    reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    POWER           reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    DEF             reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    PASS            reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    TRY             reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    IMPORT          reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    FROM            reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    EXCEPT          reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    ELIF            reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    FINALLY         reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 42 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 42 (factor -> LPAREN expression RPAREN .)


state 120

    (67) try_except_statement -> TRY COLON statements EXCEPT . COLON statements
    (68) try_except_statement -> TRY COLON statements EXCEPT . COLON statements FINALLY COLON statements

    COLON           shift and go to state 133


state 121

    (70) import_statement -> FROM ID IMPORT ID .

    END             reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    NEWLINE         reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    PRINT           reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    ID              reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    IF              reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    WHILE           reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    FOR             reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    DEF             reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    RETURN          reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    BREAK           reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    CONTINUE        reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    PASS            reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    TRY             reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    IMPORT          reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    FROM            reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    CLASS           reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    EXCEPT          reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    ELSE            reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    ELIF            reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)
    FINALLY         reduce using rule 70 (import_statement -> FROM ID IMPORT ID .)


state 122

    (71) class_definition -> CLASS ID COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 71 (class_definition -> CLASS ID COLON statements .)
    EXCEPT          reduce using rule 71 (class_definition -> CLASS ID COLON statements .)
    ELSE            reduce using rule 71 (class_definition -> CLASS ID COLON statements .)
    ELIF            reduce using rule 71 (class_definition -> CLASS ID COLON statements .)
    FINALLY         reduce using rule 71 (class_definition -> CLASS ID COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! PRINT           [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! ID              [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! IF              [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! WHILE           [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! FOR             [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! DEF             [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! RETURN          [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! BREAK           [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! CONTINUE        [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! PASS            [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! TRY             [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! IMPORT          [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! FROM            [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]
  ! CLASS           [ reduce using rule 71 (class_definition -> CLASS ID COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 123

    (72) class_definition -> CLASS ID LPAREN ID . RPAREN COLON statements

    RPAREN          shift and go to state 134


state 124

    (21) print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .

    END             reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    NEWLINE         reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    PRINT           reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    ID              reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    IF              reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    WHILE           reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    FOR             reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    DEF             reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    RETURN          reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    BREAK           reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    CONTINUE        reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    PASS            reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    TRY             reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    IMPORT          reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    FROM            reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    CLASS           reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    EXCEPT          reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    ELSE            reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    ELIF            reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    FINALLY         reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)


state 125

    (23) expression_list -> expression_list COMMA expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    RPAREN          reduce using rule 23 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 23 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 126

    (25) input_statement -> ID ASSIGN INPUT LPAREN RPAREN .

    NEWLINE         reduce using rule 25 (input_statement -> ID ASSIGN INPUT LPAREN RPAREN .)


state 127

    (62) argument_list -> argument_list COMMA expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    RPAREN          reduce using rule 62 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 62 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 128

    (50) if_statement -> IF LPAREN expression RPAREN statements . END
    (51) if_statement -> IF LPAREN expression RPAREN statements . ELSE statements END
    (52) if_statement -> IF LPAREN expression RPAREN statements . ELIF LPAREN expression RPAREN statements ELSE statements END
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    END             shift and go to state 135
    ELSE            shift and go to state 136
    ELIF            shift and go to state 137
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 129

    (53) while_statement -> WHILE LPAREN expression RPAREN statements . END
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    END             shift and go to state 138
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 130

    (54) for_statement -> FOR LPAREN ID IN RANGE . LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END

    LPAREN          shift and go to state 139


state 131

    (55) function_def -> DEF ID LPAREN parameter_list RPAREN . COLON statements

    COLON           shift and go to state 140


state 132

    (58) parameter_list -> parameter_list COMMA . ID

    ID              shift and go to state 141


state 133

    (67) try_except_statement -> TRY COLON statements EXCEPT COLON . statements
    (68) try_except_statement -> TRY COLON statements EXCEPT COLON . statements FINALLY COLON statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 142
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 134

    (72) class_definition -> CLASS ID LPAREN ID RPAREN . COLON statements

    COLON           shift and go to state 143


state 135

    (50) if_statement -> IF LPAREN expression RPAREN statements END .

    END             reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    NEWLINE         reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    PRINT           reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    ID              reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    IF              reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    WHILE           reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    FOR             reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    DEF             reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    RETURN          reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    BREAK           reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    CONTINUE        reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    PASS            reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    TRY             reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    IMPORT          reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    FROM            reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    CLASS           reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    EXCEPT          reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    ELSE            reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    ELIF            reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)
    FINALLY         reduce using rule 50 (if_statement -> IF LPAREN expression RPAREN statements END .)


state 136

    (51) if_statement -> IF LPAREN expression RPAREN statements ELSE . statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 144
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 137

    (52) if_statement -> IF LPAREN expression RPAREN statements ELIF . LPAREN expression RPAREN statements ELSE statements END

    LPAREN          shift and go to state 145


state 138

    (53) while_statement -> WHILE LPAREN expression RPAREN statements END .

    END             reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    NEWLINE         reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    PRINT           reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    ID              reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    IF              reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    WHILE           reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    FOR             reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    DEF             reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    RETURN          reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    BREAK           reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    CONTINUE        reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    PASS            reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    TRY             reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    IMPORT          reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    FROM            reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    CLASS           reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    EXCEPT          reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    ELSE            reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    ELIF            reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)
    FINALLY         reduce using rule 53 (while_statement -> WHILE LPAREN expression RPAREN statements END .)


state 139

    (54) for_statement -> FOR LPAREN ID IN RANGE LPAREN . NUMBER COMMA NUMBER RPAREN RPAREN statements END

    NUMBER          shift and go to state 146


state 140

    (55) function_def -> DEF ID LPAREN parameter_list RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 147
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 141

    (58) parameter_list -> parameter_list COMMA ID .

    RPAREN          reduce using rule 58 (parameter_list -> parameter_list COMMA ID .)
    COMMA           reduce using rule 58 (parameter_list -> parameter_list COMMA ID .)


state 142

    (67) try_except_statement -> TRY COLON statements EXCEPT COLON statements .
    (68) try_except_statement -> TRY COLON statements EXCEPT COLON statements . FINALLY COLON statements
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for FINALLY resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    EXCEPT          reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    ELSE            reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    ELIF            reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    FINALLY         shift and go to state 148
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! PRINT           [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! ID              [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! IF              [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! WHILE           [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FOR             [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! DEF             [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! RETURN          [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! BREAK           [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! CONTINUE        [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! PASS            [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! TRY             [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! IMPORT          [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FROM            [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! CLASS           [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FINALLY         [ reduce using rule 67 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 143

    (72) class_definition -> CLASS ID LPAREN ID RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 149
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 144

    (51) if_statement -> IF LPAREN expression RPAREN statements ELSE statements . END
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    END             shift and go to state 150
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 145

    (52) if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN . expression RPAREN statements ELSE statements END
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . expression POWER term
    (29) expression -> . comparison
    (30) expression -> . term
    (31) expression -> . NOT expression
    (44) comparison -> . expression LESS expression
    (45) comparison -> . expression GREATER expression
    (46) comparison -> . expression EQUAL expression
    (47) comparison -> . expression NOTEQUAL expression
    (48) comparison -> . expression LESSEQUAL expression
    (49) comparison -> . expression GREATEREQUAL expression
    (32) term -> . term TIMES factor
    (33) term -> . term DIVIDE factor
    (34) term -> . term FLOOR_DIVIDE factor
    (35) term -> . term MODULO factor
    (36) term -> . factor
    (37) factor -> . NUMBER
    (38) factor -> . STRING
    (39) factor -> . TRUE
    (40) factor -> . FALSE
    (41) factor -> . ID
    (42) factor -> . LPAREN expression RPAREN
    (43) factor -> . MINUS factor

    NOT             shift and go to state 52
    NUMBER          shift and go to state 54
    STRING          shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ID              shift and go to state 58
    LPAREN          shift and go to state 59
    MINUS           shift and go to state 50

    expression                     shift and go to state 151
    term                           shift and go to state 49
    comparison                     shift and go to state 51
    factor                         shift and go to state 53

state 146

    (54) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER . COMMA NUMBER RPAREN RPAREN statements END

    COMMA           shift and go to state 152


state 147

    (55) function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    EXCEPT          reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    ELSE            reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    ELIF            reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    FINALLY         reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! PRINT           [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 55 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 148

    (68) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY . COLON statements

    COLON           shift and go to state 153


state 149

    (72) class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    EXCEPT          reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    ELSE            reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    ELIF            reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    FINALLY         reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! PRINT           [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 72 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 150

    (51) if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .

    END             reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    NEWLINE         reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    PRINT           reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    ID              reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    IF              reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    WHILE           reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    FOR             reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    DEF             reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    RETURN          reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    BREAK           reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    CONTINUE        reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    PASS            reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    TRY             reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    IMPORT          reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    FROM            reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    CLASS           reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    EXCEPT          reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    ELSE            reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    ELIF            reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)
    FINALLY         reduce using rule 51 (if_statement -> IF LPAREN expression RPAREN statements ELSE statements END .)


state 151

    (52) if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression . RPAREN statements ELSE statements END
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term
    (28) expression -> expression . POWER term
    (44) comparison -> expression . LESS expression
    (45) comparison -> expression . GREATER expression
    (46) comparison -> expression . EQUAL expression
    (47) comparison -> expression . NOTEQUAL expression
    (48) comparison -> expression . LESSEQUAL expression
    (49) comparison -> expression . GREATEREQUAL expression

    RPAREN          shift and go to state 154
    PLUS            shift and go to state 75
    MINUS           shift and go to state 76
    POWER           shift and go to state 77
    LESS            shift and go to state 78
    GREATER         shift and go to state 79
    EQUAL           shift and go to state 80
    NOTEQUAL        shift and go to state 81
    LESSEQUAL       shift and go to state 82
    GREATEREQUAL    shift and go to state 83


state 152

    (54) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA . NUMBER RPAREN RPAREN statements END

    NUMBER          shift and go to state 155


state 153

    (68) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 156
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 154

    (52) if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN . statements ELSE statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 157
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 155

    (54) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER . RPAREN RPAREN statements END

    RPAREN          shift and go to state 158


state 156

    (68) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    EXCEPT          reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    ELSE            reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    ELIF            reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    FINALLY         reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! PRINT           [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! ID              [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! IF              [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! WHILE           [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! FOR             [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! DEF             [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! RETURN          [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! BREAK           [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! CONTINUE        [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! PASS            [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! TRY             [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! IMPORT          [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! FROM            [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! CLASS           [ reduce using rule 68 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 157

    (52) if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements . ELSE statements END
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    ELSE            shift and go to state 159
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 158

    (54) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN . RPAREN statements END

    RPAREN          shift and go to state 160


state 159

    (52) if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE . statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 161
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 160

    (54) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN . statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 162
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 161

    (52) if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements . END
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    END             shift and go to state 163
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 162

    (54) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements . END
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (50) if_statement -> . IF LPAREN expression RPAREN statements END
    (51) if_statement -> . IF LPAREN expression RPAREN statements ELSE statements END
    (52) if_statement -> . IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END
    (53) while_statement -> . WHILE LPAREN expression RPAREN statements END
    (54) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END
    (55) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (59) function_call -> . ID LPAREN argument_list RPAREN
    (63) return_statement -> . RETURN expression
    (64) break_statement -> . BREAK
    (65) continue_statement -> . CONTINUE
    (66) pass_statement -> . PASS
    (67) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (68) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (69) import_statement -> . IMPORT ID
    (70) import_statement -> . FROM ID IMPORT ID
    (71) class_definition -> . CLASS ID COLON statements
    (72) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    END             shift and go to state 164
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 163

    (52) if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .

    END             reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    NEWLINE         reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    PRINT           reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    ID              reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    IF              reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    WHILE           reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    FOR             reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    DEF             reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    RETURN          reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    BREAK           reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    CONTINUE        reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    PASS            reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    TRY             reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    IMPORT          reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    FROM            reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    CLASS           reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    EXCEPT          reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    ELSE            reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    ELIF            reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)
    FINALLY         reduce using rule 52 (if_statement -> IF LPAREN expression RPAREN statements ELIF LPAREN expression RPAREN statements ELSE statements END .)


state 164

    (54) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .

    END             reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    NEWLINE         reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    PRINT           reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    ID              reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    IF              reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    WHILE           reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    FOR             reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    DEF             reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    RETURN          reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    BREAK           reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    CONTINUE        reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    PASS            reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    TRY             reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    IMPORT          reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    FROM            reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    CLASS           reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    EXCEPT          reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    ELSE            reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    ELIF            reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)
    FINALLY         reduce using rule 54 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN statements END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 122 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for IF in state 122 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 122 resolved as shift
WARNING: shift/reduce conflict for FOR in state 122 resolved as shift
WARNING: shift/reduce conflict for DEF in state 122 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 122 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 122 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 122 resolved as shift
WARNING: shift/reduce conflict for PASS in state 122 resolved as shift
WARNING: shift/reduce conflict for TRY in state 122 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 122 resolved as shift
WARNING: shift/reduce conflict for FROM in state 122 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 122 resolved as shift
WARNING: shift/reduce conflict for FINALLY in state 142 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 142 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 142 resolved as shift
WARNING: shift/reduce conflict for ID in state 142 resolved as shift
WARNING: shift/reduce conflict for IF in state 142 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 142 resolved as shift
WARNING: shift/reduce conflict for FOR in state 142 resolved as shift
WARNING: shift/reduce conflict for DEF in state 142 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 142 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 142 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 142 resolved as shift
WARNING: shift/reduce conflict for PASS in state 142 resolved as shift
WARNING: shift/reduce conflict for TRY in state 142 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 142 resolved as shift
WARNING: shift/reduce conflict for FROM in state 142 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 142 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 147 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 147 resolved as shift
WARNING: shift/reduce conflict for ID in state 147 resolved as shift
WARNING: shift/reduce conflict for IF in state 147 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 147 resolved as shift
WARNING: shift/reduce conflict for FOR in state 147 resolved as shift
WARNING: shift/reduce conflict for DEF in state 147 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 147 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 147 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 147 resolved as shift
WARNING: shift/reduce conflict for PASS in state 147 resolved as shift
WARNING: shift/reduce conflict for TRY in state 147 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 147 resolved as shift
WARNING: shift/reduce conflict for FROM in state 147 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 147 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 149 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 149 resolved as shift
WARNING: shift/reduce conflict for ID in state 149 resolved as shift
WARNING: shift/reduce conflict for IF in state 149 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 149 resolved as shift
WARNING: shift/reduce conflict for FOR in state 149 resolved as shift
WARNING: shift/reduce conflict for DEF in state 149 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 149 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 149 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 149 resolved as shift
WARNING: shift/reduce conflict for PASS in state 149 resolved as shift
WARNING: shift/reduce conflict for TRY in state 149 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 149 resolved as shift
WARNING: shift/reduce conflict for FROM in state 149 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 149 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 156 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for IF in state 156 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 156 resolved as shift
WARNING: shift/reduce conflict for FOR in state 156 resolved as shift
WARNING: shift/reduce conflict for DEF in state 156 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 156 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 156 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 156 resolved as shift
WARNING: shift/reduce conflict for PASS in state 156 resolved as shift
WARNING: shift/reduce conflict for TRY in state 156 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 156 resolved as shift
WARNING: shift/reduce conflict for FROM in state 156 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 156 resolved as shift
