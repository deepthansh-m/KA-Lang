Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    GLOBAL
    NONLOCAL

Grammar

Rule 0     S' -> program
Rule 1     program -> START NEWLINE statements END
Rule 2     statements -> statement
Rule 3     statements -> statements statement
Rule 4     statements -> statements NEWLINE
Rule 5     statements -> NEWLINE
Rule 6     statement -> print_statement
Rule 7     statement -> assignment_statement NEWLINE
Rule 8     statement -> input_statement NEWLINE
Rule 9     statement -> if_statement
Rule 10    statement -> while_statement
Rule 11    statement -> for_statement
Rule 12    statement -> function_def
Rule 13    statement -> function_call
Rule 14    statement -> return_statement
Rule 15    statement -> break_statement
Rule 16    statement -> continue_statement
Rule 17    statement -> pass_statement
Rule 18    statement -> try_except_statement
Rule 19    statement -> import_statement
Rule 20    statement -> class_definition
Rule 21    print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE
Rule 22    expression_list -> expression
Rule 23    expression_list -> expression_list COMMA expression
Rule 24    assignment_statement -> ID ASSIGN expression
Rule 25    input_statement -> ID ASSIGN INPUT LPAREN RPAREN
Rule 26    expression -> expression PLUS term
Rule 27    expression -> expression MINUS term
Rule 28    expression -> term
Rule 29    term -> term TIMES factor
Rule 30    term -> term DIVIDE factor
Rule 31    term -> factor
Rule 32    factor -> NUMBER
Rule 33    factor -> STRING
Rule 34    factor -> ID
Rule 35    factor -> LPAREN expression RPAREN
Rule 36    factor -> MINUS factor
Rule 37    comparison -> expression LESS expression
Rule 38    comparison -> expression GREATER expression
Rule 39    comparison -> expression EQUAL expression
Rule 40    comparison -> expression NOTEQUAL expression
Rule 41    comparison -> expression LESSEQUAL expression
Rule 42    comparison -> expression GREATEREQUAL expression
Rule 43    if_statement -> IF LPAREN expression RPAREN COLON statements
Rule 44    if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements
Rule 45    if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
Rule 46    while_statement -> WHILE LPAREN expression RPAREN COLON statements
Rule 47    for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
Rule 48    function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements
Rule 49    parameter_list -> empty
Rule 50    parameter_list -> ID
Rule 51    parameter_list -> parameter_list COMMA ID
Rule 52    function_call -> ID LPAREN argument_list RPAREN
Rule 53    argument_list -> empty
Rule 54    argument_list -> expression
Rule 55    argument_list -> argument_list COMMA expression
Rule 56    return_statement -> RETURN expression
Rule 57    break_statement -> BREAK
Rule 58    continue_statement -> CONTINUE
Rule 59    pass_statement -> PASS
Rule 60    try_except_statement -> TRY COLON statements EXCEPT COLON statements
Rule 61    try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
Rule 62    import_statement -> IMPORT ID
Rule 63    import_statement -> FROM ID IMPORT ID
Rule 64    class_definition -> CLASS ID COLON statements
Rule 65    class_definition -> CLASS ID LPAREN ID RPAREN COLON statements
Rule 66    empty -> <empty>

Terminals, with rules where they appear

AS                   : 
ASSIGN               : 24 25
BREAK                : 57
CLASS                : 64 65
COLON                : 43 44 44 45 45 46 47 48 60 60 61 61 61 64 65
COMMA                : 23 47 51 55
CONTINUE             : 58
DEF                  : 48
DIVIDE               : 30
ELIF                 : 45
ELSE                 : 44
END                  : 1
EQUAL                : 39
EXCEPT               : 60 61
FINALLY              : 61
FOR                  : 47
FROM                 : 63
GLOBAL               : 
GREATER              : 38
GREATEREQUAL         : 42
ID                   : 24 25 34 47 48 50 51 52 62 63 63 64 65 65
IF                   : 43 44 45
IMPORT               : 62 63
IN                   : 47
INPUT                : 25
LESS                 : 37
LESSEQUAL            : 41
LPAREN               : 21 25 35 43 44 45 45 46 47 47 48 52 65
MINUS                : 27 36
NEWLINE              : 1 4 5 7 8 21
NONLOCAL             : 
NOTEQUAL             : 40
NUMBER               : 32 47 47
PASS                 : 59
PLUS                 : 26
PRINT                : 21
RANGE                : 47
RETURN               : 56
RPAREN               : 21 25 35 43 44 45 45 46 47 47 48 52 65
START                : 1
STRING               : 33
TIMES                : 29
TRY                  : 60 61
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

argument_list        : 52 55
assignment_statement : 7
break_statement      : 15
class_definition     : 20
comparison           : 
continue_statement   : 16
empty                : 49 53
expression           : 22 23 24 26 27 35 37 37 38 38 39 39 40 40 41 41 42 42 43 44 45 45 46 54 55 56
expression_list      : 21 23
factor               : 29 30 31 36
for_statement        : 11
function_call        : 13
function_def         : 12
if_statement         : 9
import_statement     : 19
input_statement      : 8
parameter_list       : 48 51
pass_statement       : 17
print_statement      : 6
program              : 0
return_statement     : 14
statement            : 2 3
statements           : 1 3 4 43 44 44 45 45 46 47 48 60 60 61 61 61 64 65
term                 : 26 27 28 29 30
try_except_statement : 18
while_statement      : 10

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . START NEWLINE statements END

    START           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> START . NEWLINE statements END

    NEWLINE         shift and go to state 3


state 3

    (1) program -> START NEWLINE . statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 5
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 4

    (5) statements -> NEWLINE .

    END             reduce using rule 5 (statements -> NEWLINE .)
    NEWLINE         reduce using rule 5 (statements -> NEWLINE .)
    PRINT           reduce using rule 5 (statements -> NEWLINE .)
    ID              reduce using rule 5 (statements -> NEWLINE .)
    IF              reduce using rule 5 (statements -> NEWLINE .)
    WHILE           reduce using rule 5 (statements -> NEWLINE .)
    FOR             reduce using rule 5 (statements -> NEWLINE .)
    DEF             reduce using rule 5 (statements -> NEWLINE .)
    RETURN          reduce using rule 5 (statements -> NEWLINE .)
    BREAK           reduce using rule 5 (statements -> NEWLINE .)
    CONTINUE        reduce using rule 5 (statements -> NEWLINE .)
    PASS            reduce using rule 5 (statements -> NEWLINE .)
    TRY             reduce using rule 5 (statements -> NEWLINE .)
    IMPORT          reduce using rule 5 (statements -> NEWLINE .)
    FROM            reduce using rule 5 (statements -> NEWLINE .)
    CLASS           reduce using rule 5 (statements -> NEWLINE .)
    EXCEPT          reduce using rule 5 (statements -> NEWLINE .)
    ELSE            reduce using rule 5 (statements -> NEWLINE .)
    ELIF            reduce using rule 5 (statements -> NEWLINE .)
    FINALLY         reduce using rule 5 (statements -> NEWLINE .)


state 5

    (1) program -> START NEWLINE statements . END
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    END             shift and go to state 37
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 6

    (2) statements -> statement .

    END             reduce using rule 2 (statements -> statement .)
    NEWLINE         reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    DEF             reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)
    BREAK           reduce using rule 2 (statements -> statement .)
    CONTINUE        reduce using rule 2 (statements -> statement .)
    PASS            reduce using rule 2 (statements -> statement .)
    TRY             reduce using rule 2 (statements -> statement .)
    IMPORT          reduce using rule 2 (statements -> statement .)
    FROM            reduce using rule 2 (statements -> statement .)
    CLASS           reduce using rule 2 (statements -> statement .)
    EXCEPT          reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ELIF            reduce using rule 2 (statements -> statement .)
    FINALLY         reduce using rule 2 (statements -> statement .)


state 7

    (6) statement -> print_statement .

    END             reduce using rule 6 (statement -> print_statement .)
    NEWLINE         reduce using rule 6 (statement -> print_statement .)
    PRINT           reduce using rule 6 (statement -> print_statement .)
    ID              reduce using rule 6 (statement -> print_statement .)
    IF              reduce using rule 6 (statement -> print_statement .)
    WHILE           reduce using rule 6 (statement -> print_statement .)
    FOR             reduce using rule 6 (statement -> print_statement .)
    DEF             reduce using rule 6 (statement -> print_statement .)
    RETURN          reduce using rule 6 (statement -> print_statement .)
    BREAK           reduce using rule 6 (statement -> print_statement .)
    CONTINUE        reduce using rule 6 (statement -> print_statement .)
    PASS            reduce using rule 6 (statement -> print_statement .)
    TRY             reduce using rule 6 (statement -> print_statement .)
    IMPORT          reduce using rule 6 (statement -> print_statement .)
    FROM            reduce using rule 6 (statement -> print_statement .)
    CLASS           reduce using rule 6 (statement -> print_statement .)
    EXCEPT          reduce using rule 6 (statement -> print_statement .)
    ELSE            reduce using rule 6 (statement -> print_statement .)
    ELIF            reduce using rule 6 (statement -> print_statement .)
    FINALLY         reduce using rule 6 (statement -> print_statement .)


state 8

    (7) statement -> assignment_statement . NEWLINE

    NEWLINE         shift and go to state 39


state 9

    (8) statement -> input_statement . NEWLINE

    NEWLINE         shift and go to state 40


state 10

    (9) statement -> if_statement .

    END             reduce using rule 9 (statement -> if_statement .)
    NEWLINE         reduce using rule 9 (statement -> if_statement .)
    PRINT           reduce using rule 9 (statement -> if_statement .)
    ID              reduce using rule 9 (statement -> if_statement .)
    IF              reduce using rule 9 (statement -> if_statement .)
    WHILE           reduce using rule 9 (statement -> if_statement .)
    FOR             reduce using rule 9 (statement -> if_statement .)
    DEF             reduce using rule 9 (statement -> if_statement .)
    RETURN          reduce using rule 9 (statement -> if_statement .)
    BREAK           reduce using rule 9 (statement -> if_statement .)
    CONTINUE        reduce using rule 9 (statement -> if_statement .)
    PASS            reduce using rule 9 (statement -> if_statement .)
    TRY             reduce using rule 9 (statement -> if_statement .)
    IMPORT          reduce using rule 9 (statement -> if_statement .)
    FROM            reduce using rule 9 (statement -> if_statement .)
    CLASS           reduce using rule 9 (statement -> if_statement .)
    EXCEPT          reduce using rule 9 (statement -> if_statement .)
    ELSE            reduce using rule 9 (statement -> if_statement .)
    ELIF            reduce using rule 9 (statement -> if_statement .)
    FINALLY         reduce using rule 9 (statement -> if_statement .)


state 11

    (10) statement -> while_statement .

    END             reduce using rule 10 (statement -> while_statement .)
    NEWLINE         reduce using rule 10 (statement -> while_statement .)
    PRINT           reduce using rule 10 (statement -> while_statement .)
    ID              reduce using rule 10 (statement -> while_statement .)
    IF              reduce using rule 10 (statement -> while_statement .)
    WHILE           reduce using rule 10 (statement -> while_statement .)
    FOR             reduce using rule 10 (statement -> while_statement .)
    DEF             reduce using rule 10 (statement -> while_statement .)
    RETURN          reduce using rule 10 (statement -> while_statement .)
    BREAK           reduce using rule 10 (statement -> while_statement .)
    CONTINUE        reduce using rule 10 (statement -> while_statement .)
    PASS            reduce using rule 10 (statement -> while_statement .)
    TRY             reduce using rule 10 (statement -> while_statement .)
    IMPORT          reduce using rule 10 (statement -> while_statement .)
    FROM            reduce using rule 10 (statement -> while_statement .)
    CLASS           reduce using rule 10 (statement -> while_statement .)
    EXCEPT          reduce using rule 10 (statement -> while_statement .)
    ELSE            reduce using rule 10 (statement -> while_statement .)
    ELIF            reduce using rule 10 (statement -> while_statement .)
    FINALLY         reduce using rule 10 (statement -> while_statement .)


state 12

    (11) statement -> for_statement .

    END             reduce using rule 11 (statement -> for_statement .)
    NEWLINE         reduce using rule 11 (statement -> for_statement .)
    PRINT           reduce using rule 11 (statement -> for_statement .)
    ID              reduce using rule 11 (statement -> for_statement .)
    IF              reduce using rule 11 (statement -> for_statement .)
    WHILE           reduce using rule 11 (statement -> for_statement .)
    FOR             reduce using rule 11 (statement -> for_statement .)
    DEF             reduce using rule 11 (statement -> for_statement .)
    RETURN          reduce using rule 11 (statement -> for_statement .)
    BREAK           reduce using rule 11 (statement -> for_statement .)
    CONTINUE        reduce using rule 11 (statement -> for_statement .)
    PASS            reduce using rule 11 (statement -> for_statement .)
    TRY             reduce using rule 11 (statement -> for_statement .)
    IMPORT          reduce using rule 11 (statement -> for_statement .)
    FROM            reduce using rule 11 (statement -> for_statement .)
    CLASS           reduce using rule 11 (statement -> for_statement .)
    EXCEPT          reduce using rule 11 (statement -> for_statement .)
    ELSE            reduce using rule 11 (statement -> for_statement .)
    ELIF            reduce using rule 11 (statement -> for_statement .)
    FINALLY         reduce using rule 11 (statement -> for_statement .)


state 13

    (12) statement -> function_def .

    END             reduce using rule 12 (statement -> function_def .)
    NEWLINE         reduce using rule 12 (statement -> function_def .)
    PRINT           reduce using rule 12 (statement -> function_def .)
    ID              reduce using rule 12 (statement -> function_def .)
    IF              reduce using rule 12 (statement -> function_def .)
    WHILE           reduce using rule 12 (statement -> function_def .)
    FOR             reduce using rule 12 (statement -> function_def .)
    DEF             reduce using rule 12 (statement -> function_def .)
    RETURN          reduce using rule 12 (statement -> function_def .)
    BREAK           reduce using rule 12 (statement -> function_def .)
    CONTINUE        reduce using rule 12 (statement -> function_def .)
    PASS            reduce using rule 12 (statement -> function_def .)
    TRY             reduce using rule 12 (statement -> function_def .)
    IMPORT          reduce using rule 12 (statement -> function_def .)
    FROM            reduce using rule 12 (statement -> function_def .)
    CLASS           reduce using rule 12 (statement -> function_def .)
    EXCEPT          reduce using rule 12 (statement -> function_def .)
    ELSE            reduce using rule 12 (statement -> function_def .)
    ELIF            reduce using rule 12 (statement -> function_def .)
    FINALLY         reduce using rule 12 (statement -> function_def .)


state 14

    (13) statement -> function_call .

    END             reduce using rule 13 (statement -> function_call .)
    NEWLINE         reduce using rule 13 (statement -> function_call .)
    PRINT           reduce using rule 13 (statement -> function_call .)
    ID              reduce using rule 13 (statement -> function_call .)
    IF              reduce using rule 13 (statement -> function_call .)
    WHILE           reduce using rule 13 (statement -> function_call .)
    FOR             reduce using rule 13 (statement -> function_call .)
    DEF             reduce using rule 13 (statement -> function_call .)
    RETURN          reduce using rule 13 (statement -> function_call .)
    BREAK           reduce using rule 13 (statement -> function_call .)
    CONTINUE        reduce using rule 13 (statement -> function_call .)
    PASS            reduce using rule 13 (statement -> function_call .)
    TRY             reduce using rule 13 (statement -> function_call .)
    IMPORT          reduce using rule 13 (statement -> function_call .)
    FROM            reduce using rule 13 (statement -> function_call .)
    CLASS           reduce using rule 13 (statement -> function_call .)
    EXCEPT          reduce using rule 13 (statement -> function_call .)
    ELSE            reduce using rule 13 (statement -> function_call .)
    ELIF            reduce using rule 13 (statement -> function_call .)
    FINALLY         reduce using rule 13 (statement -> function_call .)


state 15

    (14) statement -> return_statement .

    END             reduce using rule 14 (statement -> return_statement .)
    NEWLINE         reduce using rule 14 (statement -> return_statement .)
    PRINT           reduce using rule 14 (statement -> return_statement .)
    ID              reduce using rule 14 (statement -> return_statement .)
    IF              reduce using rule 14 (statement -> return_statement .)
    WHILE           reduce using rule 14 (statement -> return_statement .)
    FOR             reduce using rule 14 (statement -> return_statement .)
    DEF             reduce using rule 14 (statement -> return_statement .)
    RETURN          reduce using rule 14 (statement -> return_statement .)
    BREAK           reduce using rule 14 (statement -> return_statement .)
    CONTINUE        reduce using rule 14 (statement -> return_statement .)
    PASS            reduce using rule 14 (statement -> return_statement .)
    TRY             reduce using rule 14 (statement -> return_statement .)
    IMPORT          reduce using rule 14 (statement -> return_statement .)
    FROM            reduce using rule 14 (statement -> return_statement .)
    CLASS           reduce using rule 14 (statement -> return_statement .)
    EXCEPT          reduce using rule 14 (statement -> return_statement .)
    ELSE            reduce using rule 14 (statement -> return_statement .)
    ELIF            reduce using rule 14 (statement -> return_statement .)
    FINALLY         reduce using rule 14 (statement -> return_statement .)


state 16

    (15) statement -> break_statement .

    END             reduce using rule 15 (statement -> break_statement .)
    NEWLINE         reduce using rule 15 (statement -> break_statement .)
    PRINT           reduce using rule 15 (statement -> break_statement .)
    ID              reduce using rule 15 (statement -> break_statement .)
    IF              reduce using rule 15 (statement -> break_statement .)
    WHILE           reduce using rule 15 (statement -> break_statement .)
    FOR             reduce using rule 15 (statement -> break_statement .)
    DEF             reduce using rule 15 (statement -> break_statement .)
    RETURN          reduce using rule 15 (statement -> break_statement .)
    BREAK           reduce using rule 15 (statement -> break_statement .)
    CONTINUE        reduce using rule 15 (statement -> break_statement .)
    PASS            reduce using rule 15 (statement -> break_statement .)
    TRY             reduce using rule 15 (statement -> break_statement .)
    IMPORT          reduce using rule 15 (statement -> break_statement .)
    FROM            reduce using rule 15 (statement -> break_statement .)
    CLASS           reduce using rule 15 (statement -> break_statement .)
    EXCEPT          reduce using rule 15 (statement -> break_statement .)
    ELSE            reduce using rule 15 (statement -> break_statement .)
    ELIF            reduce using rule 15 (statement -> break_statement .)
    FINALLY         reduce using rule 15 (statement -> break_statement .)


state 17

    (16) statement -> continue_statement .

    END             reduce using rule 16 (statement -> continue_statement .)
    NEWLINE         reduce using rule 16 (statement -> continue_statement .)
    PRINT           reduce using rule 16 (statement -> continue_statement .)
    ID              reduce using rule 16 (statement -> continue_statement .)
    IF              reduce using rule 16 (statement -> continue_statement .)
    WHILE           reduce using rule 16 (statement -> continue_statement .)
    FOR             reduce using rule 16 (statement -> continue_statement .)
    DEF             reduce using rule 16 (statement -> continue_statement .)
    RETURN          reduce using rule 16 (statement -> continue_statement .)
    BREAK           reduce using rule 16 (statement -> continue_statement .)
    CONTINUE        reduce using rule 16 (statement -> continue_statement .)
    PASS            reduce using rule 16 (statement -> continue_statement .)
    TRY             reduce using rule 16 (statement -> continue_statement .)
    IMPORT          reduce using rule 16 (statement -> continue_statement .)
    FROM            reduce using rule 16 (statement -> continue_statement .)
    CLASS           reduce using rule 16 (statement -> continue_statement .)
    EXCEPT          reduce using rule 16 (statement -> continue_statement .)
    ELSE            reduce using rule 16 (statement -> continue_statement .)
    ELIF            reduce using rule 16 (statement -> continue_statement .)
    FINALLY         reduce using rule 16 (statement -> continue_statement .)


state 18

    (17) statement -> pass_statement .

    END             reduce using rule 17 (statement -> pass_statement .)
    NEWLINE         reduce using rule 17 (statement -> pass_statement .)
    PRINT           reduce using rule 17 (statement -> pass_statement .)
    ID              reduce using rule 17 (statement -> pass_statement .)
    IF              reduce using rule 17 (statement -> pass_statement .)
    WHILE           reduce using rule 17 (statement -> pass_statement .)
    FOR             reduce using rule 17 (statement -> pass_statement .)
    DEF             reduce using rule 17 (statement -> pass_statement .)
    RETURN          reduce using rule 17 (statement -> pass_statement .)
    BREAK           reduce using rule 17 (statement -> pass_statement .)
    CONTINUE        reduce using rule 17 (statement -> pass_statement .)
    PASS            reduce using rule 17 (statement -> pass_statement .)
    TRY             reduce using rule 17 (statement -> pass_statement .)
    IMPORT          reduce using rule 17 (statement -> pass_statement .)
    FROM            reduce using rule 17 (statement -> pass_statement .)
    CLASS           reduce using rule 17 (statement -> pass_statement .)
    EXCEPT          reduce using rule 17 (statement -> pass_statement .)
    ELSE            reduce using rule 17 (statement -> pass_statement .)
    ELIF            reduce using rule 17 (statement -> pass_statement .)
    FINALLY         reduce using rule 17 (statement -> pass_statement .)


state 19

    (18) statement -> try_except_statement .

    END             reduce using rule 18 (statement -> try_except_statement .)
    NEWLINE         reduce using rule 18 (statement -> try_except_statement .)
    PRINT           reduce using rule 18 (statement -> try_except_statement .)
    ID              reduce using rule 18 (statement -> try_except_statement .)
    IF              reduce using rule 18 (statement -> try_except_statement .)
    WHILE           reduce using rule 18 (statement -> try_except_statement .)
    FOR             reduce using rule 18 (statement -> try_except_statement .)
    DEF             reduce using rule 18 (statement -> try_except_statement .)
    RETURN          reduce using rule 18 (statement -> try_except_statement .)
    BREAK           reduce using rule 18 (statement -> try_except_statement .)
    CONTINUE        reduce using rule 18 (statement -> try_except_statement .)
    PASS            reduce using rule 18 (statement -> try_except_statement .)
    TRY             reduce using rule 18 (statement -> try_except_statement .)
    IMPORT          reduce using rule 18 (statement -> try_except_statement .)
    FROM            reduce using rule 18 (statement -> try_except_statement .)
    CLASS           reduce using rule 18 (statement -> try_except_statement .)
    EXCEPT          reduce using rule 18 (statement -> try_except_statement .)
    ELSE            reduce using rule 18 (statement -> try_except_statement .)
    ELIF            reduce using rule 18 (statement -> try_except_statement .)
    FINALLY         reduce using rule 18 (statement -> try_except_statement .)


state 20

    (19) statement -> import_statement .

    END             reduce using rule 19 (statement -> import_statement .)
    NEWLINE         reduce using rule 19 (statement -> import_statement .)
    PRINT           reduce using rule 19 (statement -> import_statement .)
    ID              reduce using rule 19 (statement -> import_statement .)
    IF              reduce using rule 19 (statement -> import_statement .)
    WHILE           reduce using rule 19 (statement -> import_statement .)
    FOR             reduce using rule 19 (statement -> import_statement .)
    DEF             reduce using rule 19 (statement -> import_statement .)
    RETURN          reduce using rule 19 (statement -> import_statement .)
    BREAK           reduce using rule 19 (statement -> import_statement .)
    CONTINUE        reduce using rule 19 (statement -> import_statement .)
    PASS            reduce using rule 19 (statement -> import_statement .)
    TRY             reduce using rule 19 (statement -> import_statement .)
    IMPORT          reduce using rule 19 (statement -> import_statement .)
    FROM            reduce using rule 19 (statement -> import_statement .)
    CLASS           reduce using rule 19 (statement -> import_statement .)
    EXCEPT          reduce using rule 19 (statement -> import_statement .)
    ELSE            reduce using rule 19 (statement -> import_statement .)
    ELIF            reduce using rule 19 (statement -> import_statement .)
    FINALLY         reduce using rule 19 (statement -> import_statement .)


state 21

    (20) statement -> class_definition .

    END             reduce using rule 20 (statement -> class_definition .)
    NEWLINE         reduce using rule 20 (statement -> class_definition .)
    PRINT           reduce using rule 20 (statement -> class_definition .)
    ID              reduce using rule 20 (statement -> class_definition .)
    IF              reduce using rule 20 (statement -> class_definition .)
    WHILE           reduce using rule 20 (statement -> class_definition .)
    FOR             reduce using rule 20 (statement -> class_definition .)
    DEF             reduce using rule 20 (statement -> class_definition .)
    RETURN          reduce using rule 20 (statement -> class_definition .)
    BREAK           reduce using rule 20 (statement -> class_definition .)
    CONTINUE        reduce using rule 20 (statement -> class_definition .)
    PASS            reduce using rule 20 (statement -> class_definition .)
    TRY             reduce using rule 20 (statement -> class_definition .)
    IMPORT          reduce using rule 20 (statement -> class_definition .)
    FROM            reduce using rule 20 (statement -> class_definition .)
    CLASS           reduce using rule 20 (statement -> class_definition .)
    EXCEPT          reduce using rule 20 (statement -> class_definition .)
    ELSE            reduce using rule 20 (statement -> class_definition .)
    ELIF            reduce using rule 20 (statement -> class_definition .)
    FINALLY         reduce using rule 20 (statement -> class_definition .)


state 22

    (21) print_statement -> PRINT . LPAREN expression_list RPAREN NEWLINE

    LPAREN          shift and go to state 41


state 23

    (24) assignment_statement -> ID . ASSIGN expression
    (25) input_statement -> ID . ASSIGN INPUT LPAREN RPAREN
    (52) function_call -> ID . LPAREN argument_list RPAREN

    ASSIGN          shift and go to state 42
    LPAREN          shift and go to state 43


state 24

    (43) if_statement -> IF . LPAREN expression RPAREN COLON statements
    (44) if_statement -> IF . LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> IF . LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements

    LPAREN          shift and go to state 44


state 25

    (46) while_statement -> WHILE . LPAREN expression RPAREN COLON statements

    LPAREN          shift and go to state 45


state 26

    (47) for_statement -> FOR . LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    LPAREN          shift and go to state 46


state 27

    (48) function_def -> DEF . ID LPAREN parameter_list RPAREN COLON statements

    ID              shift and go to state 47


state 28

    (56) return_statement -> RETURN . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression                     shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 29

    (57) break_statement -> BREAK .

    END             reduce using rule 57 (break_statement -> BREAK .)
    NEWLINE         reduce using rule 57 (break_statement -> BREAK .)
    PRINT           reduce using rule 57 (break_statement -> BREAK .)
    ID              reduce using rule 57 (break_statement -> BREAK .)
    IF              reduce using rule 57 (break_statement -> BREAK .)
    WHILE           reduce using rule 57 (break_statement -> BREAK .)
    FOR             reduce using rule 57 (break_statement -> BREAK .)
    DEF             reduce using rule 57 (break_statement -> BREAK .)
    RETURN          reduce using rule 57 (break_statement -> BREAK .)
    BREAK           reduce using rule 57 (break_statement -> BREAK .)
    CONTINUE        reduce using rule 57 (break_statement -> BREAK .)
    PASS            reduce using rule 57 (break_statement -> BREAK .)
    TRY             reduce using rule 57 (break_statement -> BREAK .)
    IMPORT          reduce using rule 57 (break_statement -> BREAK .)
    FROM            reduce using rule 57 (break_statement -> BREAK .)
    CLASS           reduce using rule 57 (break_statement -> BREAK .)
    EXCEPT          reduce using rule 57 (break_statement -> BREAK .)
    ELSE            reduce using rule 57 (break_statement -> BREAK .)
    ELIF            reduce using rule 57 (break_statement -> BREAK .)
    FINALLY         reduce using rule 57 (break_statement -> BREAK .)


state 30

    (58) continue_statement -> CONTINUE .

    END             reduce using rule 58 (continue_statement -> CONTINUE .)
    NEWLINE         reduce using rule 58 (continue_statement -> CONTINUE .)
    PRINT           reduce using rule 58 (continue_statement -> CONTINUE .)
    ID              reduce using rule 58 (continue_statement -> CONTINUE .)
    IF              reduce using rule 58 (continue_statement -> CONTINUE .)
    WHILE           reduce using rule 58 (continue_statement -> CONTINUE .)
    FOR             reduce using rule 58 (continue_statement -> CONTINUE .)
    DEF             reduce using rule 58 (continue_statement -> CONTINUE .)
    RETURN          reduce using rule 58 (continue_statement -> CONTINUE .)
    BREAK           reduce using rule 58 (continue_statement -> CONTINUE .)
    CONTINUE        reduce using rule 58 (continue_statement -> CONTINUE .)
    PASS            reduce using rule 58 (continue_statement -> CONTINUE .)
    TRY             reduce using rule 58 (continue_statement -> CONTINUE .)
    IMPORT          reduce using rule 58 (continue_statement -> CONTINUE .)
    FROM            reduce using rule 58 (continue_statement -> CONTINUE .)
    CLASS           reduce using rule 58 (continue_statement -> CONTINUE .)
    EXCEPT          reduce using rule 58 (continue_statement -> CONTINUE .)
    ELSE            reduce using rule 58 (continue_statement -> CONTINUE .)
    ELIF            reduce using rule 58 (continue_statement -> CONTINUE .)
    FINALLY         reduce using rule 58 (continue_statement -> CONTINUE .)


state 31

    (59) pass_statement -> PASS .

    END             reduce using rule 59 (pass_statement -> PASS .)
    NEWLINE         reduce using rule 59 (pass_statement -> PASS .)
    PRINT           reduce using rule 59 (pass_statement -> PASS .)
    ID              reduce using rule 59 (pass_statement -> PASS .)
    IF              reduce using rule 59 (pass_statement -> PASS .)
    WHILE           reduce using rule 59 (pass_statement -> PASS .)
    FOR             reduce using rule 59 (pass_statement -> PASS .)
    DEF             reduce using rule 59 (pass_statement -> PASS .)
    RETURN          reduce using rule 59 (pass_statement -> PASS .)
    BREAK           reduce using rule 59 (pass_statement -> PASS .)
    CONTINUE        reduce using rule 59 (pass_statement -> PASS .)
    PASS            reduce using rule 59 (pass_statement -> PASS .)
    TRY             reduce using rule 59 (pass_statement -> PASS .)
    IMPORT          reduce using rule 59 (pass_statement -> PASS .)
    FROM            reduce using rule 59 (pass_statement -> PASS .)
    CLASS           reduce using rule 59 (pass_statement -> PASS .)
    EXCEPT          reduce using rule 59 (pass_statement -> PASS .)
    ELSE            reduce using rule 59 (pass_statement -> PASS .)
    ELIF            reduce using rule 59 (pass_statement -> PASS .)
    FINALLY         reduce using rule 59 (pass_statement -> PASS .)


state 32

    (60) try_except_statement -> TRY . COLON statements EXCEPT COLON statements
    (61) try_except_statement -> TRY . COLON statements EXCEPT COLON statements FINALLY COLON statements

    COLON           shift and go to state 56


state 33

    (62) import_statement -> IMPORT . ID

    ID              shift and go to state 57


state 34

    (63) import_statement -> FROM . ID IMPORT ID

    ID              shift and go to state 58


state 35

    (64) class_definition -> CLASS . ID COLON statements
    (65) class_definition -> CLASS . ID LPAREN ID RPAREN COLON statements

    ID              shift and go to state 59


state 36

    (4) statements -> statements NEWLINE .

    END             reduce using rule 4 (statements -> statements NEWLINE .)
    NEWLINE         reduce using rule 4 (statements -> statements NEWLINE .)
    PRINT           reduce using rule 4 (statements -> statements NEWLINE .)
    ID              reduce using rule 4 (statements -> statements NEWLINE .)
    IF              reduce using rule 4 (statements -> statements NEWLINE .)
    WHILE           reduce using rule 4 (statements -> statements NEWLINE .)
    FOR             reduce using rule 4 (statements -> statements NEWLINE .)
    DEF             reduce using rule 4 (statements -> statements NEWLINE .)
    RETURN          reduce using rule 4 (statements -> statements NEWLINE .)
    BREAK           reduce using rule 4 (statements -> statements NEWLINE .)
    CONTINUE        reduce using rule 4 (statements -> statements NEWLINE .)
    PASS            reduce using rule 4 (statements -> statements NEWLINE .)
    TRY             reduce using rule 4 (statements -> statements NEWLINE .)
    IMPORT          reduce using rule 4 (statements -> statements NEWLINE .)
    FROM            reduce using rule 4 (statements -> statements NEWLINE .)
    CLASS           reduce using rule 4 (statements -> statements NEWLINE .)
    EXCEPT          reduce using rule 4 (statements -> statements NEWLINE .)
    ELSE            reduce using rule 4 (statements -> statements NEWLINE .)
    ELIF            reduce using rule 4 (statements -> statements NEWLINE .)
    FINALLY         reduce using rule 4 (statements -> statements NEWLINE .)


state 37

    (1) program -> START NEWLINE statements END .

    $end            reduce using rule 1 (program -> START NEWLINE statements END .)


state 38

    (3) statements -> statements statement .

    END             reduce using rule 3 (statements -> statements statement .)
    NEWLINE         reduce using rule 3 (statements -> statements statement .)
    PRINT           reduce using rule 3 (statements -> statements statement .)
    ID              reduce using rule 3 (statements -> statements statement .)
    IF              reduce using rule 3 (statements -> statements statement .)
    WHILE           reduce using rule 3 (statements -> statements statement .)
    FOR             reduce using rule 3 (statements -> statements statement .)
    DEF             reduce using rule 3 (statements -> statements statement .)
    RETURN          reduce using rule 3 (statements -> statements statement .)
    BREAK           reduce using rule 3 (statements -> statements statement .)
    CONTINUE        reduce using rule 3 (statements -> statements statement .)
    PASS            reduce using rule 3 (statements -> statements statement .)
    TRY             reduce using rule 3 (statements -> statements statement .)
    IMPORT          reduce using rule 3 (statements -> statements statement .)
    FROM            reduce using rule 3 (statements -> statements statement .)
    CLASS           reduce using rule 3 (statements -> statements statement .)
    EXCEPT          reduce using rule 3 (statements -> statements statement .)
    ELSE            reduce using rule 3 (statements -> statements statement .)
    ELIF            reduce using rule 3 (statements -> statements statement .)
    FINALLY         reduce using rule 3 (statements -> statements statement .)


state 39

    (7) statement -> assignment_statement NEWLINE .

    END             reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    NEWLINE         reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    PRINT           reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    ID              reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    IF              reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    WHILE           reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    FOR             reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    DEF             reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    RETURN          reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    BREAK           reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    CONTINUE        reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    PASS            reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    TRY             reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    IMPORT          reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    FROM            reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    CLASS           reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    EXCEPT          reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    ELSE            reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    ELIF            reduce using rule 7 (statement -> assignment_statement NEWLINE .)
    FINALLY         reduce using rule 7 (statement -> assignment_statement NEWLINE .)


state 40

    (8) statement -> input_statement NEWLINE .

    END             reduce using rule 8 (statement -> input_statement NEWLINE .)
    NEWLINE         reduce using rule 8 (statement -> input_statement NEWLINE .)
    PRINT           reduce using rule 8 (statement -> input_statement NEWLINE .)
    ID              reduce using rule 8 (statement -> input_statement NEWLINE .)
    IF              reduce using rule 8 (statement -> input_statement NEWLINE .)
    WHILE           reduce using rule 8 (statement -> input_statement NEWLINE .)
    FOR             reduce using rule 8 (statement -> input_statement NEWLINE .)
    DEF             reduce using rule 8 (statement -> input_statement NEWLINE .)
    RETURN          reduce using rule 8 (statement -> input_statement NEWLINE .)
    BREAK           reduce using rule 8 (statement -> input_statement NEWLINE .)
    CONTINUE        reduce using rule 8 (statement -> input_statement NEWLINE .)
    PASS            reduce using rule 8 (statement -> input_statement NEWLINE .)
    TRY             reduce using rule 8 (statement -> input_statement NEWLINE .)
    IMPORT          reduce using rule 8 (statement -> input_statement NEWLINE .)
    FROM            reduce using rule 8 (statement -> input_statement NEWLINE .)
    CLASS           reduce using rule 8 (statement -> input_statement NEWLINE .)
    EXCEPT          reduce using rule 8 (statement -> input_statement NEWLINE .)
    ELSE            reduce using rule 8 (statement -> input_statement NEWLINE .)
    ELIF            reduce using rule 8 (statement -> input_statement NEWLINE .)
    FINALLY         reduce using rule 8 (statement -> input_statement NEWLINE .)


state 41

    (21) print_statement -> PRINT LPAREN . expression_list RPAREN NEWLINE
    (22) expression_list -> . expression
    (23) expression_list -> . expression_list COMMA expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression_list                shift and go to state 60
    expression                     shift and go to state 61
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 42

    (24) assignment_statement -> ID ASSIGN . expression
    (25) input_statement -> ID ASSIGN . INPUT LPAREN RPAREN
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    INPUT           shift and go to state 63
    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression                     shift and go to state 62
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 43

    (52) function_call -> ID LPAREN . argument_list RPAREN
    (53) argument_list -> . empty
    (54) argument_list -> . expression
    (55) argument_list -> . argument_list COMMA expression
    (66) empty -> .
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    RPAREN          reduce using rule 66 (empty -> .)
    COMMA           reduce using rule 66 (empty -> .)
    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    argument_list                  shift and go to state 64
    empty                          shift and go to state 65
    expression                     shift and go to state 66
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 44

    (43) if_statement -> IF LPAREN . expression RPAREN COLON statements
    (44) if_statement -> IF LPAREN . expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> IF LPAREN . expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression                     shift and go to state 67
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 45

    (46) while_statement -> WHILE LPAREN . expression RPAREN COLON statements
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression                     shift and go to state 68
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 46

    (47) for_statement -> FOR LPAREN . ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    ID              shift and go to state 69


state 47

    (48) function_def -> DEF ID . LPAREN parameter_list RPAREN COLON statements

    LPAREN          shift and go to state 70


state 48

    (56) return_statement -> RETURN expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    END             reduce using rule 56 (return_statement -> RETURN expression .)
    NEWLINE         reduce using rule 56 (return_statement -> RETURN expression .)
    PRINT           reduce using rule 56 (return_statement -> RETURN expression .)
    ID              reduce using rule 56 (return_statement -> RETURN expression .)
    IF              reduce using rule 56 (return_statement -> RETURN expression .)
    WHILE           reduce using rule 56 (return_statement -> RETURN expression .)
    FOR             reduce using rule 56 (return_statement -> RETURN expression .)
    DEF             reduce using rule 56 (return_statement -> RETURN expression .)
    RETURN          reduce using rule 56 (return_statement -> RETURN expression .)
    BREAK           reduce using rule 56 (return_statement -> RETURN expression .)
    CONTINUE        reduce using rule 56 (return_statement -> RETURN expression .)
    PASS            reduce using rule 56 (return_statement -> RETURN expression .)
    TRY             reduce using rule 56 (return_statement -> RETURN expression .)
    IMPORT          reduce using rule 56 (return_statement -> RETURN expression .)
    FROM            reduce using rule 56 (return_statement -> RETURN expression .)
    CLASS           reduce using rule 56 (return_statement -> RETURN expression .)
    EXCEPT          reduce using rule 56 (return_statement -> RETURN expression .)
    ELSE            reduce using rule 56 (return_statement -> RETURN expression .)
    ELIF            reduce using rule 56 (return_statement -> RETURN expression .)
    FINALLY         reduce using rule 56 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 49

    (28) expression -> term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    PLUS            reduce using rule 28 (expression -> term .)
    MINUS           reduce using rule 28 (expression -> term .)
    END             reduce using rule 28 (expression -> term .)
    NEWLINE         reduce using rule 28 (expression -> term .)
    PRINT           reduce using rule 28 (expression -> term .)
    ID              reduce using rule 28 (expression -> term .)
    IF              reduce using rule 28 (expression -> term .)
    WHILE           reduce using rule 28 (expression -> term .)
    FOR             reduce using rule 28 (expression -> term .)
    DEF             reduce using rule 28 (expression -> term .)
    RETURN          reduce using rule 28 (expression -> term .)
    BREAK           reduce using rule 28 (expression -> term .)
    CONTINUE        reduce using rule 28 (expression -> term .)
    PASS            reduce using rule 28 (expression -> term .)
    TRY             reduce using rule 28 (expression -> term .)
    IMPORT          reduce using rule 28 (expression -> term .)
    FROM            reduce using rule 28 (expression -> term .)
    CLASS           reduce using rule 28 (expression -> term .)
    EXCEPT          reduce using rule 28 (expression -> term .)
    ELSE            reduce using rule 28 (expression -> term .)
    ELIF            reduce using rule 28 (expression -> term .)
    FINALLY         reduce using rule 28 (expression -> term .)
    RPAREN          reduce using rule 28 (expression -> term .)
    COMMA           reduce using rule 28 (expression -> term .)
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74


state 50

    (36) factor -> MINUS . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    factor                         shift and go to state 75

state 51

    (31) term -> factor .

    TIMES           reduce using rule 31 (term -> factor .)
    DIVIDE          reduce using rule 31 (term -> factor .)
    PLUS            reduce using rule 31 (term -> factor .)
    MINUS           reduce using rule 31 (term -> factor .)
    END             reduce using rule 31 (term -> factor .)
    NEWLINE         reduce using rule 31 (term -> factor .)
    PRINT           reduce using rule 31 (term -> factor .)
    ID              reduce using rule 31 (term -> factor .)
    IF              reduce using rule 31 (term -> factor .)
    WHILE           reduce using rule 31 (term -> factor .)
    FOR             reduce using rule 31 (term -> factor .)
    DEF             reduce using rule 31 (term -> factor .)
    RETURN          reduce using rule 31 (term -> factor .)
    BREAK           reduce using rule 31 (term -> factor .)
    CONTINUE        reduce using rule 31 (term -> factor .)
    PASS            reduce using rule 31 (term -> factor .)
    TRY             reduce using rule 31 (term -> factor .)
    IMPORT          reduce using rule 31 (term -> factor .)
    FROM            reduce using rule 31 (term -> factor .)
    CLASS           reduce using rule 31 (term -> factor .)
    EXCEPT          reduce using rule 31 (term -> factor .)
    ELSE            reduce using rule 31 (term -> factor .)
    ELIF            reduce using rule 31 (term -> factor .)
    FINALLY         reduce using rule 31 (term -> factor .)
    RPAREN          reduce using rule 31 (term -> factor .)
    COMMA           reduce using rule 31 (term -> factor .)


state 52

    (32) factor -> NUMBER .

    TIMES           reduce using rule 32 (factor -> NUMBER .)
    DIVIDE          reduce using rule 32 (factor -> NUMBER .)
    PLUS            reduce using rule 32 (factor -> NUMBER .)
    MINUS           reduce using rule 32 (factor -> NUMBER .)
    END             reduce using rule 32 (factor -> NUMBER .)
    NEWLINE         reduce using rule 32 (factor -> NUMBER .)
    PRINT           reduce using rule 32 (factor -> NUMBER .)
    ID              reduce using rule 32 (factor -> NUMBER .)
    IF              reduce using rule 32 (factor -> NUMBER .)
    WHILE           reduce using rule 32 (factor -> NUMBER .)
    FOR             reduce using rule 32 (factor -> NUMBER .)
    DEF             reduce using rule 32 (factor -> NUMBER .)
    RETURN          reduce using rule 32 (factor -> NUMBER .)
    BREAK           reduce using rule 32 (factor -> NUMBER .)
    CONTINUE        reduce using rule 32 (factor -> NUMBER .)
    PASS            reduce using rule 32 (factor -> NUMBER .)
    TRY             reduce using rule 32 (factor -> NUMBER .)
    IMPORT          reduce using rule 32 (factor -> NUMBER .)
    FROM            reduce using rule 32 (factor -> NUMBER .)
    CLASS           reduce using rule 32 (factor -> NUMBER .)
    EXCEPT          reduce using rule 32 (factor -> NUMBER .)
    ELSE            reduce using rule 32 (factor -> NUMBER .)
    ELIF            reduce using rule 32 (factor -> NUMBER .)
    FINALLY         reduce using rule 32 (factor -> NUMBER .)
    RPAREN          reduce using rule 32 (factor -> NUMBER .)
    COMMA           reduce using rule 32 (factor -> NUMBER .)


state 53

    (33) factor -> STRING .

    TIMES           reduce using rule 33 (factor -> STRING .)
    DIVIDE          reduce using rule 33 (factor -> STRING .)
    PLUS            reduce using rule 33 (factor -> STRING .)
    MINUS           reduce using rule 33 (factor -> STRING .)
    END             reduce using rule 33 (factor -> STRING .)
    NEWLINE         reduce using rule 33 (factor -> STRING .)
    PRINT           reduce using rule 33 (factor -> STRING .)
    ID              reduce using rule 33 (factor -> STRING .)
    IF              reduce using rule 33 (factor -> STRING .)
    WHILE           reduce using rule 33 (factor -> STRING .)
    FOR             reduce using rule 33 (factor -> STRING .)
    DEF             reduce using rule 33 (factor -> STRING .)
    RETURN          reduce using rule 33 (factor -> STRING .)
    BREAK           reduce using rule 33 (factor -> STRING .)
    CONTINUE        reduce using rule 33 (factor -> STRING .)
    PASS            reduce using rule 33 (factor -> STRING .)
    TRY             reduce using rule 33 (factor -> STRING .)
    IMPORT          reduce using rule 33 (factor -> STRING .)
    FROM            reduce using rule 33 (factor -> STRING .)
    CLASS           reduce using rule 33 (factor -> STRING .)
    EXCEPT          reduce using rule 33 (factor -> STRING .)
    ELSE            reduce using rule 33 (factor -> STRING .)
    ELIF            reduce using rule 33 (factor -> STRING .)
    FINALLY         reduce using rule 33 (factor -> STRING .)
    RPAREN          reduce using rule 33 (factor -> STRING .)
    COMMA           reduce using rule 33 (factor -> STRING .)


state 54

    (34) factor -> ID .

    TIMES           reduce using rule 34 (factor -> ID .)
    DIVIDE          reduce using rule 34 (factor -> ID .)
    PLUS            reduce using rule 34 (factor -> ID .)
    MINUS           reduce using rule 34 (factor -> ID .)
    END             reduce using rule 34 (factor -> ID .)
    NEWLINE         reduce using rule 34 (factor -> ID .)
    PRINT           reduce using rule 34 (factor -> ID .)
    ID              reduce using rule 34 (factor -> ID .)
    IF              reduce using rule 34 (factor -> ID .)
    WHILE           reduce using rule 34 (factor -> ID .)
    FOR             reduce using rule 34 (factor -> ID .)
    DEF             reduce using rule 34 (factor -> ID .)
    RETURN          reduce using rule 34 (factor -> ID .)
    BREAK           reduce using rule 34 (factor -> ID .)
    CONTINUE        reduce using rule 34 (factor -> ID .)
    PASS            reduce using rule 34 (factor -> ID .)
    TRY             reduce using rule 34 (factor -> ID .)
    IMPORT          reduce using rule 34 (factor -> ID .)
    FROM            reduce using rule 34 (factor -> ID .)
    CLASS           reduce using rule 34 (factor -> ID .)
    EXCEPT          reduce using rule 34 (factor -> ID .)
    ELSE            reduce using rule 34 (factor -> ID .)
    ELIF            reduce using rule 34 (factor -> ID .)
    FINALLY         reduce using rule 34 (factor -> ID .)
    RPAREN          reduce using rule 34 (factor -> ID .)
    COMMA           reduce using rule 34 (factor -> ID .)


state 55

    (35) factor -> LPAREN . expression RPAREN
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression                     shift and go to state 76
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 56

    (60) try_except_statement -> TRY COLON . statements EXCEPT COLON statements
    (61) try_except_statement -> TRY COLON . statements EXCEPT COLON statements FINALLY COLON statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 77
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 57

    (62) import_statement -> IMPORT ID .

    END             reduce using rule 62 (import_statement -> IMPORT ID .)
    NEWLINE         reduce using rule 62 (import_statement -> IMPORT ID .)
    PRINT           reduce using rule 62 (import_statement -> IMPORT ID .)
    ID              reduce using rule 62 (import_statement -> IMPORT ID .)
    IF              reduce using rule 62 (import_statement -> IMPORT ID .)
    WHILE           reduce using rule 62 (import_statement -> IMPORT ID .)
    FOR             reduce using rule 62 (import_statement -> IMPORT ID .)
    DEF             reduce using rule 62 (import_statement -> IMPORT ID .)
    RETURN          reduce using rule 62 (import_statement -> IMPORT ID .)
    BREAK           reduce using rule 62 (import_statement -> IMPORT ID .)
    CONTINUE        reduce using rule 62 (import_statement -> IMPORT ID .)
    PASS            reduce using rule 62 (import_statement -> IMPORT ID .)
    TRY             reduce using rule 62 (import_statement -> IMPORT ID .)
    IMPORT          reduce using rule 62 (import_statement -> IMPORT ID .)
    FROM            reduce using rule 62 (import_statement -> IMPORT ID .)
    CLASS           reduce using rule 62 (import_statement -> IMPORT ID .)
    EXCEPT          reduce using rule 62 (import_statement -> IMPORT ID .)
    ELSE            reduce using rule 62 (import_statement -> IMPORT ID .)
    ELIF            reduce using rule 62 (import_statement -> IMPORT ID .)
    FINALLY         reduce using rule 62 (import_statement -> IMPORT ID .)


state 58

    (63) import_statement -> FROM ID . IMPORT ID

    IMPORT          shift and go to state 78


state 59

    (64) class_definition -> CLASS ID . COLON statements
    (65) class_definition -> CLASS ID . LPAREN ID RPAREN COLON statements

    COLON           shift and go to state 79
    LPAREN          shift and go to state 80


state 60

    (21) print_statement -> PRINT LPAREN expression_list . RPAREN NEWLINE
    (23) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 81
    COMMA           shift and go to state 82


state 61

    (22) expression_list -> expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          reduce using rule 22 (expression_list -> expression .)
    COMMA           reduce using rule 22 (expression_list -> expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 62

    (24) assignment_statement -> ID ASSIGN expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    NEWLINE         reduce using rule 24 (assignment_statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 63

    (25) input_statement -> ID ASSIGN INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 83


state 64

    (52) function_call -> ID LPAREN argument_list . RPAREN
    (55) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 84
    COMMA           shift and go to state 85


state 65

    (53) argument_list -> empty .

    RPAREN          reduce using rule 53 (argument_list -> empty .)
    COMMA           reduce using rule 53 (argument_list -> empty .)


state 66

    (54) argument_list -> expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          reduce using rule 54 (argument_list -> expression .)
    COMMA           reduce using rule 54 (argument_list -> expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 67

    (43) if_statement -> IF LPAREN expression . RPAREN COLON statements
    (44) if_statement -> IF LPAREN expression . RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> IF LPAREN expression . RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          shift and go to state 86
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 68

    (46) while_statement -> WHILE LPAREN expression . RPAREN COLON statements
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          shift and go to state 87
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 69

    (47) for_statement -> FOR LPAREN ID . IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    IN              shift and go to state 88


state 70

    (48) function_def -> DEF ID LPAREN . parameter_list RPAREN COLON statements
    (49) parameter_list -> . empty
    (50) parameter_list -> . ID
    (51) parameter_list -> . parameter_list COMMA ID
    (66) empty -> .

    ID              shift and go to state 89
    RPAREN          reduce using rule 66 (empty -> .)
    COMMA           reduce using rule 66 (empty -> .)

    parameter_list                 shift and go to state 90
    empty                          shift and go to state 91

state 71

    (26) expression -> expression PLUS . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    term                           shift and go to state 92
    factor                         shift and go to state 51

state 72

    (27) expression -> expression MINUS . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    term                           shift and go to state 93
    factor                         shift and go to state 51

state 73

    (29) term -> term TIMES . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    factor                         shift and go to state 94

state 74

    (30) term -> term DIVIDE . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    factor                         shift and go to state 95

state 75

    (36) factor -> MINUS factor .

    TIMES           reduce using rule 36 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 36 (factor -> MINUS factor .)
    PLUS            reduce using rule 36 (factor -> MINUS factor .)
    MINUS           reduce using rule 36 (factor -> MINUS factor .)
    END             reduce using rule 36 (factor -> MINUS factor .)
    NEWLINE         reduce using rule 36 (factor -> MINUS factor .)
    PRINT           reduce using rule 36 (factor -> MINUS factor .)
    ID              reduce using rule 36 (factor -> MINUS factor .)
    IF              reduce using rule 36 (factor -> MINUS factor .)
    WHILE           reduce using rule 36 (factor -> MINUS factor .)
    FOR             reduce using rule 36 (factor -> MINUS factor .)
    DEF             reduce using rule 36 (factor -> MINUS factor .)
    RETURN          reduce using rule 36 (factor -> MINUS factor .)
    BREAK           reduce using rule 36 (factor -> MINUS factor .)
    CONTINUE        reduce using rule 36 (factor -> MINUS factor .)
    PASS            reduce using rule 36 (factor -> MINUS factor .)
    TRY             reduce using rule 36 (factor -> MINUS factor .)
    IMPORT          reduce using rule 36 (factor -> MINUS factor .)
    FROM            reduce using rule 36 (factor -> MINUS factor .)
    CLASS           reduce using rule 36 (factor -> MINUS factor .)
    EXCEPT          reduce using rule 36 (factor -> MINUS factor .)
    ELSE            reduce using rule 36 (factor -> MINUS factor .)
    ELIF            reduce using rule 36 (factor -> MINUS factor .)
    FINALLY         reduce using rule 36 (factor -> MINUS factor .)
    RPAREN          reduce using rule 36 (factor -> MINUS factor .)
    COMMA           reduce using rule 36 (factor -> MINUS factor .)


state 76

    (35) factor -> LPAREN expression . RPAREN
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          shift and go to state 96
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 77

    (60) try_except_statement -> TRY COLON statements . EXCEPT COLON statements
    (61) try_except_statement -> TRY COLON statements . EXCEPT COLON statements FINALLY COLON statements
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    EXCEPT          shift and go to state 97
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 78

    (63) import_statement -> FROM ID IMPORT . ID

    ID              shift and go to state 98


state 79

    (64) class_definition -> CLASS ID COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 99
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 80

    (65) class_definition -> CLASS ID LPAREN . ID RPAREN COLON statements

    ID              shift and go to state 100


state 81

    (21) print_statement -> PRINT LPAREN expression_list RPAREN . NEWLINE

    NEWLINE         shift and go to state 101


state 82

    (23) expression_list -> expression_list COMMA . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression                     shift and go to state 102
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 83

    (25) input_statement -> ID ASSIGN INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 103


state 84

    (52) function_call -> ID LPAREN argument_list RPAREN .

    END             reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    NEWLINE         reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    ID              reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    IF              reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    FOR             reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    DEF             reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    RETURN          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    BREAK           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    CONTINUE        reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    PASS            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    TRY             reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    IMPORT          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    FROM            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    CLASS           reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    EXCEPT          reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    ELIF            reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)
    FINALLY         reduce using rule 52 (function_call -> ID LPAREN argument_list RPAREN .)


state 85

    (55) argument_list -> argument_list COMMA . expression
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression                     shift and go to state 104
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 86

    (43) if_statement -> IF LPAREN expression RPAREN . COLON statements
    (44) if_statement -> IF LPAREN expression RPAREN . COLON statements ELSE COLON statements
    (45) if_statement -> IF LPAREN expression RPAREN . COLON statements ELIF LPAREN expression RPAREN COLON statements

    COLON           shift and go to state 105


state 87

    (46) while_statement -> WHILE LPAREN expression RPAREN . COLON statements

    COLON           shift and go to state 106


state 88

    (47) for_statement -> FOR LPAREN ID IN . RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    RANGE           shift and go to state 107


state 89

    (50) parameter_list -> ID .

    RPAREN          reduce using rule 50 (parameter_list -> ID .)
    COMMA           reduce using rule 50 (parameter_list -> ID .)


state 90

    (48) function_def -> DEF ID LPAREN parameter_list . RPAREN COLON statements
    (51) parameter_list -> parameter_list . COMMA ID

    RPAREN          shift and go to state 108
    COMMA           shift and go to state 109


state 91

    (49) parameter_list -> empty .

    RPAREN          reduce using rule 49 (parameter_list -> empty .)
    COMMA           reduce using rule 49 (parameter_list -> empty .)


state 92

    (26) expression -> expression PLUS term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    PLUS            reduce using rule 26 (expression -> expression PLUS term .)
    MINUS           reduce using rule 26 (expression -> expression PLUS term .)
    END             reduce using rule 26 (expression -> expression PLUS term .)
    NEWLINE         reduce using rule 26 (expression -> expression PLUS term .)
    PRINT           reduce using rule 26 (expression -> expression PLUS term .)
    ID              reduce using rule 26 (expression -> expression PLUS term .)
    IF              reduce using rule 26 (expression -> expression PLUS term .)
    WHILE           reduce using rule 26 (expression -> expression PLUS term .)
    FOR             reduce using rule 26 (expression -> expression PLUS term .)
    DEF             reduce using rule 26 (expression -> expression PLUS term .)
    RETURN          reduce using rule 26 (expression -> expression PLUS term .)
    BREAK           reduce using rule 26 (expression -> expression PLUS term .)
    CONTINUE        reduce using rule 26 (expression -> expression PLUS term .)
    PASS            reduce using rule 26 (expression -> expression PLUS term .)
    TRY             reduce using rule 26 (expression -> expression PLUS term .)
    IMPORT          reduce using rule 26 (expression -> expression PLUS term .)
    FROM            reduce using rule 26 (expression -> expression PLUS term .)
    CLASS           reduce using rule 26 (expression -> expression PLUS term .)
    EXCEPT          reduce using rule 26 (expression -> expression PLUS term .)
    ELSE            reduce using rule 26 (expression -> expression PLUS term .)
    ELIF            reduce using rule 26 (expression -> expression PLUS term .)
    FINALLY         reduce using rule 26 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 26 (expression -> expression PLUS term .)
    COMMA           reduce using rule 26 (expression -> expression PLUS term .)
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74


state 93

    (27) expression -> expression MINUS term .
    (29) term -> term . TIMES factor
    (30) term -> term . DIVIDE factor

    PLUS            reduce using rule 27 (expression -> expression MINUS term .)
    MINUS           reduce using rule 27 (expression -> expression MINUS term .)
    END             reduce using rule 27 (expression -> expression MINUS term .)
    NEWLINE         reduce using rule 27 (expression -> expression MINUS term .)
    PRINT           reduce using rule 27 (expression -> expression MINUS term .)
    ID              reduce using rule 27 (expression -> expression MINUS term .)
    IF              reduce using rule 27 (expression -> expression MINUS term .)
    WHILE           reduce using rule 27 (expression -> expression MINUS term .)
    FOR             reduce using rule 27 (expression -> expression MINUS term .)
    DEF             reduce using rule 27 (expression -> expression MINUS term .)
    RETURN          reduce using rule 27 (expression -> expression MINUS term .)
    BREAK           reduce using rule 27 (expression -> expression MINUS term .)
    CONTINUE        reduce using rule 27 (expression -> expression MINUS term .)
    PASS            reduce using rule 27 (expression -> expression MINUS term .)
    TRY             reduce using rule 27 (expression -> expression MINUS term .)
    IMPORT          reduce using rule 27 (expression -> expression MINUS term .)
    FROM            reduce using rule 27 (expression -> expression MINUS term .)
    CLASS           reduce using rule 27 (expression -> expression MINUS term .)
    EXCEPT          reduce using rule 27 (expression -> expression MINUS term .)
    ELSE            reduce using rule 27 (expression -> expression MINUS term .)
    ELIF            reduce using rule 27 (expression -> expression MINUS term .)
    FINALLY         reduce using rule 27 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 27 (expression -> expression MINUS term .)
    COMMA           reduce using rule 27 (expression -> expression MINUS term .)
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74


state 94

    (29) term -> term TIMES factor .

    TIMES           reduce using rule 29 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 29 (term -> term TIMES factor .)
    PLUS            reduce using rule 29 (term -> term TIMES factor .)
    MINUS           reduce using rule 29 (term -> term TIMES factor .)
    END             reduce using rule 29 (term -> term TIMES factor .)
    NEWLINE         reduce using rule 29 (term -> term TIMES factor .)
    PRINT           reduce using rule 29 (term -> term TIMES factor .)
    ID              reduce using rule 29 (term -> term TIMES factor .)
    IF              reduce using rule 29 (term -> term TIMES factor .)
    WHILE           reduce using rule 29 (term -> term TIMES factor .)
    FOR             reduce using rule 29 (term -> term TIMES factor .)
    DEF             reduce using rule 29 (term -> term TIMES factor .)
    RETURN          reduce using rule 29 (term -> term TIMES factor .)
    BREAK           reduce using rule 29 (term -> term TIMES factor .)
    CONTINUE        reduce using rule 29 (term -> term TIMES factor .)
    PASS            reduce using rule 29 (term -> term TIMES factor .)
    TRY             reduce using rule 29 (term -> term TIMES factor .)
    IMPORT          reduce using rule 29 (term -> term TIMES factor .)
    FROM            reduce using rule 29 (term -> term TIMES factor .)
    CLASS           reduce using rule 29 (term -> term TIMES factor .)
    EXCEPT          reduce using rule 29 (term -> term TIMES factor .)
    ELSE            reduce using rule 29 (term -> term TIMES factor .)
    ELIF            reduce using rule 29 (term -> term TIMES factor .)
    FINALLY         reduce using rule 29 (term -> term TIMES factor .)
    RPAREN          reduce using rule 29 (term -> term TIMES factor .)
    COMMA           reduce using rule 29 (term -> term TIMES factor .)


state 95

    (30) term -> term DIVIDE factor .

    TIMES           reduce using rule 30 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 30 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 30 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 30 (term -> term DIVIDE factor .)
    END             reduce using rule 30 (term -> term DIVIDE factor .)
    NEWLINE         reduce using rule 30 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 30 (term -> term DIVIDE factor .)
    ID              reduce using rule 30 (term -> term DIVIDE factor .)
    IF              reduce using rule 30 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 30 (term -> term DIVIDE factor .)
    FOR             reduce using rule 30 (term -> term DIVIDE factor .)
    DEF             reduce using rule 30 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 30 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 30 (term -> term DIVIDE factor .)
    CONTINUE        reduce using rule 30 (term -> term DIVIDE factor .)
    PASS            reduce using rule 30 (term -> term DIVIDE factor .)
    TRY             reduce using rule 30 (term -> term DIVIDE factor .)
    IMPORT          reduce using rule 30 (term -> term DIVIDE factor .)
    FROM            reduce using rule 30 (term -> term DIVIDE factor .)
    CLASS           reduce using rule 30 (term -> term DIVIDE factor .)
    EXCEPT          reduce using rule 30 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 30 (term -> term DIVIDE factor .)
    ELIF            reduce using rule 30 (term -> term DIVIDE factor .)
    FINALLY         reduce using rule 30 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 30 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 30 (term -> term DIVIDE factor .)


state 96

    (35) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    DEF             reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    PASS            reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    TRY             reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    IMPORT          reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    FROM            reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    EXCEPT          reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    ELIF            reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    FINALLY         reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 35 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 35 (factor -> LPAREN expression RPAREN .)


state 97

    (60) try_except_statement -> TRY COLON statements EXCEPT . COLON statements
    (61) try_except_statement -> TRY COLON statements EXCEPT . COLON statements FINALLY COLON statements

    COLON           shift and go to state 110


state 98

    (63) import_statement -> FROM ID IMPORT ID .

    END             reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    NEWLINE         reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    PRINT           reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    ID              reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    IF              reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    WHILE           reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    FOR             reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    DEF             reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    RETURN          reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    BREAK           reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    CONTINUE        reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    PASS            reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    TRY             reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    IMPORT          reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    FROM            reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    CLASS           reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    EXCEPT          reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    ELSE            reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    ELIF            reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)
    FINALLY         reduce using rule 63 (import_statement -> FROM ID IMPORT ID .)


state 99

    (64) class_definition -> CLASS ID COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 64 (class_definition -> CLASS ID COLON statements .)
    EXCEPT          reduce using rule 64 (class_definition -> CLASS ID COLON statements .)
    ELSE            reduce using rule 64 (class_definition -> CLASS ID COLON statements .)
    ELIF            reduce using rule 64 (class_definition -> CLASS ID COLON statements .)
    FINALLY         reduce using rule 64 (class_definition -> CLASS ID COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! PRINT           [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! ID              [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! IF              [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! WHILE           [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! FOR             [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! DEF             [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! RETURN          [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! BREAK           [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! CONTINUE        [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! PASS            [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! TRY             [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! IMPORT          [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! FROM            [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]
  ! CLASS           [ reduce using rule 64 (class_definition -> CLASS ID COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 100

    (65) class_definition -> CLASS ID LPAREN ID . RPAREN COLON statements

    RPAREN          shift and go to state 111


state 101

    (21) print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .

    END             reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    NEWLINE         reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    PRINT           reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    ID              reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    IF              reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    WHILE           reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    FOR             reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    DEF             reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    RETURN          reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    BREAK           reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    CONTINUE        reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    PASS            reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    TRY             reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    IMPORT          reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    FROM            reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    CLASS           reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    EXCEPT          reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    ELSE            reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    ELIF            reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)
    FINALLY         reduce using rule 21 (print_statement -> PRINT LPAREN expression_list RPAREN NEWLINE .)


state 102

    (23) expression_list -> expression_list COMMA expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          reduce using rule 23 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 23 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 103

    (25) input_statement -> ID ASSIGN INPUT LPAREN RPAREN .

    NEWLINE         reduce using rule 25 (input_statement -> ID ASSIGN INPUT LPAREN RPAREN .)


state 104

    (55) argument_list -> argument_list COMMA expression .
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          reduce using rule 55 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 55 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 105

    (43) if_statement -> IF LPAREN expression RPAREN COLON . statements
    (44) if_statement -> IF LPAREN expression RPAREN COLON . statements ELSE COLON statements
    (45) if_statement -> IF LPAREN expression RPAREN COLON . statements ELIF LPAREN expression RPAREN COLON statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 112
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 106

    (46) while_statement -> WHILE LPAREN expression RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 113
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 107

    (47) for_statement -> FOR LPAREN ID IN RANGE . LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    LPAREN          shift and go to state 114


state 108

    (48) function_def -> DEF ID LPAREN parameter_list RPAREN . COLON statements

    COLON           shift and go to state 115


state 109

    (51) parameter_list -> parameter_list COMMA . ID

    ID              shift and go to state 116


state 110

    (60) try_except_statement -> TRY COLON statements EXCEPT COLON . statements
    (61) try_except_statement -> TRY COLON statements EXCEPT COLON . statements FINALLY COLON statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 117
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 111

    (65) class_definition -> CLASS ID LPAREN ID RPAREN . COLON statements

    COLON           shift and go to state 118


state 112

    (43) if_statement -> IF LPAREN expression RPAREN COLON statements .
    (44) if_statement -> IF LPAREN expression RPAREN COLON statements . ELSE COLON statements
    (45) if_statement -> IF LPAREN expression RPAREN COLON statements . ELIF LPAREN expression RPAREN COLON statements
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .)
    EXCEPT          reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .)
    FINALLY         reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .)
    ELSE            shift and go to state 119
    ELIF            shift and go to state 120
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! PRINT           [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! ELSE            [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! ELIF            [ reduce using rule 43 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 113

    (46) while_statement -> WHILE LPAREN expression RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    EXCEPT          reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    ELSE            reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    ELIF            reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    FINALLY         reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! PRINT           [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 46 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 114

    (47) for_statement -> FOR LPAREN ID IN RANGE LPAREN . NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    NUMBER          shift and go to state 121


state 115

    (48) function_def -> DEF ID LPAREN parameter_list RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 122
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 116

    (51) parameter_list -> parameter_list COMMA ID .

    RPAREN          reduce using rule 51 (parameter_list -> parameter_list COMMA ID .)
    COMMA           reduce using rule 51 (parameter_list -> parameter_list COMMA ID .)


state 117

    (60) try_except_statement -> TRY COLON statements EXCEPT COLON statements .
    (61) try_except_statement -> TRY COLON statements EXCEPT COLON statements . FINALLY COLON statements
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for FINALLY resolved as shift
  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    EXCEPT          reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    ELSE            reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    ELIF            reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    FINALLY         shift and go to state 123
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! PRINT           [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! ID              [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! IF              [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! WHILE           [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FOR             [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! DEF             [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! RETURN          [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! BREAK           [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! CONTINUE        [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! PASS            [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! TRY             [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! IMPORT          [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FROM            [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! CLASS           [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FINALLY         [ reduce using rule 60 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 118

    (65) class_definition -> CLASS ID LPAREN ID RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 124
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 119

    (44) if_statement -> IF LPAREN expression RPAREN COLON statements ELSE . COLON statements

    COLON           shift and go to state 125


state 120

    (45) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF . LPAREN expression RPAREN COLON statements

    LPAREN          shift and go to state 126


state 121

    (47) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER . COMMA NUMBER RPAREN RPAREN COLON statements

    COMMA           shift and go to state 127


state 122

    (48) function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    EXCEPT          reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    ELSE            reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    ELIF            reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    FINALLY         reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! PRINT           [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 48 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 123

    (61) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY . COLON statements

    COLON           shift and go to state 128


state 124

    (65) class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    EXCEPT          reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    ELSE            reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    ELIF            reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    FINALLY         reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! PRINT           [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 65 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 125

    (44) if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 129
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 126

    (45) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN . expression RPAREN COLON statements
    (26) expression -> . expression PLUS term
    (27) expression -> . expression MINUS term
    (28) expression -> . term
    (29) term -> . term TIMES factor
    (30) term -> . term DIVIDE factor
    (31) term -> . factor
    (32) factor -> . NUMBER
    (33) factor -> . STRING
    (34) factor -> . ID
    (35) factor -> . LPAREN expression RPAREN
    (36) factor -> . MINUS factor

    NUMBER          shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 54
    LPAREN          shift and go to state 55
    MINUS           shift and go to state 50

    expression                     shift and go to state 130
    term                           shift and go to state 49
    factor                         shift and go to state 51

state 127

    (47) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA . NUMBER RPAREN RPAREN COLON statements

    NUMBER          shift and go to state 131


state 128

    (61) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 132
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 129

    (44) if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    EXCEPT          reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    ELSE            reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    ELIF            reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    FINALLY         reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! PRINT           [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! ID              [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! IF              [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! WHILE           [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! FOR             [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! DEF             [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! RETURN          [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! BREAK           [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! CONTINUE        [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! PASS            [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! TRY             [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! IMPORT          [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! FROM            [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! CLASS           [ reduce using rule 44 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 130

    (45) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression . RPAREN COLON statements
    (26) expression -> expression . PLUS term
    (27) expression -> expression . MINUS term

    RPAREN          shift and go to state 133
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72


state 131

    (47) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER . RPAREN RPAREN COLON statements

    RPAREN          shift and go to state 134


state 132

    (61) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    EXCEPT          reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    ELSE            reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    ELIF            reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    FINALLY         reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! PRINT           [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! ID              [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! IF              [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! WHILE           [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! FOR             [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! DEF             [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! RETURN          [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! BREAK           [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! CONTINUE        [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! PASS            [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! TRY             [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! IMPORT          [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! FROM            [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! CLASS           [ reduce using rule 61 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 133

    (45) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN . COLON statements

    COLON           shift and go to state 135


state 134

    (47) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN . RPAREN COLON statements

    RPAREN          shift and go to state 136


state 135

    (45) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 137
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 136

    (47) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN . COLON statements

    COLON           shift and go to state 138


state 137

    (45) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    EXCEPT          reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    ELSE            reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    ELIF            reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    FINALLY         reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! PRINT           [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 45 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 138

    (47) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statements -> . statements NEWLINE
    (5) statements -> . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    NEWLINE         shift and go to state 4
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

    statements                     shift and go to state 139
    statement                      shift and go to state 6
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21

state 139

    (47) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statements -> statements . NEWLINE
    (6) statement -> . print_statement
    (7) statement -> . assignment_statement NEWLINE
    (8) statement -> . input_statement NEWLINE
    (9) statement -> . if_statement
    (10) statement -> . while_statement
    (11) statement -> . for_statement
    (12) statement -> . function_def
    (13) statement -> . function_call
    (14) statement -> . return_statement
    (15) statement -> . break_statement
    (16) statement -> . continue_statement
    (17) statement -> . pass_statement
    (18) statement -> . try_except_statement
    (19) statement -> . import_statement
    (20) statement -> . class_definition
    (21) print_statement -> . PRINT LPAREN expression_list RPAREN NEWLINE
    (24) assignment_statement -> . ID ASSIGN expression
    (25) input_statement -> . ID ASSIGN INPUT LPAREN RPAREN
    (43) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (44) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (45) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (46) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (47) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (48) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (52) function_call -> . ID LPAREN argument_list RPAREN
    (56) return_statement -> . RETURN expression
    (57) break_statement -> . BREAK
    (58) continue_statement -> . CONTINUE
    (59) pass_statement -> . PASS
    (60) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (61) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (62) import_statement -> . IMPORT ID
    (63) import_statement -> . FROM ID IMPORT ID
    (64) class_definition -> . CLASS ID COLON statements
    (65) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for NEWLINE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    EXCEPT          reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    ELSE            reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    ELIF            reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    FINALLY         reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    NEWLINE         shift and go to state 36
    PRINT           shift and go to state 22
    ID              shift and go to state 23
    IF              shift and go to state 24
    WHILE           shift and go to state 25
    FOR             shift and go to state 26
    DEF             shift and go to state 27
    RETURN          shift and go to state 28
    BREAK           shift and go to state 29
    CONTINUE        shift and go to state 30
    PASS            shift and go to state 31
    TRY             shift and go to state 32
    IMPORT          shift and go to state 33
    FROM            shift and go to state 34
    CLASS           shift and go to state 35

  ! NEWLINE         [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! PRINT           [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 47 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]

    statement                      shift and go to state 38
    print_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    input_statement                shift and go to state 9
    if_statement                   shift and go to state 10
    while_statement                shift and go to state 11
    for_statement                  shift and go to state 12
    function_def                   shift and go to state 13
    function_call                  shift and go to state 14
    return_statement               shift and go to state 15
    break_statement                shift and go to state 16
    continue_statement             shift and go to state 17
    pass_statement                 shift and go to state 18
    try_except_statement           shift and go to state 19
    import_statement               shift and go to state 20
    class_definition               shift and go to state 21
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 99 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 99 resolved as shift
WARNING: shift/reduce conflict for ID in state 99 resolved as shift
WARNING: shift/reduce conflict for IF in state 99 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 99 resolved as shift
WARNING: shift/reduce conflict for FOR in state 99 resolved as shift
WARNING: shift/reduce conflict for DEF in state 99 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 99 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 99 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 99 resolved as shift
WARNING: shift/reduce conflict for PASS in state 99 resolved as shift
WARNING: shift/reduce conflict for TRY in state 99 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 99 resolved as shift
WARNING: shift/reduce conflict for FROM in state 99 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 99 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 112 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 112 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 112 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 112 resolved as shift
WARNING: shift/reduce conflict for ID in state 112 resolved as shift
WARNING: shift/reduce conflict for IF in state 112 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 112 resolved as shift
WARNING: shift/reduce conflict for FOR in state 112 resolved as shift
WARNING: shift/reduce conflict for DEF in state 112 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 112 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 112 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 112 resolved as shift
WARNING: shift/reduce conflict for PASS in state 112 resolved as shift
WARNING: shift/reduce conflict for TRY in state 112 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 112 resolved as shift
WARNING: shift/reduce conflict for FROM in state 112 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 112 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 113 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 113 resolved as shift
WARNING: shift/reduce conflict for ID in state 113 resolved as shift
WARNING: shift/reduce conflict for IF in state 113 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 113 resolved as shift
WARNING: shift/reduce conflict for FOR in state 113 resolved as shift
WARNING: shift/reduce conflict for DEF in state 113 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 113 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 113 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 113 resolved as shift
WARNING: shift/reduce conflict for PASS in state 113 resolved as shift
WARNING: shift/reduce conflict for TRY in state 113 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 113 resolved as shift
WARNING: shift/reduce conflict for FROM in state 113 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 113 resolved as shift
WARNING: shift/reduce conflict for FINALLY in state 117 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 117 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for IF in state 117 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 117 resolved as shift
WARNING: shift/reduce conflict for FOR in state 117 resolved as shift
WARNING: shift/reduce conflict for DEF in state 117 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 117 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 117 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 117 resolved as shift
WARNING: shift/reduce conflict for PASS in state 117 resolved as shift
WARNING: shift/reduce conflict for TRY in state 117 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 117 resolved as shift
WARNING: shift/reduce conflict for FROM in state 117 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 117 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 122 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for IF in state 122 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 122 resolved as shift
WARNING: shift/reduce conflict for FOR in state 122 resolved as shift
WARNING: shift/reduce conflict for DEF in state 122 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 122 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 122 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 122 resolved as shift
WARNING: shift/reduce conflict for PASS in state 122 resolved as shift
WARNING: shift/reduce conflict for TRY in state 122 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 122 resolved as shift
WARNING: shift/reduce conflict for FROM in state 122 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 122 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 124 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 124 resolved as shift
WARNING: shift/reduce conflict for ID in state 124 resolved as shift
WARNING: shift/reduce conflict for IF in state 124 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 124 resolved as shift
WARNING: shift/reduce conflict for FOR in state 124 resolved as shift
WARNING: shift/reduce conflict for DEF in state 124 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 124 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 124 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 124 resolved as shift
WARNING: shift/reduce conflict for PASS in state 124 resolved as shift
WARNING: shift/reduce conflict for TRY in state 124 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 124 resolved as shift
WARNING: shift/reduce conflict for FROM in state 124 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 124 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 129 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 129 resolved as shift
WARNING: shift/reduce conflict for ID in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 129 resolved as shift
WARNING: shift/reduce conflict for FOR in state 129 resolved as shift
WARNING: shift/reduce conflict for DEF in state 129 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 129 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 129 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 129 resolved as shift
WARNING: shift/reduce conflict for PASS in state 129 resolved as shift
WARNING: shift/reduce conflict for TRY in state 129 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 129 resolved as shift
WARNING: shift/reduce conflict for FROM in state 129 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 129 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 132 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 132 resolved as shift
WARNING: shift/reduce conflict for ID in state 132 resolved as shift
WARNING: shift/reduce conflict for IF in state 132 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 132 resolved as shift
WARNING: shift/reduce conflict for FOR in state 132 resolved as shift
WARNING: shift/reduce conflict for DEF in state 132 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 132 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 132 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 132 resolved as shift
WARNING: shift/reduce conflict for PASS in state 132 resolved as shift
WARNING: shift/reduce conflict for TRY in state 132 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 132 resolved as shift
WARNING: shift/reduce conflict for FROM in state 132 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 132 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 137 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 137 resolved as shift
WARNING: shift/reduce conflict for ID in state 137 resolved as shift
WARNING: shift/reduce conflict for IF in state 137 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 137 resolved as shift
WARNING: shift/reduce conflict for FOR in state 137 resolved as shift
WARNING: shift/reduce conflict for DEF in state 137 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 137 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 137 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 137 resolved as shift
WARNING: shift/reduce conflict for PASS in state 137 resolved as shift
WARNING: shift/reduce conflict for TRY in state 137 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 137 resolved as shift
WARNING: shift/reduce conflict for FROM in state 137 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 137 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 139 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 139 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: shift/reduce conflict for IF in state 139 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 139 resolved as shift
WARNING: shift/reduce conflict for FOR in state 139 resolved as shift
WARNING: shift/reduce conflict for DEF in state 139 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 139 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 139 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 139 resolved as shift
WARNING: shift/reduce conflict for PASS in state 139 resolved as shift
WARNING: shift/reduce conflict for TRY in state 139 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 139 resolved as shift
WARNING: shift/reduce conflict for FROM in state 139 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 139 resolved as shift
