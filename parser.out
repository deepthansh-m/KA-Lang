Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    DEF
    DIVIDE
    ELSE
    EQUAL
    FOR
    GREATER
    IF
    INDENT
    INPUT
    MINUS
    NEWLINE
    NOT
    OR
    RETURN
    TIMES
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> program statement
Rule 3     statement -> PRINT LPAREN expression RPAREN
Rule 4     statement -> PRINT LPAREN STRING RPAREN
Rule 5     expression -> NUMBER
Rule 6     expression -> STRING
Rule 7     statement -> ID ASSIGN expression
Rule 8     statement -> ID ASSIGN STRING
Rule 9     expression -> expression PLUS expression

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 7 8
COLON                : 
DEF                  : 
DIVIDE               : 
ELSE                 : 
EQUAL                : 
FOR                  : 
GREATER              : 
ID                   : 7 8
IF                   : 
INDENT               : 
INPUT                : 
LPAREN               : 3 4
MINUS                : 
NEWLINE              : 
NOT                  : 
NUMBER               : 5
OR                   : 
PLUS                 : 9
PRINT                : 3 4
RETURN               : 
RPAREN               : 3 4
STRING               : 4 6 8
TIMES                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

expression           : 3 7 9 9
program              : 2 0
statement            : 1 2

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . program statement
    (3) statement -> . PRINT LPAREN expression RPAREN
    (4) statement -> . PRINT LPAREN STRING RPAREN
    (7) statement -> . ID ASSIGN expression
    (8) statement -> . ID ASSIGN STRING

    PRINT           shift and go to state 3
    ID              shift and go to state 4

    program                        shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> program .
    (2) program -> program . statement
    (3) statement -> . PRINT LPAREN expression RPAREN
    (4) statement -> . PRINT LPAREN STRING RPAREN
    (7) statement -> . ID ASSIGN expression
    (8) statement -> . ID ASSIGN STRING

    PRINT           shift and go to state 3
    ID              shift and go to state 4

    statement                      shift and go to state 5

state 2

    (1) program -> statement .

    PRINT           reduce using rule 1 (program -> statement .)
    ID              reduce using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)


state 3

    (3) statement -> PRINT . LPAREN expression RPAREN
    (4) statement -> PRINT . LPAREN STRING RPAREN

    LPAREN          shift and go to state 6


state 4

    (7) statement -> ID . ASSIGN expression
    (8) statement -> ID . ASSIGN STRING

    ASSIGN          shift and go to state 7


state 5

    (2) program -> program statement .

    PRINT           reduce using rule 2 (program -> program statement .)
    ID              reduce using rule 2 (program -> program statement .)
    $end            reduce using rule 2 (program -> program statement .)


state 6

    (3) statement -> PRINT LPAREN . expression RPAREN
    (4) statement -> PRINT LPAREN . STRING RPAREN
    (5) expression -> . NUMBER
    (6) expression -> . STRING
    (9) expression -> . expression PLUS expression

    STRING          shift and go to state 9
    NUMBER          shift and go to state 10

    expression                     shift and go to state 8

state 7

    (7) statement -> ID ASSIGN . expression
    (8) statement -> ID ASSIGN . STRING
    (5) expression -> . NUMBER
    (6) expression -> . STRING
    (9) expression -> . expression PLUS expression

    STRING          shift and go to state 12
    NUMBER          shift and go to state 10

    expression                     shift and go to state 11

state 8

    (3) statement -> PRINT LPAREN expression . RPAREN
    (9) expression -> expression . PLUS expression

    RPAREN          shift and go to state 13
    PLUS            shift and go to state 14


state 9

    (4) statement -> PRINT LPAREN STRING . RPAREN
    (6) expression -> STRING .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 15
    PLUS            reduce using rule 6 (expression -> STRING .)

  ! RPAREN          [ reduce using rule 6 (expression -> STRING .) ]


state 10

    (5) expression -> NUMBER .

    RPAREN          reduce using rule 5 (expression -> NUMBER .)
    PLUS            reduce using rule 5 (expression -> NUMBER .)
    PRINT           reduce using rule 5 (expression -> NUMBER .)
    ID              reduce using rule 5 (expression -> NUMBER .)
    $end            reduce using rule 5 (expression -> NUMBER .)


state 11

    (7) statement -> ID ASSIGN expression .
    (9) expression -> expression . PLUS expression

    PRINT           reduce using rule 7 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 7 (statement -> ID ASSIGN expression .)
    $end            reduce using rule 7 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 14


state 12

    (8) statement -> ID ASSIGN STRING .
    (6) expression -> STRING .

  ! reduce/reduce conflict for PRINT resolved using rule 6 (expression -> STRING .)
  ! reduce/reduce conflict for ID resolved using rule 6 (expression -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 6 (expression -> STRING .)
    PLUS            reduce using rule 6 (expression -> STRING .)
    PRINT           reduce using rule 6 (expression -> STRING .)
    ID              reduce using rule 6 (expression -> STRING .)
    $end            reduce using rule 6 (expression -> STRING .)

  ! PRINT           [ reduce using rule 8 (statement -> ID ASSIGN STRING .) ]
  ! ID              [ reduce using rule 8 (statement -> ID ASSIGN STRING .) ]
  ! $end            [ reduce using rule 8 (statement -> ID ASSIGN STRING .) ]


state 13

    (3) statement -> PRINT LPAREN expression RPAREN .

    PRINT           reduce using rule 3 (statement -> PRINT LPAREN expression RPAREN .)
    ID              reduce using rule 3 (statement -> PRINT LPAREN expression RPAREN .)
    $end            reduce using rule 3 (statement -> PRINT LPAREN expression RPAREN .)


state 14

    (9) expression -> expression PLUS . expression
    (5) expression -> . NUMBER
    (6) expression -> . STRING
    (9) expression -> . expression PLUS expression

    NUMBER          shift and go to state 10
    STRING          shift and go to state 17

    expression                     shift and go to state 16

state 15

    (4) statement -> PRINT LPAREN STRING RPAREN .

    PRINT           reduce using rule 4 (statement -> PRINT LPAREN STRING RPAREN .)
    ID              reduce using rule 4 (statement -> PRINT LPAREN STRING RPAREN .)
    $end            reduce using rule 4 (statement -> PRINT LPAREN STRING RPAREN .)


state 16

    (9) expression -> expression PLUS expression .
    (9) expression -> expression . PLUS expression

  ! shift/reduce conflict for PLUS resolved as shift
    RPAREN          reduce using rule 9 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 9 (expression -> expression PLUS expression .)
    ID              reduce using rule 9 (expression -> expression PLUS expression .)
    $end            reduce using rule 9 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 14

  ! PLUS            [ reduce using rule 9 (expression -> expression PLUS expression .) ]


state 17

    (6) expression -> STRING .

    PLUS            reduce using rule 6 (expression -> STRING .)
    RPAREN          reduce using rule 6 (expression -> STRING .)
    PRINT           reduce using rule 6 (expression -> STRING .)
    ID              reduce using rule 6 (expression -> STRING .)
    $end            reduce using rule 6 (expression -> STRING .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 9 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (expression -> STRING)
WARNING: rejected rule (statement -> ID ASSIGN STRING) in state 12
WARNING: Rule (statement -> ID ASSIGN STRING) is never reduced
