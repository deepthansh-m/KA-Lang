Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    GLOBAL
    NONLOCAL

Grammar

Rule 0     S' -> program
Rule 1     program -> START NEWLINE statements END
Rule 2     statements -> statement
Rule 3     statements -> statements statement
Rule 4     statement -> print_statement
Rule 5     statement -> assignment_statement NEWLINE
Rule 6     statement -> if_statement
Rule 7     statement -> while_statement
Rule 8     statement -> for_statement
Rule 9     statement -> function_def
Rule 10    statement -> function_call
Rule 11    statement -> return_statement
Rule 12    statement -> break_statement
Rule 13    statement -> continue_statement
Rule 14    statement -> pass_statement
Rule 15    statement -> try_except_statement
Rule 16    statement -> import_statement
Rule 17    statement -> class_definition
Rule 18    print_statement -> PRINT LPAREN expression RPAREN NEWLINE
Rule 19    assignment_statement -> ID ASSIGN expression
Rule 20    expression -> expression PLUS term
Rule 21    expression -> expression MINUS term
Rule 22    expression -> term
Rule 23    term -> term TIMES factor
Rule 24    term -> term DIVIDE factor
Rule 25    term -> factor
Rule 26    factor -> NUMBER
Rule 27    factor -> STRING
Rule 28    factor -> ID
Rule 29    factor -> LPAREN expression RPAREN
Rule 30    factor -> MINUS factor
Rule 31    comparison -> expression LESS expression
Rule 32    comparison -> expression GREATER expression
Rule 33    comparison -> expression EQUAL expression
Rule 34    comparison -> expression NOTEQUAL expression
Rule 35    comparison -> expression LESSEQUAL expression
Rule 36    comparison -> expression GREATEREQUAL expression
Rule 37    if_statement -> IF LPAREN expression RPAREN COLON statements
Rule 38    if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements
Rule 39    if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
Rule 40    while_statement -> WHILE LPAREN expression RPAREN COLON statements
Rule 41    for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
Rule 42    function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements
Rule 43    parameter_list -> empty
Rule 44    parameter_list -> ID
Rule 45    parameter_list -> parameter_list COMMA ID
Rule 46    function_call -> ID LPAREN argument_list RPAREN
Rule 47    argument_list -> empty
Rule 48    argument_list -> expression
Rule 49    argument_list -> argument_list COMMA expression
Rule 50    return_statement -> RETURN expression
Rule 51    break_statement -> BREAK
Rule 52    continue_statement -> CONTINUE
Rule 53    pass_statement -> PASS
Rule 54    try_except_statement -> TRY COLON statements EXCEPT COLON statements
Rule 55    try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
Rule 56    import_statement -> IMPORT ID
Rule 57    import_statement -> FROM ID IMPORT ID
Rule 58    class_definition -> CLASS ID COLON statements
Rule 59    class_definition -> CLASS ID LPAREN ID RPAREN COLON statements
Rule 60    empty -> <empty>

Terminals, with rules where they appear

AS                   : 
ASSIGN               : 19
BREAK                : 51
CLASS                : 58 59
COLON                : 37 38 38 39 39 40 41 42 54 54 55 55 55 58 59
COMMA                : 41 45 49
CONTINUE             : 52
DEF                  : 42
DIVIDE               : 24
ELIF                 : 39
ELSE                 : 38
END                  : 1
EQUAL                : 33
EXCEPT               : 54 55
FINALLY              : 55
FOR                  : 41
FROM                 : 57
GLOBAL               : 
GREATER              : 32
GREATEREQUAL         : 36
ID                   : 19 28 41 42 44 45 46 56 57 57 58 59 59
IF                   : 37 38 39
IMPORT               : 56 57
IN                   : 41
LESS                 : 31
LESSEQUAL            : 35
LPAREN               : 18 29 37 38 39 39 40 41 41 42 46 59
MINUS                : 21 30
NEWLINE              : 1 5 18
NONLOCAL             : 
NOTEQUAL             : 34
NUMBER               : 26 41 41
PASS                 : 53
PLUS                 : 20
PRINT                : 18
RANGE                : 41
RETURN               : 50
RPAREN               : 18 29 37 38 39 39 40 41 41 42 46 59
START                : 1
STRING               : 27
TIMES                : 23
TRY                  : 54 55
WHILE                : 40
error                : 

Nonterminals, with rules where they appear

argument_list        : 46 49
assignment_statement : 5
break_statement      : 12
class_definition     : 17
comparison           : 
continue_statement   : 13
empty                : 43 47
expression           : 18 19 20 21 29 31 31 32 32 33 33 34 34 35 35 36 36 37 38 39 39 40 48 49 50
factor               : 23 24 25 30
for_statement        : 8
function_call        : 10
function_def         : 9
if_statement         : 6
import_statement     : 16
parameter_list       : 42 45
pass_statement       : 14
print_statement      : 4
program              : 0
return_statement     : 11
statement            : 2 3
statements           : 1 3 37 38 38 39 39 40 41 42 54 54 55 55 55 58 59
term                 : 20 21 22 23 24
try_except_statement : 15
while_statement      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . START NEWLINE statements END

    START           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> START . NEWLINE statements END

    NEWLINE         shift and go to state 3


state 3

    (1) program -> START NEWLINE . statements END
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 4
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 4

    (1) program -> START NEWLINE statements . END
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    END             shift and go to state 34
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 5

    (2) statements -> statement .

    END             reduce using rule 2 (statements -> statement .)
    PRINT           reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    WHILE           reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    DEF             reduce using rule 2 (statements -> statement .)
    RETURN          reduce using rule 2 (statements -> statement .)
    BREAK           reduce using rule 2 (statements -> statement .)
    CONTINUE        reduce using rule 2 (statements -> statement .)
    PASS            reduce using rule 2 (statements -> statement .)
    TRY             reduce using rule 2 (statements -> statement .)
    IMPORT          reduce using rule 2 (statements -> statement .)
    FROM            reduce using rule 2 (statements -> statement .)
    CLASS           reduce using rule 2 (statements -> statement .)
    EXCEPT          reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ELIF            reduce using rule 2 (statements -> statement .)
    FINALLY         reduce using rule 2 (statements -> statement .)


state 6

    (4) statement -> print_statement .

    END             reduce using rule 4 (statement -> print_statement .)
    PRINT           reduce using rule 4 (statement -> print_statement .)
    ID              reduce using rule 4 (statement -> print_statement .)
    IF              reduce using rule 4 (statement -> print_statement .)
    WHILE           reduce using rule 4 (statement -> print_statement .)
    FOR             reduce using rule 4 (statement -> print_statement .)
    DEF             reduce using rule 4 (statement -> print_statement .)
    RETURN          reduce using rule 4 (statement -> print_statement .)
    BREAK           reduce using rule 4 (statement -> print_statement .)
    CONTINUE        reduce using rule 4 (statement -> print_statement .)
    PASS            reduce using rule 4 (statement -> print_statement .)
    TRY             reduce using rule 4 (statement -> print_statement .)
    IMPORT          reduce using rule 4 (statement -> print_statement .)
    FROM            reduce using rule 4 (statement -> print_statement .)
    CLASS           reduce using rule 4 (statement -> print_statement .)
    EXCEPT          reduce using rule 4 (statement -> print_statement .)
    ELSE            reduce using rule 4 (statement -> print_statement .)
    ELIF            reduce using rule 4 (statement -> print_statement .)
    FINALLY         reduce using rule 4 (statement -> print_statement .)


state 7

    (5) statement -> assignment_statement . NEWLINE

    NEWLINE         shift and go to state 36


state 8

    (6) statement -> if_statement .

    END             reduce using rule 6 (statement -> if_statement .)
    PRINT           reduce using rule 6 (statement -> if_statement .)
    ID              reduce using rule 6 (statement -> if_statement .)
    IF              reduce using rule 6 (statement -> if_statement .)
    WHILE           reduce using rule 6 (statement -> if_statement .)
    FOR             reduce using rule 6 (statement -> if_statement .)
    DEF             reduce using rule 6 (statement -> if_statement .)
    RETURN          reduce using rule 6 (statement -> if_statement .)
    BREAK           reduce using rule 6 (statement -> if_statement .)
    CONTINUE        reduce using rule 6 (statement -> if_statement .)
    PASS            reduce using rule 6 (statement -> if_statement .)
    TRY             reduce using rule 6 (statement -> if_statement .)
    IMPORT          reduce using rule 6 (statement -> if_statement .)
    FROM            reduce using rule 6 (statement -> if_statement .)
    CLASS           reduce using rule 6 (statement -> if_statement .)
    EXCEPT          reduce using rule 6 (statement -> if_statement .)
    ELSE            reduce using rule 6 (statement -> if_statement .)
    ELIF            reduce using rule 6 (statement -> if_statement .)
    FINALLY         reduce using rule 6 (statement -> if_statement .)


state 9

    (7) statement -> while_statement .

    END             reduce using rule 7 (statement -> while_statement .)
    PRINT           reduce using rule 7 (statement -> while_statement .)
    ID              reduce using rule 7 (statement -> while_statement .)
    IF              reduce using rule 7 (statement -> while_statement .)
    WHILE           reduce using rule 7 (statement -> while_statement .)
    FOR             reduce using rule 7 (statement -> while_statement .)
    DEF             reduce using rule 7 (statement -> while_statement .)
    RETURN          reduce using rule 7 (statement -> while_statement .)
    BREAK           reduce using rule 7 (statement -> while_statement .)
    CONTINUE        reduce using rule 7 (statement -> while_statement .)
    PASS            reduce using rule 7 (statement -> while_statement .)
    TRY             reduce using rule 7 (statement -> while_statement .)
    IMPORT          reduce using rule 7 (statement -> while_statement .)
    FROM            reduce using rule 7 (statement -> while_statement .)
    CLASS           reduce using rule 7 (statement -> while_statement .)
    EXCEPT          reduce using rule 7 (statement -> while_statement .)
    ELSE            reduce using rule 7 (statement -> while_statement .)
    ELIF            reduce using rule 7 (statement -> while_statement .)
    FINALLY         reduce using rule 7 (statement -> while_statement .)


state 10

    (8) statement -> for_statement .

    END             reduce using rule 8 (statement -> for_statement .)
    PRINT           reduce using rule 8 (statement -> for_statement .)
    ID              reduce using rule 8 (statement -> for_statement .)
    IF              reduce using rule 8 (statement -> for_statement .)
    WHILE           reduce using rule 8 (statement -> for_statement .)
    FOR             reduce using rule 8 (statement -> for_statement .)
    DEF             reduce using rule 8 (statement -> for_statement .)
    RETURN          reduce using rule 8 (statement -> for_statement .)
    BREAK           reduce using rule 8 (statement -> for_statement .)
    CONTINUE        reduce using rule 8 (statement -> for_statement .)
    PASS            reduce using rule 8 (statement -> for_statement .)
    TRY             reduce using rule 8 (statement -> for_statement .)
    IMPORT          reduce using rule 8 (statement -> for_statement .)
    FROM            reduce using rule 8 (statement -> for_statement .)
    CLASS           reduce using rule 8 (statement -> for_statement .)
    EXCEPT          reduce using rule 8 (statement -> for_statement .)
    ELSE            reduce using rule 8 (statement -> for_statement .)
    ELIF            reduce using rule 8 (statement -> for_statement .)
    FINALLY         reduce using rule 8 (statement -> for_statement .)


state 11

    (9) statement -> function_def .

    END             reduce using rule 9 (statement -> function_def .)
    PRINT           reduce using rule 9 (statement -> function_def .)
    ID              reduce using rule 9 (statement -> function_def .)
    IF              reduce using rule 9 (statement -> function_def .)
    WHILE           reduce using rule 9 (statement -> function_def .)
    FOR             reduce using rule 9 (statement -> function_def .)
    DEF             reduce using rule 9 (statement -> function_def .)
    RETURN          reduce using rule 9 (statement -> function_def .)
    BREAK           reduce using rule 9 (statement -> function_def .)
    CONTINUE        reduce using rule 9 (statement -> function_def .)
    PASS            reduce using rule 9 (statement -> function_def .)
    TRY             reduce using rule 9 (statement -> function_def .)
    IMPORT          reduce using rule 9 (statement -> function_def .)
    FROM            reduce using rule 9 (statement -> function_def .)
    CLASS           reduce using rule 9 (statement -> function_def .)
    EXCEPT          reduce using rule 9 (statement -> function_def .)
    ELSE            reduce using rule 9 (statement -> function_def .)
    ELIF            reduce using rule 9 (statement -> function_def .)
    FINALLY         reduce using rule 9 (statement -> function_def .)


state 12

    (10) statement -> function_call .

    END             reduce using rule 10 (statement -> function_call .)
    PRINT           reduce using rule 10 (statement -> function_call .)
    ID              reduce using rule 10 (statement -> function_call .)
    IF              reduce using rule 10 (statement -> function_call .)
    WHILE           reduce using rule 10 (statement -> function_call .)
    FOR             reduce using rule 10 (statement -> function_call .)
    DEF             reduce using rule 10 (statement -> function_call .)
    RETURN          reduce using rule 10 (statement -> function_call .)
    BREAK           reduce using rule 10 (statement -> function_call .)
    CONTINUE        reduce using rule 10 (statement -> function_call .)
    PASS            reduce using rule 10 (statement -> function_call .)
    TRY             reduce using rule 10 (statement -> function_call .)
    IMPORT          reduce using rule 10 (statement -> function_call .)
    FROM            reduce using rule 10 (statement -> function_call .)
    CLASS           reduce using rule 10 (statement -> function_call .)
    EXCEPT          reduce using rule 10 (statement -> function_call .)
    ELSE            reduce using rule 10 (statement -> function_call .)
    ELIF            reduce using rule 10 (statement -> function_call .)
    FINALLY         reduce using rule 10 (statement -> function_call .)


state 13

    (11) statement -> return_statement .

    END             reduce using rule 11 (statement -> return_statement .)
    PRINT           reduce using rule 11 (statement -> return_statement .)
    ID              reduce using rule 11 (statement -> return_statement .)
    IF              reduce using rule 11 (statement -> return_statement .)
    WHILE           reduce using rule 11 (statement -> return_statement .)
    FOR             reduce using rule 11 (statement -> return_statement .)
    DEF             reduce using rule 11 (statement -> return_statement .)
    RETURN          reduce using rule 11 (statement -> return_statement .)
    BREAK           reduce using rule 11 (statement -> return_statement .)
    CONTINUE        reduce using rule 11 (statement -> return_statement .)
    PASS            reduce using rule 11 (statement -> return_statement .)
    TRY             reduce using rule 11 (statement -> return_statement .)
    IMPORT          reduce using rule 11 (statement -> return_statement .)
    FROM            reduce using rule 11 (statement -> return_statement .)
    CLASS           reduce using rule 11 (statement -> return_statement .)
    EXCEPT          reduce using rule 11 (statement -> return_statement .)
    ELSE            reduce using rule 11 (statement -> return_statement .)
    ELIF            reduce using rule 11 (statement -> return_statement .)
    FINALLY         reduce using rule 11 (statement -> return_statement .)


state 14

    (12) statement -> break_statement .

    END             reduce using rule 12 (statement -> break_statement .)
    PRINT           reduce using rule 12 (statement -> break_statement .)
    ID              reduce using rule 12 (statement -> break_statement .)
    IF              reduce using rule 12 (statement -> break_statement .)
    WHILE           reduce using rule 12 (statement -> break_statement .)
    FOR             reduce using rule 12 (statement -> break_statement .)
    DEF             reduce using rule 12 (statement -> break_statement .)
    RETURN          reduce using rule 12 (statement -> break_statement .)
    BREAK           reduce using rule 12 (statement -> break_statement .)
    CONTINUE        reduce using rule 12 (statement -> break_statement .)
    PASS            reduce using rule 12 (statement -> break_statement .)
    TRY             reduce using rule 12 (statement -> break_statement .)
    IMPORT          reduce using rule 12 (statement -> break_statement .)
    FROM            reduce using rule 12 (statement -> break_statement .)
    CLASS           reduce using rule 12 (statement -> break_statement .)
    EXCEPT          reduce using rule 12 (statement -> break_statement .)
    ELSE            reduce using rule 12 (statement -> break_statement .)
    ELIF            reduce using rule 12 (statement -> break_statement .)
    FINALLY         reduce using rule 12 (statement -> break_statement .)


state 15

    (13) statement -> continue_statement .

    END             reduce using rule 13 (statement -> continue_statement .)
    PRINT           reduce using rule 13 (statement -> continue_statement .)
    ID              reduce using rule 13 (statement -> continue_statement .)
    IF              reduce using rule 13 (statement -> continue_statement .)
    WHILE           reduce using rule 13 (statement -> continue_statement .)
    FOR             reduce using rule 13 (statement -> continue_statement .)
    DEF             reduce using rule 13 (statement -> continue_statement .)
    RETURN          reduce using rule 13 (statement -> continue_statement .)
    BREAK           reduce using rule 13 (statement -> continue_statement .)
    CONTINUE        reduce using rule 13 (statement -> continue_statement .)
    PASS            reduce using rule 13 (statement -> continue_statement .)
    TRY             reduce using rule 13 (statement -> continue_statement .)
    IMPORT          reduce using rule 13 (statement -> continue_statement .)
    FROM            reduce using rule 13 (statement -> continue_statement .)
    CLASS           reduce using rule 13 (statement -> continue_statement .)
    EXCEPT          reduce using rule 13 (statement -> continue_statement .)
    ELSE            reduce using rule 13 (statement -> continue_statement .)
    ELIF            reduce using rule 13 (statement -> continue_statement .)
    FINALLY         reduce using rule 13 (statement -> continue_statement .)


state 16

    (14) statement -> pass_statement .

    END             reduce using rule 14 (statement -> pass_statement .)
    PRINT           reduce using rule 14 (statement -> pass_statement .)
    ID              reduce using rule 14 (statement -> pass_statement .)
    IF              reduce using rule 14 (statement -> pass_statement .)
    WHILE           reduce using rule 14 (statement -> pass_statement .)
    FOR             reduce using rule 14 (statement -> pass_statement .)
    DEF             reduce using rule 14 (statement -> pass_statement .)
    RETURN          reduce using rule 14 (statement -> pass_statement .)
    BREAK           reduce using rule 14 (statement -> pass_statement .)
    CONTINUE        reduce using rule 14 (statement -> pass_statement .)
    PASS            reduce using rule 14 (statement -> pass_statement .)
    TRY             reduce using rule 14 (statement -> pass_statement .)
    IMPORT          reduce using rule 14 (statement -> pass_statement .)
    FROM            reduce using rule 14 (statement -> pass_statement .)
    CLASS           reduce using rule 14 (statement -> pass_statement .)
    EXCEPT          reduce using rule 14 (statement -> pass_statement .)
    ELSE            reduce using rule 14 (statement -> pass_statement .)
    ELIF            reduce using rule 14 (statement -> pass_statement .)
    FINALLY         reduce using rule 14 (statement -> pass_statement .)


state 17

    (15) statement -> try_except_statement .

    END             reduce using rule 15 (statement -> try_except_statement .)
    PRINT           reduce using rule 15 (statement -> try_except_statement .)
    ID              reduce using rule 15 (statement -> try_except_statement .)
    IF              reduce using rule 15 (statement -> try_except_statement .)
    WHILE           reduce using rule 15 (statement -> try_except_statement .)
    FOR             reduce using rule 15 (statement -> try_except_statement .)
    DEF             reduce using rule 15 (statement -> try_except_statement .)
    RETURN          reduce using rule 15 (statement -> try_except_statement .)
    BREAK           reduce using rule 15 (statement -> try_except_statement .)
    CONTINUE        reduce using rule 15 (statement -> try_except_statement .)
    PASS            reduce using rule 15 (statement -> try_except_statement .)
    TRY             reduce using rule 15 (statement -> try_except_statement .)
    IMPORT          reduce using rule 15 (statement -> try_except_statement .)
    FROM            reduce using rule 15 (statement -> try_except_statement .)
    CLASS           reduce using rule 15 (statement -> try_except_statement .)
    EXCEPT          reduce using rule 15 (statement -> try_except_statement .)
    ELSE            reduce using rule 15 (statement -> try_except_statement .)
    ELIF            reduce using rule 15 (statement -> try_except_statement .)
    FINALLY         reduce using rule 15 (statement -> try_except_statement .)


state 18

    (16) statement -> import_statement .

    END             reduce using rule 16 (statement -> import_statement .)
    PRINT           reduce using rule 16 (statement -> import_statement .)
    ID              reduce using rule 16 (statement -> import_statement .)
    IF              reduce using rule 16 (statement -> import_statement .)
    WHILE           reduce using rule 16 (statement -> import_statement .)
    FOR             reduce using rule 16 (statement -> import_statement .)
    DEF             reduce using rule 16 (statement -> import_statement .)
    RETURN          reduce using rule 16 (statement -> import_statement .)
    BREAK           reduce using rule 16 (statement -> import_statement .)
    CONTINUE        reduce using rule 16 (statement -> import_statement .)
    PASS            reduce using rule 16 (statement -> import_statement .)
    TRY             reduce using rule 16 (statement -> import_statement .)
    IMPORT          reduce using rule 16 (statement -> import_statement .)
    FROM            reduce using rule 16 (statement -> import_statement .)
    CLASS           reduce using rule 16 (statement -> import_statement .)
    EXCEPT          reduce using rule 16 (statement -> import_statement .)
    ELSE            reduce using rule 16 (statement -> import_statement .)
    ELIF            reduce using rule 16 (statement -> import_statement .)
    FINALLY         reduce using rule 16 (statement -> import_statement .)


state 19

    (17) statement -> class_definition .

    END             reduce using rule 17 (statement -> class_definition .)
    PRINT           reduce using rule 17 (statement -> class_definition .)
    ID              reduce using rule 17 (statement -> class_definition .)
    IF              reduce using rule 17 (statement -> class_definition .)
    WHILE           reduce using rule 17 (statement -> class_definition .)
    FOR             reduce using rule 17 (statement -> class_definition .)
    DEF             reduce using rule 17 (statement -> class_definition .)
    RETURN          reduce using rule 17 (statement -> class_definition .)
    BREAK           reduce using rule 17 (statement -> class_definition .)
    CONTINUE        reduce using rule 17 (statement -> class_definition .)
    PASS            reduce using rule 17 (statement -> class_definition .)
    TRY             reduce using rule 17 (statement -> class_definition .)
    IMPORT          reduce using rule 17 (statement -> class_definition .)
    FROM            reduce using rule 17 (statement -> class_definition .)
    CLASS           reduce using rule 17 (statement -> class_definition .)
    EXCEPT          reduce using rule 17 (statement -> class_definition .)
    ELSE            reduce using rule 17 (statement -> class_definition .)
    ELIF            reduce using rule 17 (statement -> class_definition .)
    FINALLY         reduce using rule 17 (statement -> class_definition .)


state 20

    (18) print_statement -> PRINT . LPAREN expression RPAREN NEWLINE

    LPAREN          shift and go to state 37


state 21

    (19) assignment_statement -> ID . ASSIGN expression
    (46) function_call -> ID . LPAREN argument_list RPAREN

    ASSIGN          shift and go to state 38
    LPAREN          shift and go to state 39


state 22

    (37) if_statement -> IF . LPAREN expression RPAREN COLON statements
    (38) if_statement -> IF . LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> IF . LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements

    LPAREN          shift and go to state 40


state 23

    (40) while_statement -> WHILE . LPAREN expression RPAREN COLON statements

    LPAREN          shift and go to state 41


state 24

    (41) for_statement -> FOR . LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    LPAREN          shift and go to state 42


state 25

    (42) function_def -> DEF . ID LPAREN parameter_list RPAREN COLON statements

    ID              shift and go to state 43


state 26

    (50) return_statement -> RETURN . expression
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    expression                     shift and go to state 44
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 27

    (51) break_statement -> BREAK .

    END             reduce using rule 51 (break_statement -> BREAK .)
    PRINT           reduce using rule 51 (break_statement -> BREAK .)
    ID              reduce using rule 51 (break_statement -> BREAK .)
    IF              reduce using rule 51 (break_statement -> BREAK .)
    WHILE           reduce using rule 51 (break_statement -> BREAK .)
    FOR             reduce using rule 51 (break_statement -> BREAK .)
    DEF             reduce using rule 51 (break_statement -> BREAK .)
    RETURN          reduce using rule 51 (break_statement -> BREAK .)
    BREAK           reduce using rule 51 (break_statement -> BREAK .)
    CONTINUE        reduce using rule 51 (break_statement -> BREAK .)
    PASS            reduce using rule 51 (break_statement -> BREAK .)
    TRY             reduce using rule 51 (break_statement -> BREAK .)
    IMPORT          reduce using rule 51 (break_statement -> BREAK .)
    FROM            reduce using rule 51 (break_statement -> BREAK .)
    CLASS           reduce using rule 51 (break_statement -> BREAK .)
    EXCEPT          reduce using rule 51 (break_statement -> BREAK .)
    ELSE            reduce using rule 51 (break_statement -> BREAK .)
    ELIF            reduce using rule 51 (break_statement -> BREAK .)
    FINALLY         reduce using rule 51 (break_statement -> BREAK .)


state 28

    (52) continue_statement -> CONTINUE .

    END             reduce using rule 52 (continue_statement -> CONTINUE .)
    PRINT           reduce using rule 52 (continue_statement -> CONTINUE .)
    ID              reduce using rule 52 (continue_statement -> CONTINUE .)
    IF              reduce using rule 52 (continue_statement -> CONTINUE .)
    WHILE           reduce using rule 52 (continue_statement -> CONTINUE .)
    FOR             reduce using rule 52 (continue_statement -> CONTINUE .)
    DEF             reduce using rule 52 (continue_statement -> CONTINUE .)
    RETURN          reduce using rule 52 (continue_statement -> CONTINUE .)
    BREAK           reduce using rule 52 (continue_statement -> CONTINUE .)
    CONTINUE        reduce using rule 52 (continue_statement -> CONTINUE .)
    PASS            reduce using rule 52 (continue_statement -> CONTINUE .)
    TRY             reduce using rule 52 (continue_statement -> CONTINUE .)
    IMPORT          reduce using rule 52 (continue_statement -> CONTINUE .)
    FROM            reduce using rule 52 (continue_statement -> CONTINUE .)
    CLASS           reduce using rule 52 (continue_statement -> CONTINUE .)
    EXCEPT          reduce using rule 52 (continue_statement -> CONTINUE .)
    ELSE            reduce using rule 52 (continue_statement -> CONTINUE .)
    ELIF            reduce using rule 52 (continue_statement -> CONTINUE .)
    FINALLY         reduce using rule 52 (continue_statement -> CONTINUE .)


state 29

    (53) pass_statement -> PASS .

    END             reduce using rule 53 (pass_statement -> PASS .)
    PRINT           reduce using rule 53 (pass_statement -> PASS .)
    ID              reduce using rule 53 (pass_statement -> PASS .)
    IF              reduce using rule 53 (pass_statement -> PASS .)
    WHILE           reduce using rule 53 (pass_statement -> PASS .)
    FOR             reduce using rule 53 (pass_statement -> PASS .)
    DEF             reduce using rule 53 (pass_statement -> PASS .)
    RETURN          reduce using rule 53 (pass_statement -> PASS .)
    BREAK           reduce using rule 53 (pass_statement -> PASS .)
    CONTINUE        reduce using rule 53 (pass_statement -> PASS .)
    PASS            reduce using rule 53 (pass_statement -> PASS .)
    TRY             reduce using rule 53 (pass_statement -> PASS .)
    IMPORT          reduce using rule 53 (pass_statement -> PASS .)
    FROM            reduce using rule 53 (pass_statement -> PASS .)
    CLASS           reduce using rule 53 (pass_statement -> PASS .)
    EXCEPT          reduce using rule 53 (pass_statement -> PASS .)
    ELSE            reduce using rule 53 (pass_statement -> PASS .)
    ELIF            reduce using rule 53 (pass_statement -> PASS .)
    FINALLY         reduce using rule 53 (pass_statement -> PASS .)


state 30

    (54) try_except_statement -> TRY . COLON statements EXCEPT COLON statements
    (55) try_except_statement -> TRY . COLON statements EXCEPT COLON statements FINALLY COLON statements

    COLON           shift and go to state 52


state 31

    (56) import_statement -> IMPORT . ID

    ID              shift and go to state 53


state 32

    (57) import_statement -> FROM . ID IMPORT ID

    ID              shift and go to state 54


state 33

    (58) class_definition -> CLASS . ID COLON statements
    (59) class_definition -> CLASS . ID LPAREN ID RPAREN COLON statements

    ID              shift and go to state 55


state 34

    (1) program -> START NEWLINE statements END .

    $end            reduce using rule 1 (program -> START NEWLINE statements END .)


state 35

    (3) statements -> statements statement .

    END             reduce using rule 3 (statements -> statements statement .)
    PRINT           reduce using rule 3 (statements -> statements statement .)
    ID              reduce using rule 3 (statements -> statements statement .)
    IF              reduce using rule 3 (statements -> statements statement .)
    WHILE           reduce using rule 3 (statements -> statements statement .)
    FOR             reduce using rule 3 (statements -> statements statement .)
    DEF             reduce using rule 3 (statements -> statements statement .)
    RETURN          reduce using rule 3 (statements -> statements statement .)
    BREAK           reduce using rule 3 (statements -> statements statement .)
    CONTINUE        reduce using rule 3 (statements -> statements statement .)
    PASS            reduce using rule 3 (statements -> statements statement .)
    TRY             reduce using rule 3 (statements -> statements statement .)
    IMPORT          reduce using rule 3 (statements -> statements statement .)
    FROM            reduce using rule 3 (statements -> statements statement .)
    CLASS           reduce using rule 3 (statements -> statements statement .)
    EXCEPT          reduce using rule 3 (statements -> statements statement .)
    ELSE            reduce using rule 3 (statements -> statements statement .)
    ELIF            reduce using rule 3 (statements -> statements statement .)
    FINALLY         reduce using rule 3 (statements -> statements statement .)


state 36

    (5) statement -> assignment_statement NEWLINE .

    END             reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    PRINT           reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    ID              reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    IF              reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    WHILE           reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    FOR             reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    DEF             reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    RETURN          reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    BREAK           reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    CONTINUE        reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    PASS            reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    TRY             reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    IMPORT          reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    FROM            reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    CLASS           reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    EXCEPT          reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    ELSE            reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    ELIF            reduce using rule 5 (statement -> assignment_statement NEWLINE .)
    FINALLY         reduce using rule 5 (statement -> assignment_statement NEWLINE .)


state 37

    (18) print_statement -> PRINT LPAREN . expression RPAREN NEWLINE
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    expression                     shift and go to state 56
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 38

    (19) assignment_statement -> ID ASSIGN . expression
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    expression                     shift and go to state 57
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 39

    (46) function_call -> ID LPAREN . argument_list RPAREN
    (47) argument_list -> . empty
    (48) argument_list -> . expression
    (49) argument_list -> . argument_list COMMA expression
    (60) empty -> .
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    RPAREN          reduce using rule 60 (empty -> .)
    COMMA           reduce using rule 60 (empty -> .)
    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    argument_list                  shift and go to state 58
    empty                          shift and go to state 59
    expression                     shift and go to state 60
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 40

    (37) if_statement -> IF LPAREN . expression RPAREN COLON statements
    (38) if_statement -> IF LPAREN . expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> IF LPAREN . expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    expression                     shift and go to state 61
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 41

    (40) while_statement -> WHILE LPAREN . expression RPAREN COLON statements
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    expression                     shift and go to state 62
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 42

    (41) for_statement -> FOR LPAREN . ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    ID              shift and go to state 63


state 43

    (42) function_def -> DEF ID . LPAREN parameter_list RPAREN COLON statements

    LPAREN          shift and go to state 64


state 44

    (50) return_statement -> RETURN expression .
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    END             reduce using rule 50 (return_statement -> RETURN expression .)
    PRINT           reduce using rule 50 (return_statement -> RETURN expression .)
    ID              reduce using rule 50 (return_statement -> RETURN expression .)
    IF              reduce using rule 50 (return_statement -> RETURN expression .)
    WHILE           reduce using rule 50 (return_statement -> RETURN expression .)
    FOR             reduce using rule 50 (return_statement -> RETURN expression .)
    DEF             reduce using rule 50 (return_statement -> RETURN expression .)
    RETURN          reduce using rule 50 (return_statement -> RETURN expression .)
    BREAK           reduce using rule 50 (return_statement -> RETURN expression .)
    CONTINUE        reduce using rule 50 (return_statement -> RETURN expression .)
    PASS            reduce using rule 50 (return_statement -> RETURN expression .)
    TRY             reduce using rule 50 (return_statement -> RETURN expression .)
    IMPORT          reduce using rule 50 (return_statement -> RETURN expression .)
    FROM            reduce using rule 50 (return_statement -> RETURN expression .)
    CLASS           reduce using rule 50 (return_statement -> RETURN expression .)
    EXCEPT          reduce using rule 50 (return_statement -> RETURN expression .)
    ELSE            reduce using rule 50 (return_statement -> RETURN expression .)
    ELIF            reduce using rule 50 (return_statement -> RETURN expression .)
    FINALLY         reduce using rule 50 (return_statement -> RETURN expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 45

    (22) expression -> term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 22 (expression -> term .)
    MINUS           reduce using rule 22 (expression -> term .)
    END             reduce using rule 22 (expression -> term .)
    PRINT           reduce using rule 22 (expression -> term .)
    ID              reduce using rule 22 (expression -> term .)
    IF              reduce using rule 22 (expression -> term .)
    WHILE           reduce using rule 22 (expression -> term .)
    FOR             reduce using rule 22 (expression -> term .)
    DEF             reduce using rule 22 (expression -> term .)
    RETURN          reduce using rule 22 (expression -> term .)
    BREAK           reduce using rule 22 (expression -> term .)
    CONTINUE        reduce using rule 22 (expression -> term .)
    PASS            reduce using rule 22 (expression -> term .)
    TRY             reduce using rule 22 (expression -> term .)
    IMPORT          reduce using rule 22 (expression -> term .)
    FROM            reduce using rule 22 (expression -> term .)
    CLASS           reduce using rule 22 (expression -> term .)
    EXCEPT          reduce using rule 22 (expression -> term .)
    ELSE            reduce using rule 22 (expression -> term .)
    ELIF            reduce using rule 22 (expression -> term .)
    FINALLY         reduce using rule 22 (expression -> term .)
    RPAREN          reduce using rule 22 (expression -> term .)
    NEWLINE         reduce using rule 22 (expression -> term .)
    COMMA           reduce using rule 22 (expression -> term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68


state 46

    (30) factor -> MINUS . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    factor                         shift and go to state 69

state 47

    (25) term -> factor .

    TIMES           reduce using rule 25 (term -> factor .)
    DIVIDE          reduce using rule 25 (term -> factor .)
    PLUS            reduce using rule 25 (term -> factor .)
    MINUS           reduce using rule 25 (term -> factor .)
    END             reduce using rule 25 (term -> factor .)
    PRINT           reduce using rule 25 (term -> factor .)
    ID              reduce using rule 25 (term -> factor .)
    IF              reduce using rule 25 (term -> factor .)
    WHILE           reduce using rule 25 (term -> factor .)
    FOR             reduce using rule 25 (term -> factor .)
    DEF             reduce using rule 25 (term -> factor .)
    RETURN          reduce using rule 25 (term -> factor .)
    BREAK           reduce using rule 25 (term -> factor .)
    CONTINUE        reduce using rule 25 (term -> factor .)
    PASS            reduce using rule 25 (term -> factor .)
    TRY             reduce using rule 25 (term -> factor .)
    IMPORT          reduce using rule 25 (term -> factor .)
    FROM            reduce using rule 25 (term -> factor .)
    CLASS           reduce using rule 25 (term -> factor .)
    EXCEPT          reduce using rule 25 (term -> factor .)
    ELSE            reduce using rule 25 (term -> factor .)
    ELIF            reduce using rule 25 (term -> factor .)
    FINALLY         reduce using rule 25 (term -> factor .)
    RPAREN          reduce using rule 25 (term -> factor .)
    NEWLINE         reduce using rule 25 (term -> factor .)
    COMMA           reduce using rule 25 (term -> factor .)


state 48

    (26) factor -> NUMBER .

    TIMES           reduce using rule 26 (factor -> NUMBER .)
    DIVIDE          reduce using rule 26 (factor -> NUMBER .)
    PLUS            reduce using rule 26 (factor -> NUMBER .)
    MINUS           reduce using rule 26 (factor -> NUMBER .)
    END             reduce using rule 26 (factor -> NUMBER .)
    PRINT           reduce using rule 26 (factor -> NUMBER .)
    ID              reduce using rule 26 (factor -> NUMBER .)
    IF              reduce using rule 26 (factor -> NUMBER .)
    WHILE           reduce using rule 26 (factor -> NUMBER .)
    FOR             reduce using rule 26 (factor -> NUMBER .)
    DEF             reduce using rule 26 (factor -> NUMBER .)
    RETURN          reduce using rule 26 (factor -> NUMBER .)
    BREAK           reduce using rule 26 (factor -> NUMBER .)
    CONTINUE        reduce using rule 26 (factor -> NUMBER .)
    PASS            reduce using rule 26 (factor -> NUMBER .)
    TRY             reduce using rule 26 (factor -> NUMBER .)
    IMPORT          reduce using rule 26 (factor -> NUMBER .)
    FROM            reduce using rule 26 (factor -> NUMBER .)
    CLASS           reduce using rule 26 (factor -> NUMBER .)
    EXCEPT          reduce using rule 26 (factor -> NUMBER .)
    ELSE            reduce using rule 26 (factor -> NUMBER .)
    ELIF            reduce using rule 26 (factor -> NUMBER .)
    FINALLY         reduce using rule 26 (factor -> NUMBER .)
    RPAREN          reduce using rule 26 (factor -> NUMBER .)
    NEWLINE         reduce using rule 26 (factor -> NUMBER .)
    COMMA           reduce using rule 26 (factor -> NUMBER .)


state 49

    (27) factor -> STRING .

    TIMES           reduce using rule 27 (factor -> STRING .)
    DIVIDE          reduce using rule 27 (factor -> STRING .)
    PLUS            reduce using rule 27 (factor -> STRING .)
    MINUS           reduce using rule 27 (factor -> STRING .)
    END             reduce using rule 27 (factor -> STRING .)
    PRINT           reduce using rule 27 (factor -> STRING .)
    ID              reduce using rule 27 (factor -> STRING .)
    IF              reduce using rule 27 (factor -> STRING .)
    WHILE           reduce using rule 27 (factor -> STRING .)
    FOR             reduce using rule 27 (factor -> STRING .)
    DEF             reduce using rule 27 (factor -> STRING .)
    RETURN          reduce using rule 27 (factor -> STRING .)
    BREAK           reduce using rule 27 (factor -> STRING .)
    CONTINUE        reduce using rule 27 (factor -> STRING .)
    PASS            reduce using rule 27 (factor -> STRING .)
    TRY             reduce using rule 27 (factor -> STRING .)
    IMPORT          reduce using rule 27 (factor -> STRING .)
    FROM            reduce using rule 27 (factor -> STRING .)
    CLASS           reduce using rule 27 (factor -> STRING .)
    EXCEPT          reduce using rule 27 (factor -> STRING .)
    ELSE            reduce using rule 27 (factor -> STRING .)
    ELIF            reduce using rule 27 (factor -> STRING .)
    FINALLY         reduce using rule 27 (factor -> STRING .)
    RPAREN          reduce using rule 27 (factor -> STRING .)
    NEWLINE         reduce using rule 27 (factor -> STRING .)
    COMMA           reduce using rule 27 (factor -> STRING .)


state 50

    (28) factor -> ID .

    TIMES           reduce using rule 28 (factor -> ID .)
    DIVIDE          reduce using rule 28 (factor -> ID .)
    PLUS            reduce using rule 28 (factor -> ID .)
    MINUS           reduce using rule 28 (factor -> ID .)
    END             reduce using rule 28 (factor -> ID .)
    PRINT           reduce using rule 28 (factor -> ID .)
    ID              reduce using rule 28 (factor -> ID .)
    IF              reduce using rule 28 (factor -> ID .)
    WHILE           reduce using rule 28 (factor -> ID .)
    FOR             reduce using rule 28 (factor -> ID .)
    DEF             reduce using rule 28 (factor -> ID .)
    RETURN          reduce using rule 28 (factor -> ID .)
    BREAK           reduce using rule 28 (factor -> ID .)
    CONTINUE        reduce using rule 28 (factor -> ID .)
    PASS            reduce using rule 28 (factor -> ID .)
    TRY             reduce using rule 28 (factor -> ID .)
    IMPORT          reduce using rule 28 (factor -> ID .)
    FROM            reduce using rule 28 (factor -> ID .)
    CLASS           reduce using rule 28 (factor -> ID .)
    EXCEPT          reduce using rule 28 (factor -> ID .)
    ELSE            reduce using rule 28 (factor -> ID .)
    ELIF            reduce using rule 28 (factor -> ID .)
    FINALLY         reduce using rule 28 (factor -> ID .)
    RPAREN          reduce using rule 28 (factor -> ID .)
    NEWLINE         reduce using rule 28 (factor -> ID .)
    COMMA           reduce using rule 28 (factor -> ID .)


state 51

    (29) factor -> LPAREN . expression RPAREN
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    expression                     shift and go to state 70
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 52

    (54) try_except_statement -> TRY COLON . statements EXCEPT COLON statements
    (55) try_except_statement -> TRY COLON . statements EXCEPT COLON statements FINALLY COLON statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 71
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 53

    (56) import_statement -> IMPORT ID .

    END             reduce using rule 56 (import_statement -> IMPORT ID .)
    PRINT           reduce using rule 56 (import_statement -> IMPORT ID .)
    ID              reduce using rule 56 (import_statement -> IMPORT ID .)
    IF              reduce using rule 56 (import_statement -> IMPORT ID .)
    WHILE           reduce using rule 56 (import_statement -> IMPORT ID .)
    FOR             reduce using rule 56 (import_statement -> IMPORT ID .)
    DEF             reduce using rule 56 (import_statement -> IMPORT ID .)
    RETURN          reduce using rule 56 (import_statement -> IMPORT ID .)
    BREAK           reduce using rule 56 (import_statement -> IMPORT ID .)
    CONTINUE        reduce using rule 56 (import_statement -> IMPORT ID .)
    PASS            reduce using rule 56 (import_statement -> IMPORT ID .)
    TRY             reduce using rule 56 (import_statement -> IMPORT ID .)
    IMPORT          reduce using rule 56 (import_statement -> IMPORT ID .)
    FROM            reduce using rule 56 (import_statement -> IMPORT ID .)
    CLASS           reduce using rule 56 (import_statement -> IMPORT ID .)
    EXCEPT          reduce using rule 56 (import_statement -> IMPORT ID .)
    ELSE            reduce using rule 56 (import_statement -> IMPORT ID .)
    ELIF            reduce using rule 56 (import_statement -> IMPORT ID .)
    FINALLY         reduce using rule 56 (import_statement -> IMPORT ID .)


state 54

    (57) import_statement -> FROM ID . IMPORT ID

    IMPORT          shift and go to state 72


state 55

    (58) class_definition -> CLASS ID . COLON statements
    (59) class_definition -> CLASS ID . LPAREN ID RPAREN COLON statements

    COLON           shift and go to state 73
    LPAREN          shift and go to state 74


state 56

    (18) print_statement -> PRINT LPAREN expression . RPAREN NEWLINE
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          shift and go to state 75
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 57

    (19) assignment_statement -> ID ASSIGN expression .
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    NEWLINE         reduce using rule 19 (assignment_statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 58

    (46) function_call -> ID LPAREN argument_list . RPAREN
    (49) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 76
    COMMA           shift and go to state 77


state 59

    (47) argument_list -> empty .

    RPAREN          reduce using rule 47 (argument_list -> empty .)
    COMMA           reduce using rule 47 (argument_list -> empty .)


state 60

    (48) argument_list -> expression .
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          reduce using rule 48 (argument_list -> expression .)
    COMMA           reduce using rule 48 (argument_list -> expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 61

    (37) if_statement -> IF LPAREN expression . RPAREN COLON statements
    (38) if_statement -> IF LPAREN expression . RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> IF LPAREN expression . RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 62

    (40) while_statement -> WHILE LPAREN expression . RPAREN COLON statements
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          shift and go to state 79
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 63

    (41) for_statement -> FOR LPAREN ID . IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    IN              shift and go to state 80


state 64

    (42) function_def -> DEF ID LPAREN . parameter_list RPAREN COLON statements
    (43) parameter_list -> . empty
    (44) parameter_list -> . ID
    (45) parameter_list -> . parameter_list COMMA ID
    (60) empty -> .

    ID              shift and go to state 81
    RPAREN          reduce using rule 60 (empty -> .)
    COMMA           reduce using rule 60 (empty -> .)

    parameter_list                 shift and go to state 82
    empty                          shift and go to state 83

state 65

    (20) expression -> expression PLUS . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    term                           shift and go to state 84
    factor                         shift and go to state 47

state 66

    (21) expression -> expression MINUS . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    term                           shift and go to state 85
    factor                         shift and go to state 47

state 67

    (23) term -> term TIMES . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    factor                         shift and go to state 86

state 68

    (24) term -> term DIVIDE . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    factor                         shift and go to state 87

state 69

    (30) factor -> MINUS factor .

    TIMES           reduce using rule 30 (factor -> MINUS factor .)
    DIVIDE          reduce using rule 30 (factor -> MINUS factor .)
    PLUS            reduce using rule 30 (factor -> MINUS factor .)
    MINUS           reduce using rule 30 (factor -> MINUS factor .)
    END             reduce using rule 30 (factor -> MINUS factor .)
    PRINT           reduce using rule 30 (factor -> MINUS factor .)
    ID              reduce using rule 30 (factor -> MINUS factor .)
    IF              reduce using rule 30 (factor -> MINUS factor .)
    WHILE           reduce using rule 30 (factor -> MINUS factor .)
    FOR             reduce using rule 30 (factor -> MINUS factor .)
    DEF             reduce using rule 30 (factor -> MINUS factor .)
    RETURN          reduce using rule 30 (factor -> MINUS factor .)
    BREAK           reduce using rule 30 (factor -> MINUS factor .)
    CONTINUE        reduce using rule 30 (factor -> MINUS factor .)
    PASS            reduce using rule 30 (factor -> MINUS factor .)
    TRY             reduce using rule 30 (factor -> MINUS factor .)
    IMPORT          reduce using rule 30 (factor -> MINUS factor .)
    FROM            reduce using rule 30 (factor -> MINUS factor .)
    CLASS           reduce using rule 30 (factor -> MINUS factor .)
    EXCEPT          reduce using rule 30 (factor -> MINUS factor .)
    ELSE            reduce using rule 30 (factor -> MINUS factor .)
    ELIF            reduce using rule 30 (factor -> MINUS factor .)
    FINALLY         reduce using rule 30 (factor -> MINUS factor .)
    RPAREN          reduce using rule 30 (factor -> MINUS factor .)
    NEWLINE         reduce using rule 30 (factor -> MINUS factor .)
    COMMA           reduce using rule 30 (factor -> MINUS factor .)


state 70

    (29) factor -> LPAREN expression . RPAREN
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          shift and go to state 88
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 71

    (54) try_except_statement -> TRY COLON statements . EXCEPT COLON statements
    (55) try_except_statement -> TRY COLON statements . EXCEPT COLON statements FINALLY COLON statements
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    EXCEPT          shift and go to state 89
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 72

    (57) import_statement -> FROM ID IMPORT . ID

    ID              shift and go to state 90


state 73

    (58) class_definition -> CLASS ID COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 91
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 74

    (59) class_definition -> CLASS ID LPAREN . ID RPAREN COLON statements

    ID              shift and go to state 92


state 75

    (18) print_statement -> PRINT LPAREN expression RPAREN . NEWLINE

    NEWLINE         shift and go to state 93


state 76

    (46) function_call -> ID LPAREN argument_list RPAREN .

    END             reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    PRINT           reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    ID              reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    IF              reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    WHILE           reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    FOR             reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    DEF             reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    RETURN          reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    BREAK           reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    CONTINUE        reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    PASS            reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    TRY             reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    IMPORT          reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    FROM            reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    CLASS           reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    EXCEPT          reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    ELSE            reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    ELIF            reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)
    FINALLY         reduce using rule 46 (function_call -> ID LPAREN argument_list RPAREN .)


state 77

    (49) argument_list -> argument_list COMMA . expression
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    expression                     shift and go to state 94
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 78

    (37) if_statement -> IF LPAREN expression RPAREN . COLON statements
    (38) if_statement -> IF LPAREN expression RPAREN . COLON statements ELSE COLON statements
    (39) if_statement -> IF LPAREN expression RPAREN . COLON statements ELIF LPAREN expression RPAREN COLON statements

    COLON           shift and go to state 95


state 79

    (40) while_statement -> WHILE LPAREN expression RPAREN . COLON statements

    COLON           shift and go to state 96


state 80

    (41) for_statement -> FOR LPAREN ID IN . RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    RANGE           shift and go to state 97


state 81

    (44) parameter_list -> ID .

    RPAREN          reduce using rule 44 (parameter_list -> ID .)
    COMMA           reduce using rule 44 (parameter_list -> ID .)


state 82

    (42) function_def -> DEF ID LPAREN parameter_list . RPAREN COLON statements
    (45) parameter_list -> parameter_list . COMMA ID

    RPAREN          shift and go to state 98
    COMMA           shift and go to state 99


state 83

    (43) parameter_list -> empty .

    RPAREN          reduce using rule 43 (parameter_list -> empty .)
    COMMA           reduce using rule 43 (parameter_list -> empty .)


state 84

    (20) expression -> expression PLUS term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 20 (expression -> expression PLUS term .)
    MINUS           reduce using rule 20 (expression -> expression PLUS term .)
    END             reduce using rule 20 (expression -> expression PLUS term .)
    PRINT           reduce using rule 20 (expression -> expression PLUS term .)
    ID              reduce using rule 20 (expression -> expression PLUS term .)
    IF              reduce using rule 20 (expression -> expression PLUS term .)
    WHILE           reduce using rule 20 (expression -> expression PLUS term .)
    FOR             reduce using rule 20 (expression -> expression PLUS term .)
    DEF             reduce using rule 20 (expression -> expression PLUS term .)
    RETURN          reduce using rule 20 (expression -> expression PLUS term .)
    BREAK           reduce using rule 20 (expression -> expression PLUS term .)
    CONTINUE        reduce using rule 20 (expression -> expression PLUS term .)
    PASS            reduce using rule 20 (expression -> expression PLUS term .)
    TRY             reduce using rule 20 (expression -> expression PLUS term .)
    IMPORT          reduce using rule 20 (expression -> expression PLUS term .)
    FROM            reduce using rule 20 (expression -> expression PLUS term .)
    CLASS           reduce using rule 20 (expression -> expression PLUS term .)
    EXCEPT          reduce using rule 20 (expression -> expression PLUS term .)
    ELSE            reduce using rule 20 (expression -> expression PLUS term .)
    ELIF            reduce using rule 20 (expression -> expression PLUS term .)
    FINALLY         reduce using rule 20 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 20 (expression -> expression PLUS term .)
    NEWLINE         reduce using rule 20 (expression -> expression PLUS term .)
    COMMA           reduce using rule 20 (expression -> expression PLUS term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68


state 85

    (21) expression -> expression MINUS term .
    (23) term -> term . TIMES factor
    (24) term -> term . DIVIDE factor

    PLUS            reduce using rule 21 (expression -> expression MINUS term .)
    MINUS           reduce using rule 21 (expression -> expression MINUS term .)
    END             reduce using rule 21 (expression -> expression MINUS term .)
    PRINT           reduce using rule 21 (expression -> expression MINUS term .)
    ID              reduce using rule 21 (expression -> expression MINUS term .)
    IF              reduce using rule 21 (expression -> expression MINUS term .)
    WHILE           reduce using rule 21 (expression -> expression MINUS term .)
    FOR             reduce using rule 21 (expression -> expression MINUS term .)
    DEF             reduce using rule 21 (expression -> expression MINUS term .)
    RETURN          reduce using rule 21 (expression -> expression MINUS term .)
    BREAK           reduce using rule 21 (expression -> expression MINUS term .)
    CONTINUE        reduce using rule 21 (expression -> expression MINUS term .)
    PASS            reduce using rule 21 (expression -> expression MINUS term .)
    TRY             reduce using rule 21 (expression -> expression MINUS term .)
    IMPORT          reduce using rule 21 (expression -> expression MINUS term .)
    FROM            reduce using rule 21 (expression -> expression MINUS term .)
    CLASS           reduce using rule 21 (expression -> expression MINUS term .)
    EXCEPT          reduce using rule 21 (expression -> expression MINUS term .)
    ELSE            reduce using rule 21 (expression -> expression MINUS term .)
    ELIF            reduce using rule 21 (expression -> expression MINUS term .)
    FINALLY         reduce using rule 21 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 21 (expression -> expression MINUS term .)
    NEWLINE         reduce using rule 21 (expression -> expression MINUS term .)
    COMMA           reduce using rule 21 (expression -> expression MINUS term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68


state 86

    (23) term -> term TIMES factor .

    TIMES           reduce using rule 23 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 23 (term -> term TIMES factor .)
    PLUS            reduce using rule 23 (term -> term TIMES factor .)
    MINUS           reduce using rule 23 (term -> term TIMES factor .)
    END             reduce using rule 23 (term -> term TIMES factor .)
    PRINT           reduce using rule 23 (term -> term TIMES factor .)
    ID              reduce using rule 23 (term -> term TIMES factor .)
    IF              reduce using rule 23 (term -> term TIMES factor .)
    WHILE           reduce using rule 23 (term -> term TIMES factor .)
    FOR             reduce using rule 23 (term -> term TIMES factor .)
    DEF             reduce using rule 23 (term -> term TIMES factor .)
    RETURN          reduce using rule 23 (term -> term TIMES factor .)
    BREAK           reduce using rule 23 (term -> term TIMES factor .)
    CONTINUE        reduce using rule 23 (term -> term TIMES factor .)
    PASS            reduce using rule 23 (term -> term TIMES factor .)
    TRY             reduce using rule 23 (term -> term TIMES factor .)
    IMPORT          reduce using rule 23 (term -> term TIMES factor .)
    FROM            reduce using rule 23 (term -> term TIMES factor .)
    CLASS           reduce using rule 23 (term -> term TIMES factor .)
    EXCEPT          reduce using rule 23 (term -> term TIMES factor .)
    ELSE            reduce using rule 23 (term -> term TIMES factor .)
    ELIF            reduce using rule 23 (term -> term TIMES factor .)
    FINALLY         reduce using rule 23 (term -> term TIMES factor .)
    RPAREN          reduce using rule 23 (term -> term TIMES factor .)
    NEWLINE         reduce using rule 23 (term -> term TIMES factor .)
    COMMA           reduce using rule 23 (term -> term TIMES factor .)


state 87

    (24) term -> term DIVIDE factor .

    TIMES           reduce using rule 24 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 24 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 24 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 24 (term -> term DIVIDE factor .)
    END             reduce using rule 24 (term -> term DIVIDE factor .)
    PRINT           reduce using rule 24 (term -> term DIVIDE factor .)
    ID              reduce using rule 24 (term -> term DIVIDE factor .)
    IF              reduce using rule 24 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 24 (term -> term DIVIDE factor .)
    FOR             reduce using rule 24 (term -> term DIVIDE factor .)
    DEF             reduce using rule 24 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 24 (term -> term DIVIDE factor .)
    BREAK           reduce using rule 24 (term -> term DIVIDE factor .)
    CONTINUE        reduce using rule 24 (term -> term DIVIDE factor .)
    PASS            reduce using rule 24 (term -> term DIVIDE factor .)
    TRY             reduce using rule 24 (term -> term DIVIDE factor .)
    IMPORT          reduce using rule 24 (term -> term DIVIDE factor .)
    FROM            reduce using rule 24 (term -> term DIVIDE factor .)
    CLASS           reduce using rule 24 (term -> term DIVIDE factor .)
    EXCEPT          reduce using rule 24 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 24 (term -> term DIVIDE factor .)
    ELIF            reduce using rule 24 (term -> term DIVIDE factor .)
    FINALLY         reduce using rule 24 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 24 (term -> term DIVIDE factor .)
    NEWLINE         reduce using rule 24 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 24 (term -> term DIVIDE factor .)


state 88

    (29) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    END             reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    FOR             reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    DEF             reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    CONTINUE        reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    PASS            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    TRY             reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    IMPORT          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    FROM            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    CLASS           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    EXCEPT          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    ELIF            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    FINALLY         reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 29 (factor -> LPAREN expression RPAREN .)


state 89

    (54) try_except_statement -> TRY COLON statements EXCEPT . COLON statements
    (55) try_except_statement -> TRY COLON statements EXCEPT . COLON statements FINALLY COLON statements

    COLON           shift and go to state 100


state 90

    (57) import_statement -> FROM ID IMPORT ID .

    END             reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    PRINT           reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    ID              reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    IF              reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    WHILE           reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    FOR             reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    DEF             reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    RETURN          reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    BREAK           reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    CONTINUE        reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    PASS            reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    TRY             reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    IMPORT          reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    FROM            reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    CLASS           reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    EXCEPT          reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    ELSE            reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    ELIF            reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)
    FINALLY         reduce using rule 57 (import_statement -> FROM ID IMPORT ID .)


state 91

    (58) class_definition -> CLASS ID COLON statements .
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 58 (class_definition -> CLASS ID COLON statements .)
    EXCEPT          reduce using rule 58 (class_definition -> CLASS ID COLON statements .)
    ELSE            reduce using rule 58 (class_definition -> CLASS ID COLON statements .)
    ELIF            reduce using rule 58 (class_definition -> CLASS ID COLON statements .)
    FINALLY         reduce using rule 58 (class_definition -> CLASS ID COLON statements .)
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! ID              [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! IF              [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! WHILE           [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! FOR             [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! DEF             [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! RETURN          [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! BREAK           [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! CONTINUE        [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! PASS            [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! TRY             [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! IMPORT          [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! FROM            [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]
  ! CLASS           [ reduce using rule 58 (class_definition -> CLASS ID COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 92

    (59) class_definition -> CLASS ID LPAREN ID . RPAREN COLON statements

    RPAREN          shift and go to state 101


state 93

    (18) print_statement -> PRINT LPAREN expression RPAREN NEWLINE .

    END             reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    PRINT           reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    ID              reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    IF              reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    WHILE           reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    FOR             reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    DEF             reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    RETURN          reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    BREAK           reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    CONTINUE        reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    PASS            reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    TRY             reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    IMPORT          reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    FROM            reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    CLASS           reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    EXCEPT          reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    ELSE            reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    ELIF            reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)
    FINALLY         reduce using rule 18 (print_statement -> PRINT LPAREN expression RPAREN NEWLINE .)


state 94

    (49) argument_list -> argument_list COMMA expression .
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          reduce using rule 49 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 49 (argument_list -> argument_list COMMA expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 95

    (37) if_statement -> IF LPAREN expression RPAREN COLON . statements
    (38) if_statement -> IF LPAREN expression RPAREN COLON . statements ELSE COLON statements
    (39) if_statement -> IF LPAREN expression RPAREN COLON . statements ELIF LPAREN expression RPAREN COLON statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 102
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 96

    (40) while_statement -> WHILE LPAREN expression RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 103
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 97

    (41) for_statement -> FOR LPAREN ID IN RANGE . LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    LPAREN          shift and go to state 104


state 98

    (42) function_def -> DEF ID LPAREN parameter_list RPAREN . COLON statements

    COLON           shift and go to state 105


state 99

    (45) parameter_list -> parameter_list COMMA . ID

    ID              shift and go to state 106


state 100

    (54) try_except_statement -> TRY COLON statements EXCEPT COLON . statements
    (55) try_except_statement -> TRY COLON statements EXCEPT COLON . statements FINALLY COLON statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 107
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 101

    (59) class_definition -> CLASS ID LPAREN ID RPAREN . COLON statements

    COLON           shift and go to state 108


state 102

    (37) if_statement -> IF LPAREN expression RPAREN COLON statements .
    (38) if_statement -> IF LPAREN expression RPAREN COLON statements . ELSE COLON statements
    (39) if_statement -> IF LPAREN expression RPAREN COLON statements . ELIF LPAREN expression RPAREN COLON statements
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .)
    EXCEPT          reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .)
    FINALLY         reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .)
    ELSE            shift and go to state 109
    ELIF            shift and go to state 110
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! ELSE            [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]
  ! ELIF            [ reduce using rule 37 (if_statement -> IF LPAREN expression RPAREN COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 103

    (40) while_statement -> WHILE LPAREN expression RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    EXCEPT          reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    ELSE            reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    ELIF            reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    FINALLY         reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .)
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 40 (while_statement -> WHILE LPAREN expression RPAREN COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 104

    (41) for_statement -> FOR LPAREN ID IN RANGE LPAREN . NUMBER COMMA NUMBER RPAREN RPAREN COLON statements

    NUMBER          shift and go to state 111


state 105

    (42) function_def -> DEF ID LPAREN parameter_list RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 112
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 106

    (45) parameter_list -> parameter_list COMMA ID .

    RPAREN          reduce using rule 45 (parameter_list -> parameter_list COMMA ID .)
    COMMA           reduce using rule 45 (parameter_list -> parameter_list COMMA ID .)


state 107

    (54) try_except_statement -> TRY COLON statements EXCEPT COLON statements .
    (55) try_except_statement -> TRY COLON statements EXCEPT COLON statements . FINALLY COLON statements
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for FINALLY resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    EXCEPT          reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    ELSE            reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    ELIF            reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .)
    FINALLY         shift and go to state 113
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! ID              [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! IF              [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! WHILE           [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FOR             [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! DEF             [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! RETURN          [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! BREAK           [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! CONTINUE        [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! PASS            [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! TRY             [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! IMPORT          [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FROM            [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! CLASS           [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]
  ! FINALLY         [ reduce using rule 54 (try_except_statement -> TRY COLON statements EXCEPT COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 108

    (59) class_definition -> CLASS ID LPAREN ID RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 114
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 109

    (38) if_statement -> IF LPAREN expression RPAREN COLON statements ELSE . COLON statements

    COLON           shift and go to state 115


state 110

    (39) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF . LPAREN expression RPAREN COLON statements

    LPAREN          shift and go to state 116


state 111

    (41) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER . COMMA NUMBER RPAREN RPAREN COLON statements

    COMMA           shift and go to state 117


state 112

    (42) function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    EXCEPT          reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    ELSE            reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    ELIF            reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    FINALLY         reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .)
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 42 (function_def -> DEF ID LPAREN parameter_list RPAREN COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 113

    (55) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY . COLON statements

    COLON           shift and go to state 118


state 114

    (59) class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    EXCEPT          reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    ELSE            reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    ELIF            reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    FINALLY         reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .)
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 59 (class_definition -> CLASS ID LPAREN ID RPAREN COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 115

    (38) if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 119
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 116

    (39) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN . expression RPAREN COLON statements
    (20) expression -> . expression PLUS term
    (21) expression -> . expression MINUS term
    (22) expression -> . term
    (23) term -> . term TIMES factor
    (24) term -> . term DIVIDE factor
    (25) term -> . factor
    (26) factor -> . NUMBER
    (27) factor -> . STRING
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN
    (30) factor -> . MINUS factor

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49
    ID              shift and go to state 50
    LPAREN          shift and go to state 51
    MINUS           shift and go to state 46

    expression                     shift and go to state 120
    term                           shift and go to state 45
    factor                         shift and go to state 47

state 117

    (41) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA . NUMBER RPAREN RPAREN COLON statements

    NUMBER          shift and go to state 121


state 118

    (55) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 122
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 119

    (38) if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    EXCEPT          reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    ELSE            reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    ELIF            reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    FINALLY         reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .)
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! ID              [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! IF              [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! WHILE           [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! FOR             [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! DEF             [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! RETURN          [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! BREAK           [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! CONTINUE        [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! PASS            [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! TRY             [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! IMPORT          [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! FROM            [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]
  ! CLASS           [ reduce using rule 38 (if_statement -> IF LPAREN expression RPAREN COLON statements ELSE COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 120

    (39) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression . RPAREN COLON statements
    (20) expression -> expression . PLUS term
    (21) expression -> expression . MINUS term

    RPAREN          shift and go to state 123
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 121

    (41) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER . RPAREN RPAREN COLON statements

    RPAREN          shift and go to state 124


state 122

    (55) try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    EXCEPT          reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    ELSE            reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    ELIF            reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    FINALLY         reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .)
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! ID              [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! IF              [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! WHILE           [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! FOR             [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! DEF             [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! RETURN          [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! BREAK           [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! CONTINUE        [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! PASS            [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! TRY             [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! IMPORT          [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! FROM            [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]
  ! CLASS           [ reduce using rule 55 (try_except_statement -> TRY COLON statements EXCEPT COLON statements FINALLY COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 123

    (39) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN . COLON statements

    COLON           shift and go to state 125


state 124

    (41) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN . RPAREN COLON statements

    RPAREN          shift and go to state 126


state 125

    (39) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 127
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 126

    (41) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN . COLON statements

    COLON           shift and go to state 128


state 127

    (39) if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    EXCEPT          reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    ELSE            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    ELIF            reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    FINALLY         reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .)
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 39 (if_statement -> IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 128

    (41) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

    statements                     shift and go to state 129
    statement                      shift and go to state 5
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19

state 129

    (41) for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .
    (3) statements -> statements . statement
    (4) statement -> . print_statement
    (5) statement -> . assignment_statement NEWLINE
    (6) statement -> . if_statement
    (7) statement -> . while_statement
    (8) statement -> . for_statement
    (9) statement -> . function_def
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) statement -> . break_statement
    (13) statement -> . continue_statement
    (14) statement -> . pass_statement
    (15) statement -> . try_except_statement
    (16) statement -> . import_statement
    (17) statement -> . class_definition
    (18) print_statement -> . PRINT LPAREN expression RPAREN NEWLINE
    (19) assignment_statement -> . ID ASSIGN expression
    (37) if_statement -> . IF LPAREN expression RPAREN COLON statements
    (38) if_statement -> . IF LPAREN expression RPAREN COLON statements ELSE COLON statements
    (39) if_statement -> . IF LPAREN expression RPAREN COLON statements ELIF LPAREN expression RPAREN COLON statements
    (40) while_statement -> . WHILE LPAREN expression RPAREN COLON statements
    (41) for_statement -> . FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements
    (42) function_def -> . DEF ID LPAREN parameter_list RPAREN COLON statements
    (46) function_call -> . ID LPAREN argument_list RPAREN
    (50) return_statement -> . RETURN expression
    (51) break_statement -> . BREAK
    (52) continue_statement -> . CONTINUE
    (53) pass_statement -> . PASS
    (54) try_except_statement -> . TRY COLON statements EXCEPT COLON statements
    (55) try_except_statement -> . TRY COLON statements EXCEPT COLON statements FINALLY COLON statements
    (56) import_statement -> . IMPORT ID
    (57) import_statement -> . FROM ID IMPORT ID
    (58) class_definition -> . CLASS ID COLON statements
    (59) class_definition -> . CLASS ID LPAREN ID RPAREN COLON statements

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
  ! shift/reduce conflict for TRY resolved as shift
  ! shift/reduce conflict for IMPORT resolved as shift
  ! shift/reduce conflict for FROM resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
    END             reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    EXCEPT          reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    ELSE            reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    ELIF            reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    FINALLY         reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .)
    PRINT           shift and go to state 20
    ID              shift and go to state 21
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    DEF             shift and go to state 25
    RETURN          shift and go to state 26
    BREAK           shift and go to state 27
    CONTINUE        shift and go to state 28
    PASS            shift and go to state 29
    TRY             shift and go to state 30
    IMPORT          shift and go to state 31
    FROM            shift and go to state 32
    CLASS           shift and go to state 33

  ! PRINT           [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! ID              [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! IF              [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! WHILE           [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! FOR             [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! DEF             [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! RETURN          [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! BREAK           [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! CONTINUE        [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! PASS            [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! TRY             [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! IMPORT          [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! FROM            [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]
  ! CLASS           [ reduce using rule 41 (for_statement -> FOR LPAREN ID IN RANGE LPAREN NUMBER COMMA NUMBER RPAREN RPAREN COLON statements .) ]

    statement                      shift and go to state 35
    print_statement                shift and go to state 6
    assignment_statement           shift and go to state 7
    if_statement                   shift and go to state 8
    while_statement                shift and go to state 9
    for_statement                  shift and go to state 10
    function_def                   shift and go to state 11
    function_call                  shift and go to state 12
    return_statement               shift and go to state 13
    break_statement                shift and go to state 14
    continue_statement             shift and go to state 15
    pass_statement                 shift and go to state 16
    try_except_statement           shift and go to state 17
    import_statement               shift and go to state 18
    class_definition               shift and go to state 19
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PRINT in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 91 resolved as shift
WARNING: shift/reduce conflict for FOR in state 91 resolved as shift
WARNING: shift/reduce conflict for DEF in state 91 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 91 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 91 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 91 resolved as shift
WARNING: shift/reduce conflict for PASS in state 91 resolved as shift
WARNING: shift/reduce conflict for TRY in state 91 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 91 resolved as shift
WARNING: shift/reduce conflict for FROM in state 91 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 91 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 102 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 102 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 102 resolved as shift
WARNING: shift/reduce conflict for ID in state 102 resolved as shift
WARNING: shift/reduce conflict for IF in state 102 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 102 resolved as shift
WARNING: shift/reduce conflict for FOR in state 102 resolved as shift
WARNING: shift/reduce conflict for DEF in state 102 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 102 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 102 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 102 resolved as shift
WARNING: shift/reduce conflict for PASS in state 102 resolved as shift
WARNING: shift/reduce conflict for TRY in state 102 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 102 resolved as shift
WARNING: shift/reduce conflict for FROM in state 102 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 102 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 103 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
WARNING: shift/reduce conflict for IF in state 103 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 103 resolved as shift
WARNING: shift/reduce conflict for FOR in state 103 resolved as shift
WARNING: shift/reduce conflict for DEF in state 103 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 103 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 103 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 103 resolved as shift
WARNING: shift/reduce conflict for PASS in state 103 resolved as shift
WARNING: shift/reduce conflict for TRY in state 103 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 103 resolved as shift
WARNING: shift/reduce conflict for FROM in state 103 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 103 resolved as shift
WARNING: shift/reduce conflict for FINALLY in state 107 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 107 resolved as shift
WARNING: shift/reduce conflict for ID in state 107 resolved as shift
WARNING: shift/reduce conflict for IF in state 107 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 107 resolved as shift
WARNING: shift/reduce conflict for FOR in state 107 resolved as shift
WARNING: shift/reduce conflict for DEF in state 107 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 107 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 107 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 107 resolved as shift
WARNING: shift/reduce conflict for PASS in state 107 resolved as shift
WARNING: shift/reduce conflict for TRY in state 107 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 107 resolved as shift
WARNING: shift/reduce conflict for FROM in state 107 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 107 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 112 resolved as shift
WARNING: shift/reduce conflict for ID in state 112 resolved as shift
WARNING: shift/reduce conflict for IF in state 112 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 112 resolved as shift
WARNING: shift/reduce conflict for FOR in state 112 resolved as shift
WARNING: shift/reduce conflict for DEF in state 112 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 112 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 112 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 112 resolved as shift
WARNING: shift/reduce conflict for PASS in state 112 resolved as shift
WARNING: shift/reduce conflict for TRY in state 112 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 112 resolved as shift
WARNING: shift/reduce conflict for FROM in state 112 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 112 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 114 resolved as shift
WARNING: shift/reduce conflict for ID in state 114 resolved as shift
WARNING: shift/reduce conflict for IF in state 114 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 114 resolved as shift
WARNING: shift/reduce conflict for FOR in state 114 resolved as shift
WARNING: shift/reduce conflict for DEF in state 114 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 114 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 114 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 114 resolved as shift
WARNING: shift/reduce conflict for PASS in state 114 resolved as shift
WARNING: shift/reduce conflict for TRY in state 114 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 114 resolved as shift
WARNING: shift/reduce conflict for FROM in state 114 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 114 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 119 resolved as shift
WARNING: shift/reduce conflict for ID in state 119 resolved as shift
WARNING: shift/reduce conflict for IF in state 119 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 119 resolved as shift
WARNING: shift/reduce conflict for FOR in state 119 resolved as shift
WARNING: shift/reduce conflict for DEF in state 119 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 119 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 119 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 119 resolved as shift
WARNING: shift/reduce conflict for PASS in state 119 resolved as shift
WARNING: shift/reduce conflict for TRY in state 119 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 119 resolved as shift
WARNING: shift/reduce conflict for FROM in state 119 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 119 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 122 resolved as shift
WARNING: shift/reduce conflict for ID in state 122 resolved as shift
WARNING: shift/reduce conflict for IF in state 122 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 122 resolved as shift
WARNING: shift/reduce conflict for FOR in state 122 resolved as shift
WARNING: shift/reduce conflict for DEF in state 122 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 122 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 122 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 122 resolved as shift
WARNING: shift/reduce conflict for PASS in state 122 resolved as shift
WARNING: shift/reduce conflict for TRY in state 122 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 122 resolved as shift
WARNING: shift/reduce conflict for FROM in state 122 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 122 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for IF in state 127 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 127 resolved as shift
WARNING: shift/reduce conflict for FOR in state 127 resolved as shift
WARNING: shift/reduce conflict for DEF in state 127 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 127 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 127 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 127 resolved as shift
WARNING: shift/reduce conflict for PASS in state 127 resolved as shift
WARNING: shift/reduce conflict for TRY in state 127 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 127 resolved as shift
WARNING: shift/reduce conflict for FROM in state 127 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 127 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 129 resolved as shift
WARNING: shift/reduce conflict for ID in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 129 resolved as shift
WARNING: shift/reduce conflict for FOR in state 129 resolved as shift
WARNING: shift/reduce conflict for DEF in state 129 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 129 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 129 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 129 resolved as shift
WARNING: shift/reduce conflict for PASS in state 129 resolved as shift
WARNING: shift/reduce conflict for TRY in state 129 resolved as shift
WARNING: shift/reduce conflict for IMPORT in state 129 resolved as shift
WARNING: shift/reduce conflict for FROM in state 129 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 129 resolved as shift
